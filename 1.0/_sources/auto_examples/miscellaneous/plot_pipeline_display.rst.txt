
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e {color: black;background-color: white;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e pre{padding: 0;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-toggleable {background-color: white;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-estimator:hover {background-color: #d4ebff;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-item {z-index: 1;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-parallel-item:only-child::after {width: 0;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e div.sk-text-repr-fallback {display: none;}</style><div id="sk-d27b926b-a43d-40c5-8ce7-30bd5fe5f38e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="987e4ae2-5a26-4b6a-87d0-8400827d9e09" type="checkbox" ><label for="987e4ae2-5a26-4b6a-87d0-8400827d9e09" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e6b9729-c456-4f3d-9d3d-a4ec7032f96d" type="checkbox" ><label for="4e6b9729-c456-4f3d-9d3d-a4ec7032f96d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc91d46a-1c96-4b03-ad2e-e6097bff468f" type="checkbox" ><label for="dc91d46a-1c96-4b03-ad2e-e6097bff468f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 {color: black;background-color: white;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 pre{padding: 0;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-toggleable {background-color: white;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-item {z-index: 1;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-parallel-item:only-child::after {width: 0;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1a23f37f-27fd-40da-96ac-7700b60529a3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1a23f37f-27fd-40da-96ac-7700b60529a3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5659d400-7a7c-44ec-9082-442cf1d42c16" type="checkbox" ><label for="5659d400-7a7c-44ec-9082-442cf1d42c16" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c538f09b-3bf0-4ef7-ba7d-50111a33e9ac" type="checkbox" ><label for="c538f09b-3bf0-4ef7-ba7d-50111a33e9ac" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11353ff3-9181-4ef6-a8fb-7caf89e20a91" type="checkbox" ><label for="11353ff3-9181-4ef6-a8fb-7caf89e20a91" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="effefb0a-425e-4bee-bba9-00687ae2cd17" type="checkbox" ><label for="effefb0a-425e-4bee-bba9-00687ae2cd17" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 {color: black;background-color: white;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 pre{padding: 0;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-toggleable {background-color: white;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-item {z-index: 1;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-parallel-item:only-child::after {width: 0;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c82ce982-ca80-4ca7-b0e5-f12c3e396ff7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b83f2280-e2ff-475d-aa43-f6a66913d329" type="checkbox" ><label for="b83f2280-e2ff-475d-aa43-f6a66913d329" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59cfeb31-e4e9-4b34-9d5f-bf4f62d46e2b" type="checkbox" ><label for="59cfeb31-e4e9-4b34-9d5f-bf4f62d46e2b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5873460f-f508-407c-a8bb-513999bf4161" type="checkbox" ><label for="5873460f-f508-407c-a8bb-513999bf4161" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 {color: black;background-color: white;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 pre{padding: 0;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-toggleable {background-color: white;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-item {z-index: 1;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-parallel-item:only-child::after {width: 0;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ee25a1d0-3166-43cf-9445-92b7b9eb8ec6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de84b2cb-4dbd-4400-96a0-b77ce8c5eaa5" type="checkbox" ><label for="de84b2cb-4dbd-4400-96a0-b77ce8c5eaa5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="272720f2-40b4-4029-9884-7bb380676e3f" type="checkbox" ><label for="272720f2-40b4-4029-9884-7bb380676e3f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba4bd357-4c9e-4469-a998-911b1c27ff1f" type="checkbox" ><label for="ba4bd357-4c9e-4469-a998-911b1c27ff1f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c5a18c7-ade8-4918-9cf9-c2ee48b21fcf" type="checkbox" ><label for="5c5a18c7-ade8-4918-9cf9-c2ee48b21fcf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80a6fab6-2eed-4db5-961e-58d4b5400479" type="checkbox" ><label for="80a6fab6-2eed-4db5-961e-58d4b5400479" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a417bbd9-e91d-4f60-92dc-8b061445343e" type="checkbox" ><label for="a417bbd9-e91d-4f60-92dc-8b061445343e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49c02067-113e-4e3f-b202-bcd1762a5469" type="checkbox" ><label for="49c02067-113e-4e3f-b202-bcd1762a5469" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7deb8e39-564b-45a4-801c-072b7bd7212e" type="checkbox" ><label for="7deb8e39-564b-45a4-801c-072b7bd7212e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6879b59-53a9-418d-9276-c301abc2ed92" type="checkbox" ><label for="a6879b59-53a9-418d-9276-c301abc2ed92" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 {color: black;background-color: white;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 pre{padding: 0;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-toggleable {background-color: white;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-item {z-index: 1;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-parallel-item:only-child::after {width: 0;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e989cfef-fa0a-4e5c-a9c4-8ec31c1fdcc8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="349bde0b-805f-4caa-9177-9b460ccc7dcf" type="checkbox" ><label for="349bde0b-805f-4caa-9177-9b460ccc7dcf" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b06beedb-59e7-4135-a9a9-3748e923c257" type="checkbox" ><label for="b06beedb-59e7-4135-a9a9-3748e923c257" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cefffd07-0237-4ccd-83b3-cc1f05988cf6" type="checkbox" ><label for="cefffd07-0237-4ccd-83b3-cc1f05988cf6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b047cf8d-0036-469c-928d-d80ece146616" type="checkbox" ><label for="b047cf8d-0036-469c-928d-d80ece146616" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57b45751-6c55-40c9-97a4-e6898b1ff21f" type="checkbox" ><label for="57b45751-6c55-40c9-97a4-e6898b1ff21f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54421f06-878a-468b-84f6-07a4b2047326" type="checkbox" ><label for="54421f06-878a-468b-84f6-07a4b2047326" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1441e3bb-9edc-4331-bc1b-048a2914a466" type="checkbox" ><label for="1441e3bb-9edc-4331-bc1b-048a2914a466" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc82cb22-ff85-4b8a-b5f0-03093c155532" type="checkbox" ><label for="bc82cb22-ff85-4b8a-b5f0-03093c155532" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c62b69b-337c-414a-abdd-555da7c0c067" type="checkbox" ><label for="7c62b69b-337c-414a-abdd-555da7c0c067" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.132 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/1.0.X?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
