
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-227acaed-2bad-4947-8090-2fae3132f353 {color: black;background-color: white;}#sk-227acaed-2bad-4947-8090-2fae3132f353 pre{padding: 0;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-toggleable {background-color: white;}#sk-227acaed-2bad-4947-8090-2fae3132f353 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-227acaed-2bad-4947-8090-2fae3132f353 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-227acaed-2bad-4947-8090-2fae3132f353 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-227acaed-2bad-4947-8090-2fae3132f353 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-227acaed-2bad-4947-8090-2fae3132f353 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-227acaed-2bad-4947-8090-2fae3132f353 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-estimator:hover {background-color: #d4ebff;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-item {z-index: 1;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-parallel-item:only-child::after {width: 0;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-227acaed-2bad-4947-8090-2fae3132f353 div.sk-text-repr-fallback {display: none;}</style><div id="sk-227acaed-2bad-4947-8090-2fae3132f353" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9d1896b-e4f7-4555-986b-efbde763c11d" type="checkbox" ><label for="e9d1896b-e4f7-4555-986b-efbde763c11d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eed5145c-bb38-48f1-9ad2-1fe4110c050e" type="checkbox" ><label for="eed5145c-bb38-48f1-9ad2-1fe4110c050e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb7424b2-449e-4b97-9d86-5dcff3ec3e85" type="checkbox" ><label for="bb7424b2-449e-4b97-9d86-5dcff3ec3e85" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 {color: black;background-color: white;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 pre{padding: 0;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-toggleable {background-color: white;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-item {z-index: 1;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-parallel-item:only-child::after {width: 0;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6a6f40f8-394b-4dde-b56a-2789e6a688d6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="457719a8-256e-45b0-8caf-30c83968de37" type="checkbox" ><label for="457719a8-256e-45b0-8caf-30c83968de37" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f08e635-6fa0-4e9d-9fb2-deba236ec21f" type="checkbox" ><label for="7f08e635-6fa0-4e9d-9fb2-deba236ec21f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74feb6f8-4276-4df7-8f6a-8c7fe0cd694e" type="checkbox" ><label for="74feb6f8-4276-4df7-8f6a-8c7fe0cd694e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31a94355-aa22-4845-a7e6-ff63de1610ab" type="checkbox" ><label for="31a94355-aa22-4845-a7e6-ff63de1610ab" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 {color: black;background-color: white;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 pre{padding: 0;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-toggleable {background-color: white;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-item {z-index: 1;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-parallel-item:only-child::after {width: 0;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dc5cbca1-e2d8-483a-9ec4-25062f110485 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dc5cbca1-e2d8-483a-9ec4-25062f110485" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a3165f9-89c0-46ea-ada7-ea755a389378" type="checkbox" ><label for="0a3165f9-89c0-46ea-ada7-ea755a389378" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b147e56-e5c7-4a1f-8295-b95d159ef066" type="checkbox" ><label for="9b147e56-e5c7-4a1f-8295-b95d159ef066" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c30e437d-a164-4d1a-80a1-d37ff8087042" type="checkbox" ><label for="c30e437d-a164-4d1a-80a1-d37ff8087042" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 {color: black;background-color: white;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 pre{padding: 0;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-toggleable {background-color: white;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-item {z-index: 1;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-parallel-item:only-child::after {width: 0;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eb3068f2-857a-49d5-9b72-fc1cf64c0251" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49c0e7ce-d39e-4c6c-81fc-e93ff3d01c25" type="checkbox" ><label for="49c0e7ce-d39e-4c6c-81fc-e93ff3d01c25" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84ffeae9-ceb5-498d-9edb-f064289dc459" type="checkbox" ><label for="84ffeae9-ceb5-498d-9edb-f064289dc459" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ba2f5cd-d11d-41ea-9291-a2073b339c52" type="checkbox" ><label for="7ba2f5cd-d11d-41ea-9291-a2073b339c52" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07e13a31-2c1a-4590-a765-cde5aa0872a0" type="checkbox" ><label for="07e13a31-2c1a-4590-a765-cde5aa0872a0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="967d7ea6-a680-4697-8ce7-3e0d24c21c12" type="checkbox" ><label for="967d7ea6-a680-4697-8ce7-3e0d24c21c12" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f78261cb-dad4-48c6-93e1-4045c23613bd" type="checkbox" ><label for="f78261cb-dad4-48c6-93e1-4045c23613bd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="775f8db1-3537-4c29-a9a2-766732ab0249" type="checkbox" ><label for="775f8db1-3537-4c29-a9a2-766732ab0249" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c35c7ff8-15f3-4450-bb1e-9f3fd1fe0f65" type="checkbox" ><label for="c35c7ff8-15f3-4450-bb1e-9f3fd1fe0f65" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="483f06d6-3c67-4878-90ff-f083fe01174b" type="checkbox" ><label for="483f06d6-3c67-4878-90ff-f083fe01174b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 {color: black;background-color: white;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 pre{padding: 0;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-toggleable {background-color: white;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-item {z-index: 1;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-parallel-item:only-child::after {width: 0;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dfa9ad2f-ee15-44fd-b66d-70a9023ec4c7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e5c6385-6aca-40fd-a26a-f7a69e321fd0" type="checkbox" ><label for="7e5c6385-6aca-40fd-a26a-f7a69e321fd0" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49a1c312-4308-462a-b0bd-82f02275f834" type="checkbox" ><label for="49a1c312-4308-462a-b0bd-82f02275f834" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14ffcea4-3888-4a9f-8421-77520a2e2be5" type="checkbox" ><label for="14ffcea4-3888-4a9f-8421-77520a2e2be5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61182e81-622d-4797-8173-5a178342297d" type="checkbox" ><label for="61182e81-622d-4797-8173-5a178342297d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b02ecd90-86fa-42b5-9565-00b7bb5bdb99" type="checkbox" ><label for="b02ecd90-86fa-42b5-9565-00b7bb5bdb99" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f84be3a5-724e-494d-9b8d-043d9252f203" type="checkbox" ><label for="f84be3a5-724e-494d-9b8d-043d9252f203" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="879f1c60-7c22-494e-94d0-dd54c5e57ae4" type="checkbox" ><label for="879f1c60-7c22-494e-94d0-dd54c5e57ae4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53614e0d-fc97-43e6-82fe-d8a1b9453fde" type="checkbox" ><label for="53614e0d-fc97-43e6-82fe-d8a1b9453fde" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92ad41eb-d3f8-436c-840f-458a4972e97b" type="checkbox" ><label for="92ad41eb-d3f8-436c-840f-458a4972e97b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/1.0.X?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
