
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 {color: black;background-color: white;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 pre{padding: 0;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-toggleable {background-color: white;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-item {z-index: 1;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-parallel-item:only-child::after {width: 0;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7fe9183e-f775-47fc-b2d8-7cc8d52c1c60" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c15c12b-757b-4144-bd56-28e909f1ac65" type="checkbox" ><label for="5c15c12b-757b-4144-bd56-28e909f1ac65" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a312188-5e63-46cc-9626-f98108ae14e6" type="checkbox" ><label for="5a312188-5e63-46cc-9626-f98108ae14e6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c4ad708-b46e-4259-9785-14d89b760ecd" type="checkbox" ><label for="0c4ad708-b46e-4259-9785-14d89b760ecd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 {color: black;background-color: white;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 pre{padding: 0;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-toggleable {background-color: white;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-item {z-index: 1;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-parallel-item:only-child::after {width: 0;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a4daa265-19a6-494b-b00d-e6280d754fe0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a4daa265-19a6-494b-b00d-e6280d754fe0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4f14030-25a2-4f56-a592-00ad76256ec4" type="checkbox" ><label for="e4f14030-25a2-4f56-a592-00ad76256ec4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa671717-9fed-4152-9c46-c91dc30b7e74" type="checkbox" ><label for="fa671717-9fed-4152-9c46-c91dc30b7e74" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="741f08ce-5c1c-40a8-adc9-9d824e3b0e12" type="checkbox" ><label for="741f08ce-5c1c-40a8-adc9-9d824e3b0e12" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b35ba42-e882-4f1b-8506-b700437c07a9" type="checkbox" ><label for="3b35ba42-e882-4f1b-8506-b700437c07a9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 {color: black;background-color: white;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 pre{padding: 0;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-toggleable {background-color: white;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-item {z-index: 1;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-parallel-item:only-child::after {width: 0;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-df9fe66d-faba-4da2-85c9-06d768b106f8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-df9fe66d-faba-4da2-85c9-06d768b106f8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d05bdb1b-3d62-4ee9-a30b-573296429379" type="checkbox" ><label for="d05bdb1b-3d62-4ee9-a30b-573296429379" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9aaef202-3a2b-43c1-ba37-2527d336ce34" type="checkbox" ><label for="9aaef202-3a2b-43c1-ba37-2527d336ce34" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4678228-1472-45af-9c7a-354cad88ed08" type="checkbox" ><label for="a4678228-1472-45af-9c7a-354cad88ed08" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 {color: black;background-color: white;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 pre{padding: 0;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-toggleable {background-color: white;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-item {z-index: 1;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-parallel-item:only-child::after {width: 0;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a06be6a0-2ae0-41bf-ac93-fefe04030891 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a06be6a0-2ae0-41bf-ac93-fefe04030891" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfbc31b3-d22f-4807-a217-4bb778b43555" type="checkbox" ><label for="bfbc31b3-d22f-4807-a217-4bb778b43555" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4578d4ad-6810-40f0-8713-0505a2bbcc0f" type="checkbox" ><label for="4578d4ad-6810-40f0-8713-0505a2bbcc0f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf21b835-6c14-42ee-bfd5-4007636768bb" type="checkbox" ><label for="bf21b835-6c14-42ee-bfd5-4007636768bb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1057aa73-c84b-4b9b-b792-8ceec7f630a6" type="checkbox" ><label for="1057aa73-c84b-4b9b-b792-8ceec7f630a6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3091311-f7e4-45e3-a140-6362fba09dee" type="checkbox" ><label for="c3091311-f7e4-45e3-a140-6362fba09dee" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25906730-43e4-4440-89cd-55252624af41" type="checkbox" ><label for="25906730-43e4-4440-89cd-55252624af41" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6e38633-002a-4016-9aea-b26186ece33c" type="checkbox" ><label for="b6e38633-002a-4016-9aea-b26186ece33c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a614cfe3-e8ce-4c37-9e8e-382195b5cf89" type="checkbox" ><label for="a614cfe3-e8ce-4c37-9e8e-382195b5cf89" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85e4a0ac-3d08-4d53-b7cc-68f18970b654" type="checkbox" ><label for="85e4a0ac-3d08-4d53-b7cc-68f18970b654" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e7af9a27-f180-4def-8b16-ca44b169e029 {color: black;background-color: white;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 pre{padding: 0;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-toggleable {background-color: white;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-item {z-index: 1;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-parallel-item:only-child::after {width: 0;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e7af9a27-f180-4def-8b16-ca44b169e029 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e7af9a27-f180-4def-8b16-ca44b169e029" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68089aa1-18ec-411a-9e73-7f52900a4fc1" type="checkbox" ><label for="68089aa1-18ec-411a-9e73-7f52900a4fc1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20cce942-c386-421b-a024-d1b6420b10d1" type="checkbox" ><label for="20cce942-c386-421b-a024-d1b6420b10d1" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cafbc74a-75fb-4233-9aab-86801ec7095f" type="checkbox" ><label for="cafbc74a-75fb-4233-9aab-86801ec7095f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a27fadc-f50c-4c11-a7f2-3ca8ce3c8b8a" type="checkbox" ><label for="4a27fadc-f50c-4c11-a7f2-3ca8ce3c8b8a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfcdbc38-040d-47a5-b1a9-5e3b813d3616" type="checkbox" ><label for="bfcdbc38-040d-47a5-b1a9-5e3b813d3616" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a11f239-b1fb-469d-9b83-2a54f05ce4a6" type="checkbox" ><label for="2a11f239-b1fb-469d-9b83-2a54f05ce4a6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72dbb36d-5acb-4c14-947b-40f89a07e6d5" type="checkbox" ><label for="72dbb36d-5acb-4c14-947b-40f89a07e6d5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61150ee4-1b85-475b-a37f-dd25bfcbdc0f" type="checkbox" ><label for="61150ee4-1b85-475b-a37f-dd25bfcbdc0f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12a61564-9614-4571-afe8-9ad04b46b61d" type="checkbox" ><label for="12a61564-9614-4571-afe8-9ad04b46b61d" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/1.0.X?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
