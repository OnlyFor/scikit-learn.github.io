
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c {color: black;background-color: white;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c pre{padding: 0;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-toggleable {background-color: white;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-estimator:hover {background-color: #d4ebff;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-item {z-index: 1;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-parallel-item:only-child::after {width: 0;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c div.sk-text-repr-fallback {display: none;}</style><div id="sk-d79f0aa0-0711-44dc-b8c4-3a5d6b994f5c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="297364f7-7b6d-4cd2-b1be-ecd284018b6a" type="checkbox" ><label for="297364f7-7b6d-4cd2-b1be-ecd284018b6a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fa96540-d9c1-4f0e-a001-3dcb8df87bb6" type="checkbox" ><label for="1fa96540-d9c1-4f0e-a001-3dcb8df87bb6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7f54f17-fa63-409e-bbae-bc57681b65fa" type="checkbox" ><label for="e7f54f17-fa63-409e-bbae-bc57681b65fa" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 {color: black;background-color: white;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 pre{padding: 0;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-toggleable {background-color: white;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-estimator:hover {background-color: #d4ebff;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-item {z-index: 1;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-parallel-item:only-child::after {width: 0;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305 div.sk-text-repr-fallback {display: none;}</style><div id="sk-66b8aa64-6179-4f07-9e8c-e3dd0a85e305" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3223a934-bc65-4fe8-973d-a4e864815ae0" type="checkbox" ><label for="3223a934-bc65-4fe8-973d-a4e864815ae0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c041d23-46d5-4686-9fc3-9f378e468c09" type="checkbox" ><label for="3c041d23-46d5-4686-9fc3-9f378e468c09" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b84db830-14e6-4533-80db-6e136fc9725d" type="checkbox" ><label for="b84db830-14e6-4533-80db-6e136fc9725d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ad1eccd-e9dc-4cae-955f-bcc61d56a055" type="checkbox" ><label for="6ad1eccd-e9dc-4cae-955f-bcc61d56a055" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d {color: black;background-color: white;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d pre{padding: 0;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-toggleable {background-color: white;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-estimator:hover {background-color: #d4ebff;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-item {z-index: 1;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-parallel-item:only-child::after {width: 0;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-961055e7-72e9-4ba8-a22d-76ffeb14380d div.sk-text-repr-fallback {display: none;}</style><div id="sk-961055e7-72e9-4ba8-a22d-76ffeb14380d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c38fc69d-3fec-42d9-8418-3ea8eac56885" type="checkbox" ><label for="c38fc69d-3fec-42d9-8418-3ea8eac56885" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd649883-6148-45fe-83b3-331624daa9c7" type="checkbox" ><label for="bd649883-6148-45fe-83b3-331624daa9c7" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fb73aa5-f13d-4867-a1b5-1b19c86729ed" type="checkbox" ><label for="0fb73aa5-f13d-4867-a1b5-1b19c86729ed" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf {color: black;background-color: white;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf pre{padding: 0;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-toggleable {background-color: white;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-estimator:hover {background-color: #d4ebff;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-item {z-index: 1;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-parallel-item:only-child::after {width: 0;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf div.sk-text-repr-fallback {display: none;}</style><div id="sk-621a9694-8983-41ba-9aa8-8401ed3f4fdf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18293401-5e0c-4506-9c18-5990c7c374f5" type="checkbox" ><label for="18293401-5e0c-4506-9c18-5990c7c374f5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb978632-f67e-43d1-ad59-0cd731b2357a" type="checkbox" ><label for="bb978632-f67e-43d1-ad59-0cd731b2357a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa447bf9-2542-4d4c-9270-82f5609d5597" type="checkbox" ><label for="aa447bf9-2542-4d4c-9270-82f5609d5597" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8c51426-a0ba-40e4-8c01-389462eff3e0" type="checkbox" ><label for="b8c51426-a0ba-40e4-8c01-389462eff3e0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7934b9d-c109-4c45-8f82-1cae11fcbeb7" type="checkbox" ><label for="a7934b9d-c109-4c45-8f82-1cae11fcbeb7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1d2b9bd-f03c-427c-90c1-f7513ef191ab" type="checkbox" ><label for="d1d2b9bd-f03c-427c-90c1-f7513ef191ab" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfdc7618-7b78-408f-97ed-de280f090391" type="checkbox" ><label for="cfdc7618-7b78-408f-97ed-de280f090391" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f73d14b1-ec71-4a7d-8936-d81a79c45407" type="checkbox" ><label for="f73d14b1-ec71-4a7d-8936-d81a79c45407" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b7fc238-ade6-4a38-9f9c-169074369b49" type="checkbox" ><label for="1b7fc238-ade6-4a38-9f9c-169074369b49" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 {color: black;background-color: white;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 pre{padding: 0;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-toggleable {background-color: white;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-item {z-index: 1;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-parallel-item:only-child::after {width: 0;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-43c8dd0c-914a-47ab-8eb0-a574cd69e4c8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50178d04-6b27-4b7c-bf1d-b628e6d2bed9" type="checkbox" ><label for="50178d04-6b27-4b7c-bf1d-b628e6d2bed9" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7bab8080-1999-43fd-82c2-adc04213f426" type="checkbox" ><label for="7bab8080-1999-43fd-82c2-adc04213f426" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1bad2d1a-5c3f-47b8-b861-c654322c7a59" type="checkbox" ><label for="1bad2d1a-5c3f-47b8-b861-c654322c7a59" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a26760f1-651c-4189-a032-973086784713" type="checkbox" ><label for="a26760f1-651c-4189-a032-973086784713" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6cb99ff4-0582-4aa2-b545-2846a65edab1" type="checkbox" ><label for="6cb99ff4-0582-4aa2-b545-2846a65edab1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1f3bca7-c92f-45d2-8fe8-40da65427013" type="checkbox" ><label for="c1f3bca7-c92f-45d2-8fe8-40da65427013" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e469a3b-f0ac-4ea3-8e8f-da5e0b3451b4" type="checkbox" ><label for="4e469a3b-f0ac-4ea3-8e8f-da5e0b3451b4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4572c99d-99a1-49fc-88e6-1ae2acb9675c" type="checkbox" ><label for="4572c99d-99a1-49fc-88e6-1ae2acb9675c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="525425df-2acd-48d9-bd3a-afa7b746c5d4" type="checkbox" ><label for="525425df-2acd-48d9-bd3a-afa7b746c5d4" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
