
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc {color: black;background-color: white;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc pre{padding: 0;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-toggleable {background-color: white;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-estimator:hover {background-color: #d4ebff;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-item {z-index: 1;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-parallel-item:only-child::after {width: 0;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc div.sk-text-repr-fallback {display: none;}</style><div id="sk-6a143b0e-2ea9-48c4-a46e-d021cb47bedc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15eed760-ee36-4737-b7c1-2b886058d061" type="checkbox" ><label for="15eed760-ee36-4737-b7c1-2b886058d061" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2c1af49-1c79-485c-8137-7a0ff57aea19" type="checkbox" ><label for="e2c1af49-1c79-485c-8137-7a0ff57aea19" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7d305e9-04a6-44c3-81cf-1e9383602d40" type="checkbox" ><label for="a7d305e9-04a6-44c3-81cf-1e9383602d40" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 {color: black;background-color: white;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 pre{padding: 0;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-toggleable {background-color: white;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-item {z-index: 1;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-parallel-item:only-child::after {width: 0;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3120c8a7-1c1e-455d-81e4-08702a8f7996 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3120c8a7-1c1e-455d-81e4-08702a8f7996" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee258135-5499-4de8-b7f5-86ec352ab757" type="checkbox" ><label for="ee258135-5499-4de8-b7f5-86ec352ab757" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5292794a-f2ab-4eb4-a1d9-adad9db2013f" type="checkbox" ><label for="5292794a-f2ab-4eb4-a1d9-adad9db2013f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4824820b-ce6c-4c74-b89a-5a7e3f51fd17" type="checkbox" ><label for="4824820b-ce6c-4c74-b89a-5a7e3f51fd17" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05c365ee-6a72-4ab8-a16b-3e350dd3fdf0" type="checkbox" ><label for="05c365ee-6a72-4ab8-a16b-3e350dd3fdf0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a {color: black;background-color: white;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a pre{padding: 0;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-toggleable {background-color: white;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-estimator:hover {background-color: #d4ebff;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-item {z-index: 1;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-parallel-item:only-child::after {width: 0;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a div.sk-text-repr-fallback {display: none;}</style><div id="sk-b9a4761f-7ea3-4d17-b08c-f4eba6f7ef2a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fdb305f-ed28-479a-8bbe-6a0e2d2a0611" type="checkbox" ><label for="9fdb305f-ed28-479a-8bbe-6a0e2d2a0611" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a74e2f8-8f20-4de3-a2c4-f03b9842b2b5" type="checkbox" ><label for="0a74e2f8-8f20-4de3-a2c4-f03b9842b2b5" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86ff438e-7580-4669-8329-fea9c909c442" type="checkbox" ><label for="86ff438e-7580-4669-8329-fea9c909c442" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 {color: black;background-color: white;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 pre{padding: 0;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-toggleable {background-color: white;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-item {z-index: 1;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-parallel-item:only-child::after {width: 0;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c0d3ab7d-c7f1-4ff9-b7e7-3aff2ce5e875" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="333ed8cb-1a92-4be9-8bc3-f890cb6f6d54" type="checkbox" ><label for="333ed8cb-1a92-4be9-8bc3-f890cb6f6d54" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33f29c51-c1cd-436f-b700-046877c33712" type="checkbox" ><label for="33f29c51-c1cd-436f-b700-046877c33712" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d6d5ea0-af75-4755-a0ee-b722e8d66da4" type="checkbox" ><label for="1d6d5ea0-af75-4755-a0ee-b722e8d66da4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d606f844-8249-4b99-966b-6d2bbb52607d" type="checkbox" ><label for="d606f844-8249-4b99-966b-6d2bbb52607d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb8cdf82-90ab-4049-be30-da2146f365c7" type="checkbox" ><label for="fb8cdf82-90ab-4049-be30-da2146f365c7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e6a7dfc-71dd-42b4-8f05-77178af52786" type="checkbox" ><label for="7e6a7dfc-71dd-42b4-8f05-77178af52786" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e212737b-9706-4f02-9e34-5fd83cd7665c" type="checkbox" ><label for="e212737b-9706-4f02-9e34-5fd83cd7665c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f020bba5-4e96-4e72-8310-9e3c578a5ba2" type="checkbox" ><label for="f020bba5-4e96-4e72-8310-9e3c578a5ba2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="474d917d-4aca-440c-b58e-564103f8e16b" type="checkbox" ><label for="474d917d-4aca-440c-b58e-564103f8e16b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 {color: black;background-color: white;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 pre{padding: 0;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-toggleable {background-color: white;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-item {z-index: 1;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-parallel-item:only-child::after {width: 0;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0ff6250d-dc13-4ee5-a861-518fd641f671 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0ff6250d-dc13-4ee5-a861-518fd641f671" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="435ebcfd-3129-4d8e-8f2e-408969e26901" type="checkbox" ><label for="435ebcfd-3129-4d8e-8f2e-408969e26901" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07b2e0c9-69d3-4cc4-bfd7-f0233d80cb7c" type="checkbox" ><label for="07b2e0c9-69d3-4cc4-bfd7-f0233d80cb7c" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="255252e7-3da0-4d00-92a3-f750725fc0d7" type="checkbox" ><label for="255252e7-3da0-4d00-92a3-f750725fc0d7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3554c39-d379-4cf3-8693-289c842092bc" type="checkbox" ><label for="b3554c39-d379-4cf3-8693-289c842092bc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f08251b9-d57f-4af3-8255-27d51faed335" type="checkbox" ><label for="f08251b9-d57f-4af3-8255-27d51faed335" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e01e90d0-b8e1-4c7e-9929-a4a6ac3db527" type="checkbox" ><label for="e01e90d0-b8e1-4c7e-9929-a4a6ac3db527" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52874865-281f-4504-b83b-4ce3cd532a1c" type="checkbox" ><label for="52874865-281f-4504-b83b-4ce3cd532a1c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc164b0b-ceb0-4948-ab39-15e78b8c048f" type="checkbox" ><label for="cc164b0b-ceb0-4948-ab39-15e78b8c048f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8505726c-f4f1-4b27-abbc-5a3d8c0cd651" type="checkbox" ><label for="8505726c-f4f1-4b27-abbc-5a3d8c0cd651" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
