
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e {color: black;background-color: white;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e pre{padding: 0;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-toggleable {background-color: white;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-estimator:hover {background-color: #d4ebff;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-item {z-index: 1;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-parallel-item:only-child::after {width: 0;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e div.sk-text-repr-fallback {display: none;}</style><div id="sk-d26d6bc8-d6b9-4e8b-851c-e514f1b8fd7e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53364451-9337-4abd-a3de-cc83bed9b6b5" type="checkbox" ><label for="53364451-9337-4abd-a3de-cc83bed9b6b5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92e7a74c-7585-4901-b787-cce588d80a50" type="checkbox" ><label for="92e7a74c-7585-4901-b787-cce588d80a50" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="992da3ef-4d19-4ba1-9f5a-4a4cf5ca5369" type="checkbox" ><label for="992da3ef-4d19-4ba1-9f5a-4a4cf5ca5369" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 {color: black;background-color: white;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 pre{padding: 0;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-toggleable {background-color: white;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-item {z-index: 1;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-parallel-item:only-child::after {width: 0;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-967c1156-bbc7-45a6-be1e-06e036dc50c7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-967c1156-bbc7-45a6-be1e-06e036dc50c7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d06d9d6-9a04-4506-b990-311089427420" type="checkbox" ><label for="8d06d9d6-9a04-4506-b990-311089427420" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="413f60ae-921d-4c9a-adf0-5fe86410c39b" type="checkbox" ><label for="413f60ae-921d-4c9a-adf0-5fe86410c39b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac929902-2853-48e6-99dd-94b8d21db272" type="checkbox" ><label for="ac929902-2853-48e6-99dd-94b8d21db272" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d236ca6-5eed-4558-b991-999fd6eedc38" type="checkbox" ><label for="0d236ca6-5eed-4558-b991-999fd6eedc38" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-44588740-805f-43fc-aa10-900176ec1625 {color: black;background-color: white;}#sk-44588740-805f-43fc-aa10-900176ec1625 pre{padding: 0;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-toggleable {background-color: white;}#sk-44588740-805f-43fc-aa10-900176ec1625 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-44588740-805f-43fc-aa10-900176ec1625 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-44588740-805f-43fc-aa10-900176ec1625 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-44588740-805f-43fc-aa10-900176ec1625 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-44588740-805f-43fc-aa10-900176ec1625 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-44588740-805f-43fc-aa10-900176ec1625 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-estimator:hover {background-color: #d4ebff;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-item {z-index: 1;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-parallel-item:only-child::after {width: 0;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-44588740-805f-43fc-aa10-900176ec1625 div.sk-text-repr-fallback {display: none;}</style><div id="sk-44588740-805f-43fc-aa10-900176ec1625" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85510bae-7d3c-4f0b-a925-22bd37f0f331" type="checkbox" ><label for="85510bae-7d3c-4f0b-a925-22bd37f0f331" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ece45a4-36ca-4b89-bdca-e360fdde397a" type="checkbox" ><label for="2ece45a4-36ca-4b89-bdca-e360fdde397a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68358c62-22a4-4288-b1ec-852272d2dcb3" type="checkbox" ><label for="68358c62-22a4-4288-b1ec-852272d2dcb3" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6346a7b9-b18c-4de0-8552-b5132719426a {color: black;background-color: white;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a pre{padding: 0;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-toggleable {background-color: white;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-estimator:hover {background-color: #d4ebff;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-item {z-index: 1;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-parallel-item:only-child::after {width: 0;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6346a7b9-b18c-4de0-8552-b5132719426a div.sk-text-repr-fallback {display: none;}</style><div id="sk-6346a7b9-b18c-4de0-8552-b5132719426a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b91e2512-96ea-4eea-a0be-9db0f61bc974" type="checkbox" ><label for="b91e2512-96ea-4eea-a0be-9db0f61bc974" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5412ed0-a52d-4364-82e5-fd6bc8a58ea0" type="checkbox" ><label for="a5412ed0-a52d-4364-82e5-fd6bc8a58ea0" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9f8520c-3184-4365-b211-65ac9e41cc16" type="checkbox" ><label for="d9f8520c-3184-4365-b211-65ac9e41cc16" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="066f3adb-da36-403e-91fe-e8685026d824" type="checkbox" ><label for="066f3adb-da36-403e-91fe-e8685026d824" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38b1d0fa-df2f-488e-b278-31bc6e80a763" type="checkbox" ><label for="38b1d0fa-df2f-488e-b278-31bc6e80a763" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c00eb05a-7d92-4554-ad4e-89f6cc5a5ce7" type="checkbox" ><label for="c00eb05a-7d92-4554-ad4e-89f6cc5a5ce7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac4fc4ee-6186-446b-853e-45f72e583d05" type="checkbox" ><label for="ac4fc4ee-6186-446b-853e-45f72e583d05" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="010c2d8b-5c9d-4c98-9ee7-a13e57f59dd6" type="checkbox" ><label for="010c2d8b-5c9d-4c98-9ee7-a13e57f59dd6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd1186f9-4a2c-410a-adc4-99ba823ba854" type="checkbox" ><label for="cd1186f9-4a2c-410a-adc4-99ba823ba854" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 {color: black;background-color: white;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 pre{padding: 0;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-toggleable {background-color: white;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-item {z-index: 1;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-parallel-item:only-child::after {width: 0;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1b0493fc-8f3d-4e53-96d9-1a53c2428df8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f335df50-2fdd-4a47-b0b6-4d20fcf79578" type="checkbox" ><label for="f335df50-2fdd-4a47-b0b6-4d20fcf79578" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7cb13c0-ce58-4705-b330-70af4c96c8d2" type="checkbox" ><label for="d7cb13c0-ce58-4705-b330-70af4c96c8d2" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45707037-a768-4832-ad4e-844ffee210da" type="checkbox" ><label for="45707037-a768-4832-ad4e-844ffee210da" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="658e5ace-14fd-44e7-af98-e6ddb7d39647" type="checkbox" ><label for="658e5ace-14fd-44e7-af98-e6ddb7d39647" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87457432-dded-41a0-901e-a22a2cd35123" type="checkbox" ><label for="87457432-dded-41a0-901e-a22a2cd35123" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f22cc37c-e7ac-40e5-9799-e43a7063d7b6" type="checkbox" ><label for="f22cc37c-e7ac-40e5-9799-e43a7063d7b6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1aa1589-d220-4880-9ce2-ddc743004861" type="checkbox" ><label for="e1aa1589-d220-4880-9ce2-ddc743004861" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75c99c04-1611-4ec9-927d-30c6658b8c87" type="checkbox" ><label for="75c99c04-1611-4ec9-927d-30c6658b8c87" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="386ff870-5d9b-49ca-ac25-4097a99ffccf" type="checkbox" ><label for="386ff870-5d9b-49ca-ac25-4097a99ffccf" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.111 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
