
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e4be80e7-2bb9-4909-bae7-506086a2555f {color: black;background-color: white;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f pre{padding: 0;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-toggleable {background-color: white;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-estimator:hover {background-color: #d4ebff;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-item {z-index: 1;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-parallel-item:only-child::after {width: 0;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e4be80e7-2bb9-4909-bae7-506086a2555f div.sk-text-repr-fallback {display: none;}</style><div id="sk-e4be80e7-2bb9-4909-bae7-506086a2555f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7afa1dd5-4fa3-4410-9a4c-3a67d33ddf65" type="checkbox" ><label for="7afa1dd5-4fa3-4410-9a4c-3a67d33ddf65" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1e4554a-5778-4b44-bf97-4473ca4810f0" type="checkbox" ><label for="b1e4554a-5778-4b44-bf97-4473ca4810f0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6eedfa90-d72f-4633-95b4-212f435c8750" type="checkbox" ><label for="6eedfa90-d72f-4633-95b4-212f435c8750" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 {color: black;background-color: white;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 pre{padding: 0;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-toggleable {background-color: white;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-item {z-index: 1;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-parallel-item:only-child::after {width: 0;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0bd4036c-42ca-4eb7-ac84-7d9d016345b5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="923682b4-22d0-4abd-80dc-9753946a7176" type="checkbox" ><label for="923682b4-22d0-4abd-80dc-9753946a7176" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8206723d-6e94-4c0e-b9cd-96ddb8fa1987" type="checkbox" ><label for="8206723d-6e94-4c0e-b9cd-96ddb8fa1987" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4c0bb7a-9117-4e6f-be46-78a2d7051f78" type="checkbox" ><label for="c4c0bb7a-9117-4e6f-be46-78a2d7051f78" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07d901cc-7758-4e17-85de-b26263e9fa12" type="checkbox" ><label for="07d901cc-7758-4e17-85de-b26263e9fa12" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 {color: black;background-color: white;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 pre{padding: 0;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-toggleable {background-color: white;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-item {z-index: 1;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-parallel-item:only-child::after {width: 0;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2e5adf2f-0868-4ecd-b7ce-5e69bc032cd0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbe9a71b-7b70-49d8-821c-f134b299f6e4" type="checkbox" ><label for="cbe9a71b-7b70-49d8-821c-f134b299f6e4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8c7582b-53c6-4876-9ea6-909d9624c375" type="checkbox" ><label for="d8c7582b-53c6-4876-9ea6-909d9624c375" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57a15abd-e6fb-4c57-8ad9-303154628196" type="checkbox" ><label for="57a15abd-e6fb-4c57-8ad9-303154628196" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e {color: black;background-color: white;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e pre{padding: 0;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-toggleable {background-color: white;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-estimator:hover {background-color: #d4ebff;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-item {z-index: 1;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-parallel-item:only-child::after {width: 0;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e div.sk-text-repr-fallback {display: none;}</style><div id="sk-ea51f5e5-1ee7-406a-ad5a-aa62dc1ccc6e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e3b6b26-1016-4e14-ba53-f5c870de482f" type="checkbox" ><label for="1e3b6b26-1016-4e14-ba53-f5c870de482f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80e53e90-c674-40f6-9cbb-6c98b59b1ab7" type="checkbox" ><label for="80e53e90-c674-40f6-9cbb-6c98b59b1ab7" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69c95c2e-acf0-4154-9cd5-147396bcca56" type="checkbox" ><label for="69c95c2e-acf0-4154-9cd5-147396bcca56" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db542e42-b239-4806-9c43-0b64c3d3b773" type="checkbox" ><label for="db542e42-b239-4806-9c43-0b64c3d3b773" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="822f16ca-9717-434b-a3f8-0c1c4eb88c7b" type="checkbox" ><label for="822f16ca-9717-434b-a3f8-0c1c4eb88c7b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5a10b4f-591a-4cb6-a3b7-5e455c13ea8e" type="checkbox" ><label for="f5a10b4f-591a-4cb6-a3b7-5e455c13ea8e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdff902e-f9c6-4daa-82e3-de4a26e43c4f" type="checkbox" ><label for="bdff902e-f9c6-4daa-82e3-de4a26e43c4f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecd9fbc7-18fb-4299-8b7f-af0b2c6137a0" type="checkbox" ><label for="ecd9fbc7-18fb-4299-8b7f-af0b2c6137a0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6dc8a1d1-1bd4-467e-953c-0373db299372" type="checkbox" ><label for="6dc8a1d1-1bd4-467e-953c-0373db299372" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c7c59d11-d281-4776-b30b-308eedc7173e {color: black;background-color: white;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e pre{padding: 0;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-toggleable {background-color: white;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-estimator:hover {background-color: #d4ebff;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-item {z-index: 1;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-parallel-item:only-child::after {width: 0;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c7c59d11-d281-4776-b30b-308eedc7173e div.sk-text-repr-fallback {display: none;}</style><div id="sk-c7c59d11-d281-4776-b30b-308eedc7173e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="148147ea-92e3-45f4-8848-e1ebb6464fca" type="checkbox" ><label for="148147ea-92e3-45f4-8848-e1ebb6464fca" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5bf5c15-150c-491d-b832-2a46d7be068c" type="checkbox" ><label for="b5bf5c15-150c-491d-b832-2a46d7be068c" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb41993b-13e8-4c03-a8a1-c261d49662d2" type="checkbox" ><label for="bb41993b-13e8-4c03-a8a1-c261d49662d2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d982c1a2-0d13-4e44-beda-9a2e4cde49d0" type="checkbox" ><label for="d982c1a2-0d13-4e44-beda-9a2e4cde49d0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e3644d9-d471-408b-8b7d-fae6f3dd23e9" type="checkbox" ><label for="2e3644d9-d471-408b-8b7d-fae6f3dd23e9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad34bd53-0948-4c7d-ba06-c87270e6935f" type="checkbox" ><label for="ad34bd53-0948-4c7d-ba06-c87270e6935f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97428b91-0bfc-414b-9451-863e9e40febf" type="checkbox" ><label for="97428b91-0bfc-414b-9451-863e9e40febf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3665c21d-3c82-4473-93be-74b1bdfda907" type="checkbox" ><label for="3665c21d-3c82-4473-93be-74b1bdfda907" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3fa7825-fc6b-4d35-9608-a70d0acc3bf2" type="checkbox" ><label for="c3fa7825-fc6b-4d35-9608-a70d0acc3bf2" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
