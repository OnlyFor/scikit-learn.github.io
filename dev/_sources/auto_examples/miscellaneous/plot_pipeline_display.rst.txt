
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 {color: black;background-color: white;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 pre{padding: 0;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-toggleable {background-color: white;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-estimator:hover {background-color: #d4ebff;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-item {z-index: 1;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-parallel-item:only-child::after {width: 0;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-05e48f99-c1e1-4822-89c5-fc7b2d514925 div.sk-text-repr-fallback {display: none;}</style><div id="sk-05e48f99-c1e1-4822-89c5-fc7b2d514925" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40a45e81-1f47-4f71-a5b1-bce19fe0abb5" type="checkbox" ><label for="40a45e81-1f47-4f71-a5b1-bce19fe0abb5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36a07351-7930-454f-8045-853fbc919ff3" type="checkbox" ><label for="36a07351-7930-454f-8045-853fbc919ff3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8fd894a-67f4-48d5-a934-b7a0d5e46c5c" type="checkbox" ><label for="e8fd894a-67f4-48d5-a934-b7a0d5e46c5c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 {color: black;background-color: white;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 pre{padding: 0;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-toggleable {background-color: white;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-item {z-index: 1;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-parallel-item:only-child::after {width: 0;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c5eebe84-a075-4084-8faa-4873f3341ec7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c5eebe84-a075-4084-8faa-4873f3341ec7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88444877-4b9f-4c62-8999-c9d3b8ac8d84" type="checkbox" ><label for="88444877-4b9f-4c62-8999-c9d3b8ac8d84" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa505100-32a2-412f-8a33-f16ea97488a8" type="checkbox" ><label for="fa505100-32a2-412f-8a33-f16ea97488a8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="312c2c8e-4341-4461-be19-3f2c1161e338" type="checkbox" ><label for="312c2c8e-4341-4461-be19-3f2c1161e338" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a5f2b8d-40bf-44db-a4d4-27fe6ea1219d" type="checkbox" ><label for="3a5f2b8d-40bf-44db-a4d4-27fe6ea1219d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ac27b668-7663-4bee-9c54-8300ae949064 {color: black;background-color: white;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 pre{padding: 0;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-toggleable {background-color: white;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-item {z-index: 1;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-parallel-item:only-child::after {width: 0;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ac27b668-7663-4bee-9c54-8300ae949064 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ac27b668-7663-4bee-9c54-8300ae949064" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6de27e47-4644-4f90-8044-142dedb90b0a" type="checkbox" ><label for="6de27e47-4644-4f90-8044-142dedb90b0a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8d9a8d4-b674-4e3f-b235-976c1773ad49" type="checkbox" ><label for="f8d9a8d4-b674-4e3f-b235-976c1773ad49" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eef91b7a-83df-413f-823c-fe3833c70617" type="checkbox" ><label for="eef91b7a-83df-413f-823c-fe3833c70617" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cb1587c5-6680-428e-a3df-7a36d167c927 {color: black;background-color: white;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 pre{padding: 0;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-toggleable {background-color: white;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-item {z-index: 1;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-parallel-item:only-child::after {width: 0;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cb1587c5-6680-428e-a3df-7a36d167c927 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cb1587c5-6680-428e-a3df-7a36d167c927" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2cc7078-463e-4ad2-a631-c0d0f6b0d5be" type="checkbox" ><label for="a2cc7078-463e-4ad2-a631-c0d0f6b0d5be" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e236b125-466f-4c96-b70f-62db4b8f6937" type="checkbox" ><label for="e236b125-466f-4c96-b70f-62db4b8f6937" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9abb4b57-0057-4808-80a9-e83c4c3b7bde" type="checkbox" ><label for="9abb4b57-0057-4808-80a9-e83c4c3b7bde" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="634514fa-48b6-440a-8326-6a70be8fbfd1" type="checkbox" ><label for="634514fa-48b6-440a-8326-6a70be8fbfd1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d667361c-3df0-40da-8035-ae75d08a92df" type="checkbox" ><label for="d667361c-3df0-40da-8035-ae75d08a92df" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c448fe6a-afd5-43c4-87fd-1f7a394d6452" type="checkbox" ><label for="c448fe6a-afd5-43c4-87fd-1f7a394d6452" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4326782-4eec-424c-9590-e32549e6c700" type="checkbox" ><label for="d4326782-4eec-424c-9590-e32549e6c700" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="feb01f1a-df15-45f2-b45f-ea3568b74481" type="checkbox" ><label for="feb01f1a-df15-45f2-b45f-ea3568b74481" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8830df2f-72d6-49a2-95af-b46fa5e66fb9" type="checkbox" ><label for="8830df2f-72d6-49a2-95af-b46fa5e66fb9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3676531a-5797-4882-ae8d-be8c1d8b8add {color: black;background-color: white;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add pre{padding: 0;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-toggleable {background-color: white;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-estimator:hover {background-color: #d4ebff;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-item {z-index: 1;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-parallel-item:only-child::after {width: 0;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3676531a-5797-4882-ae8d-be8c1d8b8add div.sk-text-repr-fallback {display: none;}</style><div id="sk-3676531a-5797-4882-ae8d-be8c1d8b8add" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dbce37a-fe7a-45e1-b17f-dbeec92496e5" type="checkbox" ><label for="0dbce37a-fe7a-45e1-b17f-dbeec92496e5" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7124df6e-9be8-4791-be9c-ccd19187e17d" type="checkbox" ><label for="7124df6e-9be8-4791-be9c-ccd19187e17d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd1b4d91-7556-4dfc-8cd2-bb4ad972a3d3" type="checkbox" ><label for="cd1b4d91-7556-4dfc-8cd2-bb4ad972a3d3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31be7b48-f750-45c5-8fbb-eceeaf8321d2" type="checkbox" ><label for="31be7b48-f750-45c5-8fbb-eceeaf8321d2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b61a3e89-946e-41c8-bba5-91fa6d87edf9" type="checkbox" ><label for="b61a3e89-946e-41c8-bba5-91fa6d87edf9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33ef873b-24d9-4f24-8d70-0a5cf591d77f" type="checkbox" ><label for="33ef873b-24d9-4f24-8d70-0a5cf591d77f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="287df2a3-0cc9-4e7a-87c6-95646328e85b" type="checkbox" ><label for="287df2a3-0cc9-4e7a-87c6-95646328e85b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2c830b3-94ed-48be-a84a-9048cfa71566" type="checkbox" ><label for="a2c830b3-94ed-48be-a84a-9048cfa71566" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ccf45e5-415c-4479-a69a-3b9d078f9f1c" type="checkbox" ><label for="3ccf45e5-415c-4479-a69a-3b9d078f9f1c" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
