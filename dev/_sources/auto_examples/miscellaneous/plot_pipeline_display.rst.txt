
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe {color: black;background-color: white;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe pre{padding: 0;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-toggleable {background-color: white;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-estimator:hover {background-color: #d4ebff;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-item {z-index: 1;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-parallel-item:only-child::after {width: 0;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe div.sk-text-repr-fallback {display: none;}</style><div id="sk-81d1e76d-e3dd-4b87-9f13-a62e35e98abe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="991f5e33-987f-4286-bdda-eb3a630a90f1" type="checkbox" ><label for="991f5e33-987f-4286-bdda-eb3a630a90f1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0167f185-5a0b-4290-b302-747b262f908c" type="checkbox" ><label for="0167f185-5a0b-4290-b302-747b262f908c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16ec3fd5-f4f4-4f7b-a00d-16f87afa04ba" type="checkbox" ><label for="16ec3fd5-f4f4-4f7b-a00d-16f87afa04ba" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a {color: black;background-color: white;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a pre{padding: 0;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-toggleable {background-color: white;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-estimator:hover {background-color: #d4ebff;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-item {z-index: 1;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-parallel-item:only-child::after {width: 0;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a div.sk-text-repr-fallback {display: none;}</style><div id="sk-71ef948b-3d5e-4c4d-a643-7e326c47cd5a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6664babb-8d43-4b6b-9a0a-e742596f9fbd" type="checkbox" ><label for="6664babb-8d43-4b6b-9a0a-e742596f9fbd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61a74545-57c3-49fb-a7e9-73a20647febb" type="checkbox" ><label for="61a74545-57c3-49fb-a7e9-73a20647febb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="111932e3-ea58-413d-bc12-86ce38bec52c" type="checkbox" ><label for="111932e3-ea58-413d-bc12-86ce38bec52c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c5c7762-d6d2-49d6-88aa-cdbe3f91e820" type="checkbox" ><label for="8c5c7762-d6d2-49d6-88aa-cdbe3f91e820" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b {color: black;background-color: white;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b pre{padding: 0;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-toggleable {background-color: white;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-estimator:hover {background-color: #d4ebff;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-item {z-index: 1;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-parallel-item:only-child::after {width: 0;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b72d81d2-ccac-4534-aae1-1bba332aff0b div.sk-text-repr-fallback {display: none;}</style><div id="sk-b72d81d2-ccac-4534-aae1-1bba332aff0b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57fa49a3-6a0e-4313-b4de-95296394645a" type="checkbox" ><label for="57fa49a3-6a0e-4313-b4de-95296394645a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e21968ea-a3b5-4342-b8e6-d1ff3c9e3ad4" type="checkbox" ><label for="e21968ea-a3b5-4342-b8e6-d1ff3c9e3ad4" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0269f4ae-60ab-4b8b-941e-d51bd3f7742a" type="checkbox" ><label for="0269f4ae-60ab-4b8b-941e-d51bd3f7742a" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe {color: black;background-color: white;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe pre{padding: 0;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-toggleable {background-color: white;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-estimator:hover {background-color: #d4ebff;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-item {z-index: 1;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-parallel-item:only-child::after {width: 0;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f2a71eef-0a7f-43e5-95a7-620076927ebe div.sk-text-repr-fallback {display: none;}</style><div id="sk-f2a71eef-0a7f-43e5-95a7-620076927ebe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b09aff99-abee-4a4e-b493-2598babed45f" type="checkbox" ><label for="b09aff99-abee-4a4e-b493-2598babed45f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="939e5b9c-302f-4a13-928f-94ec37ffd8ef" type="checkbox" ><label for="939e5b9c-302f-4a13-928f-94ec37ffd8ef" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bee8fca-fe3f-4fce-b55a-b1cc799c5371" type="checkbox" ><label for="4bee8fca-fe3f-4fce-b55a-b1cc799c5371" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85804c69-c3ab-45fc-8d4b-9226084dffac" type="checkbox" ><label for="85804c69-c3ab-45fc-8d4b-9226084dffac" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50532259-5ddc-44f3-b0f4-10853b79c91c" type="checkbox" ><label for="50532259-5ddc-44f3-b0f4-10853b79c91c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac6c1961-a6cd-4e68-9545-580d815f23ff" type="checkbox" ><label for="ac6c1961-a6cd-4e68-9545-580d815f23ff" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="003c01b0-5d28-4851-bc0b-d0eed5759e6c" type="checkbox" ><label for="003c01b0-5d28-4851-bc0b-d0eed5759e6c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25d53574-c89b-4c29-8789-a5f6665655f0" type="checkbox" ><label for="25d53574-c89b-4c29-8789-a5f6665655f0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52f7c1d2-cf18-4e3d-94ab-8f8bbdda819d" type="checkbox" ><label for="52f7c1d2-cf18-4e3d-94ab-8f8bbdda819d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 {color: black;background-color: white;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 pre{padding: 0;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-toggleable {background-color: white;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-item {z-index: 1;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-parallel-item:only-child::after {width: 0;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-640e563c-fc2d-4316-bafa-65bf696b1bc4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-640e563c-fc2d-4316-bafa-65bf696b1bc4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="596a0983-3b0d-4344-98ce-242979af17be" type="checkbox" ><label for="596a0983-3b0d-4344-98ce-242979af17be" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ec0c526-df65-46e9-a81a-c1eaee47a659" type="checkbox" ><label for="9ec0c526-df65-46e9-a81a-c1eaee47a659" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1cfb1cc-6c3f-41d8-b8e9-acd3584a49fc" type="checkbox" ><label for="f1cfb1cc-6c3f-41d8-b8e9-acd3584a49fc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67cfd9af-89e2-4d2e-9a6e-d13e8f8c8e2d" type="checkbox" ><label for="67cfd9af-89e2-4d2e-9a6e-d13e8f8c8e2d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19e476c5-51c9-4f79-978e-3e730235794e" type="checkbox" ><label for="19e476c5-51c9-4f79-978e-3e730235794e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c997b84-e304-4f1c-9a7a-1a6a8e2fe736" type="checkbox" ><label for="8c997b84-e304-4f1c-9a7a-1a6a8e2fe736" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90280109-ef83-47cc-b043-9b97b8dde576" type="checkbox" ><label for="90280109-ef83-47cc-b043-9b97b8dde576" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71f5da0d-04fa-46fa-99a9-a83e1a938153" type="checkbox" ><label for="71f5da0d-04fa-46fa-99a9-a83e1a938153" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c54b0593-57e9-4b63-8ad3-cda7a9c75431" type="checkbox" ><label for="c54b0593-57e9-4b63-8ad3-cda7a9c75431" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
