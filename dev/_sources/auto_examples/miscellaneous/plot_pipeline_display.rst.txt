
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d {color: black;background-color: white;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d pre{padding: 0;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-toggleable {background-color: white;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-estimator:hover {background-color: #d4ebff;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-item {z-index: 1;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-parallel-item:only-child::after {width: 0;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d div.sk-text-repr-fallback {display: none;}</style><div id="sk-62f57e22-7f9a-4e7a-87f0-79d843f9871d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5721619-226e-4248-a76f-e9ea721b66ff" type="checkbox" ><label for="b5721619-226e-4248-a76f-e9ea721b66ff" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7df3e81a-2404-4388-bc78-f0c7a6997eec" type="checkbox" ><label for="7df3e81a-2404-4388-bc78-f0c7a6997eec" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="add519f2-78cc-4904-8a15-f5c932da4790" type="checkbox" ><label for="add519f2-78cc-4904-8a15-f5c932da4790" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b {color: black;background-color: white;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b pre{padding: 0;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-toggleable {background-color: white;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-estimator:hover {background-color: #d4ebff;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-item {z-index: 1;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-parallel-item:only-child::after {width: 0;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b div.sk-text-repr-fallback {display: none;}</style><div id="sk-ef7dee6e-4e6f-49a2-8889-0d56848a6b0b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7b139c7-4ebd-48e1-9c08-8b75e0ab9362" type="checkbox" ><label for="e7b139c7-4ebd-48e1-9c08-8b75e0ab9362" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94d27fff-3361-4fc8-897b-d6582f022423" type="checkbox" ><label for="94d27fff-3361-4fc8-897b-d6582f022423" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11cd265e-1c43-4eaa-a57d-d0723d333813" type="checkbox" ><label for="11cd265e-1c43-4eaa-a57d-d0723d333813" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72acbc6b-b943-46db-8c1f-86c63fcb4e98" type="checkbox" ><label for="72acbc6b-b943-46db-8c1f-86c63fcb4e98" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d {color: black;background-color: white;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d pre{padding: 0;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-toggleable {background-color: white;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-estimator:hover {background-color: #d4ebff;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-item {z-index: 1;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-parallel-item:only-child::after {width: 0;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-03c51cb7-d1f1-4070-8a0a-559197bf622d div.sk-text-repr-fallback {display: none;}</style><div id="sk-03c51cb7-d1f1-4070-8a0a-559197bf622d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08860fa9-93ae-42b1-aece-ba35d17990a9" type="checkbox" ><label for="08860fa9-93ae-42b1-aece-ba35d17990a9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="348f1fac-289a-41ba-9bc4-8c7d937ac8c3" type="checkbox" ><label for="348f1fac-289a-41ba-9bc4-8c7d937ac8c3" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f907ee26-9129-4f0a-bf2d-834efc4bd965" type="checkbox" ><label for="f907ee26-9129-4f0a-bf2d-834efc4bd965" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c {color: black;background-color: white;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c pre{padding: 0;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-toggleable {background-color: white;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-estimator:hover {background-color: #d4ebff;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-item {z-index: 1;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-parallel-item:only-child::after {width: 0;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1263dc86-f63d-4ca9-b7ef-28144850c29c div.sk-text-repr-fallback {display: none;}</style><div id="sk-1263dc86-f63d-4ca9-b7ef-28144850c29c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f19391b2-62b9-4d7f-8181-833d2c77bcc8" type="checkbox" ><label for="f19391b2-62b9-4d7f-8181-833d2c77bcc8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7ecbc19-91a6-4277-9801-ad3262fc723c" type="checkbox" ><label for="e7ecbc19-91a6-4277-9801-ad3262fc723c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="753863b2-c3a2-4939-9778-05191cd453fa" type="checkbox" ><label for="753863b2-c3a2-4939-9778-05191cd453fa" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a8a5377-d7be-4419-b9d0-3c9a67ba9deb" type="checkbox" ><label for="0a8a5377-d7be-4419-b9d0-3c9a67ba9deb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85307b79-9c15-4f18-b32f-7683fe2dd55a" type="checkbox" ><label for="85307b79-9c15-4f18-b32f-7683fe2dd55a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3e6dcd8-c2f8-49ae-9b74-1ba0f668f509" type="checkbox" ><label for="b3e6dcd8-c2f8-49ae-9b74-1ba0f668f509" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43f7f634-bae5-46cb-bce8-ecd809085375" type="checkbox" ><label for="43f7f634-bae5-46cb-bce8-ecd809085375" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2326af64-1fe7-4fb3-bc40-b3d597c17d53" type="checkbox" ><label for="2326af64-1fe7-4fb3-bc40-b3d597c17d53" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bda5b9f2-57d6-48b1-a566-3de6a88e4394" type="checkbox" ><label for="bda5b9f2-57d6-48b1-a566-3de6a88e4394" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 {color: black;background-color: white;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 pre{padding: 0;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-toggleable {background-color: white;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-item {z-index: 1;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-parallel-item:only-child::after {width: 0;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e221e428-f8d7-4c2e-b01a-aec36d0c1a02" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82d5b2de-219c-4e23-8184-e967a417a09c" type="checkbox" ><label for="82d5b2de-219c-4e23-8184-e967a417a09c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="263d6e57-0b78-42ee-b28f-8481312a56f2" type="checkbox" ><label for="263d6e57-0b78-42ee-b28f-8481312a56f2" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e8f4d86-87f6-469a-b5da-0c39b6945983" type="checkbox" ><label for="4e8f4d86-87f6-469a-b5da-0c39b6945983" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1f62f2c-0b62-4f0e-82a9-745a5ab61784" type="checkbox" ><label for="d1f62f2c-0b62-4f0e-82a9-745a5ab61784" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5f765b5-499b-4aa0-bcb4-094418bb2dcb" type="checkbox" ><label for="f5f765b5-499b-4aa0-bcb4-094418bb2dcb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a28e7d75-49b7-4f7d-a2ce-12c157574270" type="checkbox" ><label for="a28e7d75-49b7-4f7d-a2ce-12c157574270" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddb390d9-3098-4a2c-a803-97f0dbba1383" type="checkbox" ><label for="ddb390d9-3098-4a2c-a803-97f0dbba1383" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="194114e5-a33f-46a1-91cc-5de9409e324e" type="checkbox" ><label for="194114e5-a33f-46a1-91cc-5de9409e324e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05845251-adf7-443b-a43f-dafe2fd4a8e7" type="checkbox" ><label for="05845251-adf7-443b-a43f-dafe2fd4a8e7" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.104 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
