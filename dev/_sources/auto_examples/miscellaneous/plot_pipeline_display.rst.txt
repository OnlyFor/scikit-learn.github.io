
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8ad35009-b331-4229-8a97-ed7713d50e20 {color: black;background-color: white;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 pre{padding: 0;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-toggleable {background-color: white;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-item {z-index: 1;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-parallel-item:only-child::after {width: 0;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8ad35009-b331-4229-8a97-ed7713d50e20 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8ad35009-b331-4229-8a97-ed7713d50e20" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14ede489-c539-4e10-8cde-20bd78153bd8" type="checkbox" ><label for="14ede489-c539-4e10-8cde-20bd78153bd8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acce683e-2dfe-4cb7-8406-569d832c0082" type="checkbox" ><label for="acce683e-2dfe-4cb7-8406-569d832c0082" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75feb423-5c7c-4bde-b330-4bed61993a9a" type="checkbox" ><label for="75feb423-5c7c-4bde-b330-4bed61993a9a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e05afd22-892b-4581-89b2-06e4b10b0280 {color: black;background-color: white;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 pre{padding: 0;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-toggleable {background-color: white;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-item {z-index: 1;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-parallel-item:only-child::after {width: 0;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e05afd22-892b-4581-89b2-06e4b10b0280 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e05afd22-892b-4581-89b2-06e4b10b0280" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="270ae2b0-898c-4b99-89d6-6a243591c53f" type="checkbox" ><label for="270ae2b0-898c-4b99-89d6-6a243591c53f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91308aab-3e25-40e7-b920-c4275b0ed5ce" type="checkbox" ><label for="91308aab-3e25-40e7-b920-c4275b0ed5ce" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="898e4ce9-b556-48c8-a3bc-ad821864c567" type="checkbox" ><label for="898e4ce9-b556-48c8-a3bc-ad821864c567" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2616d058-7649-4e03-b654-b7a461567899" type="checkbox" ><label for="2616d058-7649-4e03-b654-b7a461567899" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5cf60f4b-5cad-43ba-9646-376f0931426a {color: black;background-color: white;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a pre{padding: 0;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-toggleable {background-color: white;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-estimator:hover {background-color: #d4ebff;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-item {z-index: 1;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-parallel-item:only-child::after {width: 0;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5cf60f4b-5cad-43ba-9646-376f0931426a div.sk-text-repr-fallback {display: none;}</style><div id="sk-5cf60f4b-5cad-43ba-9646-376f0931426a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4aace16-72b5-485b-a15a-ea5c9b12be12" type="checkbox" ><label for="b4aace16-72b5-485b-a15a-ea5c9b12be12" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c571912c-6241-4052-b8dc-6e4ef7fbce84" type="checkbox" ><label for="c571912c-6241-4052-b8dc-6e4ef7fbce84" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e5080f4-4dd0-44e7-badf-abf6314e05cd" type="checkbox" ><label for="9e5080f4-4dd0-44e7-badf-abf6314e05cd" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1b347613-fc84-4563-891b-0ab2d9a4519b {color: black;background-color: white;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b pre{padding: 0;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-toggleable {background-color: white;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-estimator:hover {background-color: #d4ebff;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-item {z-index: 1;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-parallel-item:only-child::after {width: 0;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1b347613-fc84-4563-891b-0ab2d9a4519b div.sk-text-repr-fallback {display: none;}</style><div id="sk-1b347613-fc84-4563-891b-0ab2d9a4519b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1376eaf1-f0f6-4bfe-83b9-ca1459bf7107" type="checkbox" ><label for="1376eaf1-f0f6-4bfe-83b9-ca1459bf7107" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d23f0e68-e5ee-499a-9517-1ec2a2998ccd" type="checkbox" ><label for="d23f0e68-e5ee-499a-9517-1ec2a2998ccd" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e747155-51f1-4b6b-94c0-0d6b16a6cecc" type="checkbox" ><label for="9e747155-51f1-4b6b-94c0-0d6b16a6cecc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b9ecd11-8af4-4a60-b228-1096fcb5098b" type="checkbox" ><label for="5b9ecd11-8af4-4a60-b228-1096fcb5098b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad00f0b9-02e0-4b56-a26e-edb62304637b" type="checkbox" ><label for="ad00f0b9-02e0-4b56-a26e-edb62304637b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1650c99-1e22-42a2-8036-c3710cc4add3" type="checkbox" ><label for="f1650c99-1e22-42a2-8036-c3710cc4add3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9a1e08d-0559-410b-91c1-8a6004fc8c94" type="checkbox" ><label for="f9a1e08d-0559-410b-91c1-8a6004fc8c94" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b317635-9ea3-4b41-bb10-b30287858bcd" type="checkbox" ><label for="6b317635-9ea3-4b41-bb10-b30287858bcd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7de95e9-a2ba-40f2-844f-159b9fce4fa0" type="checkbox" ><label for="d7de95e9-a2ba-40f2-844f-159b9fce4fa0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d {color: black;background-color: white;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d pre{padding: 0;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-toggleable {background-color: white;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-estimator:hover {background-color: #d4ebff;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-item {z-index: 1;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-parallel-item:only-child::after {width: 0;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d div.sk-text-repr-fallback {display: none;}</style><div id="sk-03126ecd-4e1d-46c9-a17c-16bb58f31d0d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a28065f9-4695-4794-a15b-294af1b01cfb" type="checkbox" ><label for="a28065f9-4695-4794-a15b-294af1b01cfb" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90528df9-6028-464b-affe-f3ba3505b7f0" type="checkbox" ><label for="90528df9-6028-464b-affe-f3ba3505b7f0" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0db24ec5-d63a-4dd0-bd66-faf36e44cd02" type="checkbox" ><label for="0db24ec5-d63a-4dd0-bd66-faf36e44cd02" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61ed02c7-bac3-4457-b610-0acdd9a8ff1c" type="checkbox" ><label for="61ed02c7-bac3-4457-b610-0acdd9a8ff1c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5b86554-2d0a-4d9e-9cf2-1c26d38e0e56" type="checkbox" ><label for="a5b86554-2d0a-4d9e-9cf2-1c26d38e0e56" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39bd6ffa-012d-45ec-968c-88c8b7406108" type="checkbox" ><label for="39bd6ffa-012d-45ec-968c-88c8b7406108" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c8a5f4e-1660-4969-b9d8-c05efa3e0cc8" type="checkbox" ><label for="4c8a5f4e-1660-4969-b9d8-c05efa3e0cc8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81406b38-1307-4211-9d8c-d79b67cdac2b" type="checkbox" ><label for="81406b38-1307-4211-9d8c-d79b67cdac2b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48ad0e86-26c4-4b92-aa75-9eed84396a75" type="checkbox" ><label for="48ad0e86-26c4-4b92-aa75-9eed84396a75" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
