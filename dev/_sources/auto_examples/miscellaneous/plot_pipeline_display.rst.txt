
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 {color: black;background-color: white;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 pre{padding: 0;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-toggleable {background-color: white;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-item {z-index: 1;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-parallel-item:only-child::after {width: 0;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-container {display: inline-block;position: relative;}#sk-34960fcf-8c22-464d-9da0-0357f3933ea9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-34960fcf-8c22-464d-9da0-0357f3933ea9" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2016bc5-d16d-491c-9ac9-e5f3fe511c5c" type="checkbox" ><label class="sk-toggleable__label" for="f2016bc5-d16d-491c-9ac9-e5f3fe511c5c">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="869f6d2b-b0b6-4e4e-abf9-aa7f53b0aeac" type="checkbox" ><label class="sk-toggleable__label" for="869f6d2b-b0b6-4e4e-abf9-aa7f53b0aeac">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e8c0461-288e-4694-bb6d-c1eac0c60b42" type="checkbox" ><label class="sk-toggleable__label" for="4e8c0461-288e-4694-bb6d-c1eac0c60b42">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-421163b1-2473-48ab-876a-5fc89203de55 {color: black;background-color: white;}#sk-421163b1-2473-48ab-876a-5fc89203de55 pre{padding: 0;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-toggleable {background-color: white;}#sk-421163b1-2473-48ab-876a-5fc89203de55 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-421163b1-2473-48ab-876a-5fc89203de55 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-421163b1-2473-48ab-876a-5fc89203de55 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-estimator:hover {background-color: #d4ebff;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-item {z-index: 1;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-parallel-item:only-child::after {width: 0;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-container {display: inline-block;position: relative;}#sk-421163b1-2473-48ab-876a-5fc89203de55 div.sk-text-repr-fallback {display: none;}</style><div id="sk-421163b1-2473-48ab-876a-5fc89203de55" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1dc36d66-512b-4baa-b0aa-ba5cb74f0a9d" type="checkbox" ><label class="sk-toggleable__label" for="1dc36d66-512b-4baa-b0aa-ba5cb74f0a9d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6966873-873a-43c8-8946-934896cdf523" type="checkbox" ><label class="sk-toggleable__label" for="b6966873-873a-43c8-8946-934896cdf523">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fb46630-c8f0-4651-af51-4bc378e0bb0a" type="checkbox" ><label class="sk-toggleable__label" for="4fb46630-c8f0-4651-af51-4bc378e0bb0a">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81fe2a61-8ac4-49e2-8df7-6338af1b3d7b" type="checkbox" ><label class="sk-toggleable__label" for="81fe2a61-8ac4-49e2-8df7-6338af1b3d7b">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f {color: black;background-color: white;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f pre{padding: 0;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-toggleable {background-color: white;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-estimator:hover {background-color: #d4ebff;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-item {z-index: 1;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-parallel-item:only-child::after {width: 0;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-container {display: inline-block;position: relative;}#sk-a41320f8-3ea9-43bc-8220-6e446bc5558f div.sk-text-repr-fallback {display: none;}</style><div id="sk-a41320f8-3ea9-43bc-8220-6e446bc5558f" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2304da3-d832-43d9-9061-8a9a096ac876" type="checkbox" ><label class="sk-toggleable__label" for="e2304da3-d832-43d9-9061-8a9a096ac876">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc4af1b6-cbf1-4112-acb9-8187e5e5fac1" type="checkbox" ><label class="sk-toggleable__label" for="dc4af1b6-cbf1-4112-acb9-8187e5e5fac1">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74edf91c-7813-4d01-b0b0-d02f0f08d567" type="checkbox" ><label class="sk-toggleable__label" for="74edf91c-7813-4d01-b0b0-d02f0f08d567">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d {color: black;background-color: white;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d pre{padding: 0;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-toggleable {background-color: white;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-estimator:hover {background-color: #d4ebff;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-item {z-index: 1;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-parallel-item:only-child::after {width: 0;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-container {display: inline-block;position: relative;}#sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d div.sk-text-repr-fallback {display: none;}</style><div id="sk-bf798be9-b356-4e8c-b6ec-e0738ec1721d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e43fd475-030a-4ad2-a1f1-fbe32b9e2f60" type="checkbox" ><label class="sk-toggleable__label" for="e43fd475-030a-4ad2-a1f1-fbe32b9e2f60">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdcdba98-2ddb-474d-9e76-59378629f790" type="checkbox" ><label class="sk-toggleable__label" for="fdcdba98-2ddb-474d-9e76-59378629f790">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6817fa26-ee23-401b-93b4-b6fefb7ef471" type="checkbox" ><label class="sk-toggleable__label" for="6817fa26-ee23-401b-93b4-b6fefb7ef471">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65cdc497-0918-4f9f-9e16-d9fc724ccf4f" type="checkbox" ><label class="sk-toggleable__label" for="65cdc497-0918-4f9f-9e16-d9fc724ccf4f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92e00605-3ee4-4159-b03e-07280349a5ec" type="checkbox" ><label class="sk-toggleable__label" for="92e00605-3ee4-4159-b03e-07280349a5ec">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0d8ae38-3108-4c3e-a446-29ff0f0c00b6" type="checkbox" ><label class="sk-toggleable__label" for="d0d8ae38-3108-4c3e-a446-29ff0f0c00b6">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79fe7eff-d2e0-4ea0-ae39-d0b1536f8add" type="checkbox" ><label class="sk-toggleable__label" for="79fe7eff-d2e0-4ea0-ae39-d0b1536f8add">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a317d32e-3fda-404a-b0b9-3d5235139303" type="checkbox" ><label class="sk-toggleable__label" for="a317d32e-3fda-404a-b0b9-3d5235139303">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e9bdb53-48c6-474c-a9ad-2f72b478a36f" type="checkbox" ><label class="sk-toggleable__label" for="1e9bdb53-48c6-474c-a9ad-2f72b478a36f">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-155487bc-8089-4c5e-a382-1e093d6f704d {color: black;background-color: white;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d pre{padding: 0;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-toggleable {background-color: white;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-estimator:hover {background-color: #d4ebff;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-item {z-index: 1;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-parallel-item:only-child::after {width: 0;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-container {display: inline-block;position: relative;}#sk-155487bc-8089-4c5e-a382-1e093d6f704d div.sk-text-repr-fallback {display: none;}</style><div id="sk-155487bc-8089-4c5e-a382-1e093d6f704d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="789f0c30-f91c-42ae-9119-b7c248c75fda" type="checkbox" ><label class="sk-toggleable__label" for="789f0c30-f91c-42ae-9119-b7c248c75fda">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="823d43ab-ceb5-4eda-96de-0066979e0ed5" type="checkbox" ><label class="sk-toggleable__label" for="823d43ab-ceb5-4eda-96de-0066979e0ed5">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0aa515e1-c11a-439f-9c2d-83f389e70aca" type="checkbox" ><label class="sk-toggleable__label" for="0aa515e1-c11a-439f-9c2d-83f389e70aca">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdf83b5b-1669-4be8-9f06-3ad184c90d78" type="checkbox" ><label class="sk-toggleable__label" for="cdf83b5b-1669-4be8-9f06-3ad184c90d78">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ef943d7-ac39-48d4-8291-fd5878424ea9" type="checkbox" ><label class="sk-toggleable__label" for="6ef943d7-ac39-48d4-8291-fd5878424ea9">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdf8ae63-ad4d-4776-b4f2-61ed2415c3bc" type="checkbox" ><label class="sk-toggleable__label" for="cdf8ae63-ad4d-4776-b4f2-61ed2415c3bc">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f801876-7ca1-4663-b372-0b93183fdc13" type="checkbox" ><label class="sk-toggleable__label" for="3f801876-7ca1-4663-b372-0b93183fdc13">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b447464-00d8-40f3-baa3-594b2b2391e2" type="checkbox" ><label class="sk-toggleable__label" for="1b447464-00d8-40f3-baa3-594b2b2391e2">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2210bdaa-5f61-489c-b4d2-6797fec28084" type="checkbox" ><label class="sk-toggleable__label" for="2210bdaa-5f61-489c-b4d2-6797fec28084">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
