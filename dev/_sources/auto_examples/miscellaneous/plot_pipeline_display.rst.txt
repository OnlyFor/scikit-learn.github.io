
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 {color: black;background-color: white;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 pre{padding: 0;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-toggleable {background-color: white;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-item {z-index: 1;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-parallel-item:only-child::after {width: 0;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c9f54e4a-dea0-4572-9930-e074d6d92227 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c9f54e4a-dea0-4572-9930-e074d6d92227" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8289d736-08e7-4994-8d3e-4edb5a50664b" type="checkbox" ><label for="8289d736-08e7-4994-8d3e-4edb5a50664b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10e50e56-66d4-4231-b168-20e77cf10f23" type="checkbox" ><label for="10e50e56-66d4-4231-b168-20e77cf10f23" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe82c851-698e-4b9c-abbe-81afa867f80e" type="checkbox" ><label for="fe82c851-698e-4b9c-abbe-81afa867f80e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 {color: black;background-color: white;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 pre{padding: 0;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-toggleable {background-color: white;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-item {z-index: 1;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-parallel-item:only-child::after {width: 0;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b7d3d2ca-3811-49cc-b0c0-6fce47116ab2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="763dcc55-2c9f-4674-aed0-ee102e94580d" type="checkbox" ><label for="763dcc55-2c9f-4674-aed0-ee102e94580d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5194e929-5c46-46bf-89e2-da3efd7835b9" type="checkbox" ><label for="5194e929-5c46-46bf-89e2-da3efd7835b9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f1923a2-9da1-4d10-a434-0d9c5c8aa97b" type="checkbox" ><label for="4f1923a2-9da1-4d10-a434-0d9c5c8aa97b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b6a4add-5580-43c2-8950-d2e03e8baeaa" type="checkbox" ><label for="3b6a4add-5580-43c2-8950-d2e03e8baeaa" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 {color: black;background-color: white;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 pre{padding: 0;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-toggleable {background-color: white;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-item {z-index: 1;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-parallel-item:only-child::after {width: 0;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0cff8e1c-1df9-45c7-89a4-4216eae167e7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf8358ed-5bdf-45ab-a279-0fbc573d9014" type="checkbox" ><label for="cf8358ed-5bdf-45ab-a279-0fbc573d9014" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23773b18-24e4-4381-a23f-90fd1e26072a" type="checkbox" ><label for="23773b18-24e4-4381-a23f-90fd1e26072a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55fbc374-fc2b-4a08-8feb-02ecf47db85b" type="checkbox" ><label for="55fbc374-fc2b-4a08-8feb-02ecf47db85b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9e339b17-e704-49b4-816a-6df4908aa42e {color: black;background-color: white;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e pre{padding: 0;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-toggleable {background-color: white;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-estimator:hover {background-color: #d4ebff;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-item {z-index: 1;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-parallel-item:only-child::after {width: 0;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9e339b17-e704-49b4-816a-6df4908aa42e div.sk-text-repr-fallback {display: none;}</style><div id="sk-9e339b17-e704-49b4-816a-6df4908aa42e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c305b2e-6f1b-4e95-8377-9dc8f3d07c80" type="checkbox" ><label for="9c305b2e-6f1b-4e95-8377-9dc8f3d07c80" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b533c2d4-e8b8-4a6f-a066-5a1beee134e4" type="checkbox" ><label for="b533c2d4-e8b8-4a6f-a066-5a1beee134e4" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f04ab5cb-fbd9-4437-828c-c7064b5be0e6" type="checkbox" ><label for="f04ab5cb-fbd9-4437-828c-c7064b5be0e6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8beda8c-e882-49b1-a6a9-a243991568a6" type="checkbox" ><label for="c8beda8c-e882-49b1-a6a9-a243991568a6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95585fd6-11a0-49ee-ae54-76e2f9aad68c" type="checkbox" ><label for="95585fd6-11a0-49ee-ae54-76e2f9aad68c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca68ac87-49a9-43cd-ac2b-92d9e2631980" type="checkbox" ><label for="ca68ac87-49a9-43cd-ac2b-92d9e2631980" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd1b3346-0f3e-40be-86f1-8812184adf6c" type="checkbox" ><label for="cd1b3346-0f3e-40be-86f1-8812184adf6c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d4fe45b-8098-49c9-85f3-1f9be1605586" type="checkbox" ><label for="9d4fe45b-8098-49c9-85f3-1f9be1605586" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fcb4269-f83d-410d-9d09-8b05e39ea518" type="checkbox" ><label for="5fcb4269-f83d-410d-9d09-8b05e39ea518" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 {color: black;background-color: white;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 pre{padding: 0;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-toggleable {background-color: white;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-item {z-index: 1;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-parallel-item:only-child::after {width: 0;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a8fbbe6f-49f1-4bd5-ae33-7412264e9493" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1126fd0b-643d-4c56-8d3c-f361c9752cce" type="checkbox" ><label for="1126fd0b-643d-4c56-8d3c-f361c9752cce" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14c64039-2c45-4ecd-b19a-db3ba9a95766" type="checkbox" ><label for="14c64039-2c45-4ecd-b19a-db3ba9a95766" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcdb1567-c392-4174-85a8-cf62ec9592d3" type="checkbox" ><label for="dcdb1567-c392-4174-85a8-cf62ec9592d3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ef5e998-7e66-45d4-8b80-a2399b9487e9" type="checkbox" ><label for="5ef5e998-7e66-45d4-8b80-a2399b9487e9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1e31842-6484-4062-a498-d148fdd4fe3c" type="checkbox" ><label for="e1e31842-6484-4062-a498-d148fdd4fe3c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5da063a2-03f3-40a5-8ca2-865f701ec11f" type="checkbox" ><label for="5da063a2-03f3-40a5-8ca2-865f701ec11f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30d73f01-3d2a-45ae-8e4c-c24bc9e56d1d" type="checkbox" ><label for="30d73f01-3d2a-45ae-8e4c-c24bc9e56d1d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0549a4e-4b97-430b-b5eb-ed541541c461" type="checkbox" ><label for="f0549a4e-4b97-430b-b5eb-ed541541c461" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2f1fec8-4425-42a0-83c7-6d371fc66a64" type="checkbox" ><label for="d2f1fec8-4425-42a0-83c7-6d371fc66a64" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
