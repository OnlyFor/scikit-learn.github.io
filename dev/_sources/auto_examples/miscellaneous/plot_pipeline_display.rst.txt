
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 {color: black;background-color: white;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 pre{padding: 0;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-toggleable {background-color: white;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-item {z-index: 1;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-parallel-item:only-child::after {width: 0;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2a5cf104-c93a-49ba-bc56-8c53d6fdd722" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="462b5d2f-4ec5-4bff-aa8f-c91c43747190" type="checkbox" ><label for="462b5d2f-4ec5-4bff-aa8f-c91c43747190" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b93d984-d573-4d15-b14c-9ce302740dcd" type="checkbox" ><label for="5b93d984-d573-4d15-b14c-9ce302740dcd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86a64755-e175-463f-97e5-7218de119fb0" type="checkbox" ><label for="86a64755-e175-463f-97e5-7218de119fb0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 {color: black;background-color: white;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 pre{padding: 0;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-toggleable {background-color: white;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-item {z-index: 1;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-parallel-item:only-child::after {width: 0;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8cf8e873-c2d2-410e-a70b-9d8221cfe8e8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2d849e5-f170-4ae8-abaf-e7cb8c196bcc" type="checkbox" ><label for="d2d849e5-f170-4ae8-abaf-e7cb8c196bcc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f59aa89-61cb-461e-84cd-b3db40c46ad2" type="checkbox" ><label for="7f59aa89-61cb-461e-84cd-b3db40c46ad2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0e1dd26-bec3-4846-aed2-dd79d63d375e" type="checkbox" ><label for="e0e1dd26-bec3-4846-aed2-dd79d63d375e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a1202e0-1dc0-47e3-872d-8a2308cb7ba5" type="checkbox" ><label for="5a1202e0-1dc0-47e3-872d-8a2308cb7ba5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 {color: black;background-color: white;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 pre{padding: 0;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-toggleable {background-color: white;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-item {z-index: 1;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-parallel-item:only-child::after {width: 0;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0f527c97-5bf7-4be7-9101-be0115dd2668 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0f527c97-5bf7-4be7-9101-be0115dd2668" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91b88685-640e-4167-9824-9236f865ae1a" type="checkbox" ><label for="91b88685-640e-4167-9824-9236f865ae1a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e38b1f68-dbc1-4960-9108-368dc428c4d1" type="checkbox" ><label for="e38b1f68-dbc1-4960-9108-368dc428c4d1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cebf67f8-6574-4006-beca-b1e59e9a8f75" type="checkbox" ><label for="cebf67f8-6574-4006-beca-b1e59e9a8f75" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-117635c8-4037-4e99-8433-2d432c166183 {color: black;background-color: white;}#sk-117635c8-4037-4e99-8433-2d432c166183 pre{padding: 0;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-toggleable {background-color: white;}#sk-117635c8-4037-4e99-8433-2d432c166183 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-117635c8-4037-4e99-8433-2d432c166183 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-117635c8-4037-4e99-8433-2d432c166183 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-117635c8-4037-4e99-8433-2d432c166183 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-117635c8-4037-4e99-8433-2d432c166183 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-117635c8-4037-4e99-8433-2d432c166183 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-estimator:hover {background-color: #d4ebff;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-item {z-index: 1;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-parallel-item:only-child::after {width: 0;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-117635c8-4037-4e99-8433-2d432c166183 div.sk-text-repr-fallback {display: none;}</style><div id="sk-117635c8-4037-4e99-8433-2d432c166183" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="364d3251-9f3a-4c6e-860f-4e369efe2652" type="checkbox" ><label for="364d3251-9f3a-4c6e-860f-4e369efe2652" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0a9e23a-5f30-41bd-bc9c-90fd533a634b" type="checkbox" ><label for="e0a9e23a-5f30-41bd-bc9c-90fd533a634b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a0b0f35-54d0-400b-9411-bd30dd443063" type="checkbox" ><label for="9a0b0f35-54d0-400b-9411-bd30dd443063" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab1720c3-701e-4043-977c-6bd14ec70912" type="checkbox" ><label for="ab1720c3-701e-4043-977c-6bd14ec70912" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b51f89a4-4bb0-4056-a381-1597bab5cb68" type="checkbox" ><label for="b51f89a4-4bb0-4056-a381-1597bab5cb68" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8229d393-8864-4d19-a564-1e4f23276347" type="checkbox" ><label for="8229d393-8864-4d19-a564-1e4f23276347" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9450224-a269-439f-ae9d-fff58dcf1e7a" type="checkbox" ><label for="d9450224-a269-439f-ae9d-fff58dcf1e7a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5a86196-593d-443b-b94d-99103074dd12" type="checkbox" ><label for="e5a86196-593d-443b-b94d-99103074dd12" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f247578-f6ff-4451-b6fb-ab415dbc49c8" type="checkbox" ><label for="8f247578-f6ff-4451-b6fb-ab415dbc49c8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 {color: black;background-color: white;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 pre{padding: 0;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-toggleable {background-color: white;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-item {z-index: 1;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-parallel-item:only-child::after {width: 0;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cc2821bd-9ae9-47f5-bc96-f4e256bfcdd2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdcf4343-fb14-4987-a1ec-f41acc16b4ec" type="checkbox" ><label for="cdcf4343-fb14-4987-a1ec-f41acc16b4ec" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60daba38-1a6a-4106-bfaf-c38384471e2e" type="checkbox" ><label for="60daba38-1a6a-4106-bfaf-c38384471e2e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4aafe3e5-0d25-44d2-8f6d-c077c3d89f3f" type="checkbox" ><label for="4aafe3e5-0d25-44d2-8f6d-c077c3d89f3f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50e453e9-e4ed-4b1d-be20-45fd135a0489" type="checkbox" ><label for="50e453e9-e4ed-4b1d-be20-45fd135a0489" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f996c45b-d050-40a0-beb3-da57922613e2" type="checkbox" ><label for="f996c45b-d050-40a0-beb3-da57922613e2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a7c1f1c-7247-4d1c-b549-5517c56f39aa" type="checkbox" ><label for="1a7c1f1c-7247-4d1c-b549-5517c56f39aa" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0952fb30-2d14-4a26-81d4-453cd5340b91" type="checkbox" ><label for="0952fb30-2d14-4a26-81d4-453cd5340b91" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f421b5f6-c288-449f-b8f2-6d643e7667c1" type="checkbox" ><label for="f421b5f6-c288-449f-b8f2-6d643e7667c1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fbc7436-c7f0-4f71-a9dc-7bb1e4ad46f5" type="checkbox" ><label for="6fbc7436-c7f0-4f71-a9dc-7bb1e4ad46f5" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
