
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 {color: black;background-color: white;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 pre{padding: 0;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-toggleable {background-color: white;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-item {z-index: 1;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-parallel-item:only-child::after {width: 0;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c894360b-0fc9-47da-809b-fd0d4d452a56 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c894360b-0fc9-47da-809b-fd0d4d452a56" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0cc469f-3efe-41ff-b4af-8a4eff047fed" type="checkbox" ><label for="b0cc469f-3efe-41ff-b4af-8a4eff047fed" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a640ddd-3c8d-4fff-8309-80d0baa806cb" type="checkbox" ><label for="1a640ddd-3c8d-4fff-8309-80d0baa806cb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c541be08-a54a-42c9-929f-553a87802fd3" type="checkbox" ><label for="c541be08-a54a-42c9-929f-553a87802fd3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a {color: black;background-color: white;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a pre{padding: 0;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-toggleable {background-color: white;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-estimator:hover {background-color: #d4ebff;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-item {z-index: 1;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-parallel-item:only-child::after {width: 0;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a div.sk-text-repr-fallback {display: none;}</style><div id="sk-ce8f92d8-c974-4625-a801-fb0e86a00c4a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="daf28421-4319-475e-bdcb-39ecff468925" type="checkbox" ><label for="daf28421-4319-475e-bdcb-39ecff468925" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc9ef976-2d45-4128-a661-c7ecc13ce2f8" type="checkbox" ><label for="cc9ef976-2d45-4128-a661-c7ecc13ce2f8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe275bd4-cf24-48bb-9170-1a05f2a22940" type="checkbox" ><label for="fe275bd4-cf24-48bb-9170-1a05f2a22940" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6557c1fb-3a11-439c-8532-06a0d67e859a" type="checkbox" ><label for="6557c1fb-3a11-439c-8532-06a0d67e859a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 {color: black;background-color: white;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 pre{padding: 0;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-toggleable {background-color: white;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-item {z-index: 1;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-parallel-item:only-child::after {width: 0;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d4c4e31e-f631-4c70-905e-a65a046bc449 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d4c4e31e-f631-4c70-905e-a65a046bc449" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7791a3c-6397-4ed0-8569-3999487a8dd5" type="checkbox" ><label for="b7791a3c-6397-4ed0-8569-3999487a8dd5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49c8cffd-152a-4a2b-ac11-99086ae4962e" type="checkbox" ><label for="49c8cffd-152a-4a2b-ac11-99086ae4962e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0076f9cf-77a2-4bac-b1a3-42b570c8c135" type="checkbox" ><label for="0076f9cf-77a2-4bac-b1a3-42b570c8c135" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 {color: black;background-color: white;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 pre{padding: 0;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-toggleable {background-color: white;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-item {z-index: 1;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-parallel-item:only-child::after {width: 0;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2dbae876-4bfb-4a54-8d18-79cd99426ed4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff2cd651-18f1-44ca-9a4c-99d13b1a7584" type="checkbox" ><label for="ff2cd651-18f1-44ca-9a4c-99d13b1a7584" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64c5cf02-ab0a-4cc1-8dea-f9e66641726c" type="checkbox" ><label for="64c5cf02-ab0a-4cc1-8dea-f9e66641726c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="531a28cd-e73a-4565-a993-beacbfe03fb7" type="checkbox" ><label for="531a28cd-e73a-4565-a993-beacbfe03fb7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13dd4214-4cc2-4572-96f2-a14eda982768" type="checkbox" ><label for="13dd4214-4cc2-4572-96f2-a14eda982768" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04a38791-73ca-41d5-83ce-ca02d1297d04" type="checkbox" ><label for="04a38791-73ca-41d5-83ce-ca02d1297d04" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f0a7e85-55f3-443f-a9c9-9bc989d8a6f5" type="checkbox" ><label for="9f0a7e85-55f3-443f-a9c9-9bc989d8a6f5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b34df95a-b2ef-4c67-a485-830320da95d2" type="checkbox" ><label for="b34df95a-b2ef-4c67-a485-830320da95d2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53578eb5-27c7-4b73-93ba-3ffc176cf149" type="checkbox" ><label for="53578eb5-27c7-4b73-93ba-3ffc176cf149" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c336522a-5187-4c92-9604-bc0806478f78" type="checkbox" ><label for="c336522a-5187-4c92-9604-bc0806478f78" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6cdb6469-2121-411a-9040-f43027b96bab {color: black;background-color: white;}#sk-6cdb6469-2121-411a-9040-f43027b96bab pre{padding: 0;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-toggleable {background-color: white;}#sk-6cdb6469-2121-411a-9040-f43027b96bab label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6cdb6469-2121-411a-9040-f43027b96bab label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6cdb6469-2121-411a-9040-f43027b96bab label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6cdb6469-2121-411a-9040-f43027b96bab input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6cdb6469-2121-411a-9040-f43027b96bab input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6cdb6469-2121-411a-9040-f43027b96bab input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-estimator:hover {background-color: #d4ebff;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-item {z-index: 1;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-parallel-item:only-child::after {width: 0;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6cdb6469-2121-411a-9040-f43027b96bab div.sk-text-repr-fallback {display: none;}</style><div id="sk-6cdb6469-2121-411a-9040-f43027b96bab" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11b7fa8b-9a6a-4a60-902d-1d72cfcc7fd5" type="checkbox" ><label for="11b7fa8b-9a6a-4a60-902d-1d72cfcc7fd5" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c1a2387-9e5f-4960-bb1d-dc3af7fd6417" type="checkbox" ><label for="8c1a2387-9e5f-4960-bb1d-dc3af7fd6417" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="563edbfa-0963-4bc9-820e-de8f03afa07f" type="checkbox" ><label for="563edbfa-0963-4bc9-820e-de8f03afa07f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63aef641-a08c-4c16-8480-06abc535d435" type="checkbox" ><label for="63aef641-a08c-4c16-8480-06abc535d435" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66682eee-8804-4f04-97c0-84f6069c10ae" type="checkbox" ><label for="66682eee-8804-4f04-97c0-84f6069c10ae" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f27eae0-b15c-4761-98b7-07bafa60c5d7" type="checkbox" ><label for="3f27eae0-b15c-4761-98b7-07bafa60c5d7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f62633b5-8f0a-4ce0-b4a4-6f24b7ecd3dc" type="checkbox" ><label for="f62633b5-8f0a-4ce0-b4a4-6f24b7ecd3dc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78add842-2b07-4383-bf99-41d75bc879c4" type="checkbox" ><label for="78add842-2b07-4383-bf99-41d75bc879c4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88ec90d7-3d0d-4f70-b030-5f077eee2849" type="checkbox" ><label for="88ec90d7-3d0d-4f70-b030-5f077eee2849" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32b363e1-687f-4375-a531-d7eb1eb410f5" type="checkbox" ><label for="32b363e1-687f-4375-a531-d7eb1eb410f5" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.088 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
