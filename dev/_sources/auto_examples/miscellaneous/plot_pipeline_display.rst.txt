
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 {color: black;background-color: white;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 pre{padding: 0;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-toggleable {background-color: white;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-item {z-index: 1;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-parallel-item:only-child::after {width: 0;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fbc71c04-b310-4eac-9d27-9caf0f8d2f00" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19c21dad-62cd-4e69-8001-02cb583ed5cc" type="checkbox" ><label for="19c21dad-62cd-4e69-8001-02cb583ed5cc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc90ab13-8d76-4a5f-9a6d-2727969a0dec" type="checkbox" ><label for="cc90ab13-8d76-4a5f-9a6d-2727969a0dec" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbf67561-775c-4f9d-bcd2-b3ced934f3a5" type="checkbox" ><label for="cbf67561-775c-4f9d-bcd2-b3ced934f3a5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3d961564-f6b5-46b0-b89c-de0721fed99a {color: black;background-color: white;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a pre{padding: 0;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-toggleable {background-color: white;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-estimator:hover {background-color: #d4ebff;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-item {z-index: 1;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-parallel-item:only-child::after {width: 0;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3d961564-f6b5-46b0-b89c-de0721fed99a div.sk-text-repr-fallback {display: none;}</style><div id="sk-3d961564-f6b5-46b0-b89c-de0721fed99a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="706aeb1e-b89d-49d5-92d9-712b56a7e23f" type="checkbox" ><label for="706aeb1e-b89d-49d5-92d9-712b56a7e23f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="610d7f29-160c-4a83-a982-8dc99f44ab16" type="checkbox" ><label for="610d7f29-160c-4a83-a982-8dc99f44ab16" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a1c3e28-6e5f-421b-8e15-8564f41f1d99" type="checkbox" ><label for="9a1c3e28-6e5f-421b-8e15-8564f41f1d99" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c58baf1e-92e6-4241-962e-686a1d34250f" type="checkbox" ><label for="c58baf1e-92e6-4241-962e-686a1d34250f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a3821319-e06f-49b7-8869-185a59f84d99 {color: black;background-color: white;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 pre{padding: 0;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-toggleable {background-color: white;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-item {z-index: 1;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-parallel-item:only-child::after {width: 0;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a3821319-e06f-49b7-8869-185a59f84d99 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a3821319-e06f-49b7-8869-185a59f84d99" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01990fe6-ebcf-418e-9bf9-576e0593d3d4" type="checkbox" ><label for="01990fe6-ebcf-418e-9bf9-576e0593d3d4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01734576-9596-4160-982c-4c98305f614f" type="checkbox" ><label for="01734576-9596-4160-982c-4c98305f614f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d12ff6b-a073-4412-8d0c-9ed395b51874" type="checkbox" ><label for="3d12ff6b-a073-4412-8d0c-9ed395b51874" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f {color: black;background-color: white;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f pre{padding: 0;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-toggleable {background-color: white;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-estimator:hover {background-color: #d4ebff;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-item {z-index: 1;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-parallel-item:only-child::after {width: 0;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e57c1466-a914-40a7-9c87-5cb0faa8114f div.sk-text-repr-fallback {display: none;}</style><div id="sk-e57c1466-a914-40a7-9c87-5cb0faa8114f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be52f330-c41c-4408-ab27-fc79a78b3bd2" type="checkbox" ><label for="be52f330-c41c-4408-ab27-fc79a78b3bd2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc8be1e5-0004-4b1e-a841-6430b0ed34a5" type="checkbox" ><label for="fc8be1e5-0004-4b1e-a841-6430b0ed34a5" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30001eea-ee06-47f2-a502-bbd0a14a47bd" type="checkbox" ><label for="30001eea-ee06-47f2-a502-bbd0a14a47bd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c6e0bc1-3ec3-4e44-96b5-60ddddf7b830" type="checkbox" ><label for="4c6e0bc1-3ec3-4e44-96b5-60ddddf7b830" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e0ec9a4-6873-441a-b080-fef101b77895" type="checkbox" ><label for="8e0ec9a4-6873-441a-b080-fef101b77895" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7440ef2-84b9-4b07-9f70-d3ab02ae8e79" type="checkbox" ><label for="e7440ef2-84b9-4b07-9f70-d3ab02ae8e79" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4db20d07-2c23-4e18-bc30-0948c7ce92c9" type="checkbox" ><label for="4db20d07-2c23-4e18-bc30-0948c7ce92c9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6221b8e4-9d0f-4dc4-b442-6233933c4547" type="checkbox" ><label for="6221b8e4-9d0f-4dc4-b442-6233933c4547" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35aaa46f-7e01-477c-af61-ee15123b0df1" type="checkbox" ><label for="35aaa46f-7e01-477c-af61-ee15123b0df1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 {color: black;background-color: white;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 pre{padding: 0;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-toggleable {background-color: white;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-item {z-index: 1;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-parallel-item:only-child::after {width: 0;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-557a10fd-f39e-4f8f-8f0a-963e5ed70cc1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51ae3af6-303a-4218-ba64-515270c88284" type="checkbox" ><label for="51ae3af6-303a-4218-ba64-515270c88284" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="585b654e-524a-4331-9a04-0e6445676152" type="checkbox" ><label for="585b654e-524a-4331-9a04-0e6445676152" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb67363b-3895-46af-b29d-39fb6514c1a5" type="checkbox" ><label for="eb67363b-3895-46af-b29d-39fb6514c1a5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58c84fd3-e557-455d-bf3c-696d425ce9a9" type="checkbox" ><label for="58c84fd3-e557-455d-bf3c-696d425ce9a9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6da1d60e-ffdc-4a0a-8c0d-5931994eb7b5" type="checkbox" ><label for="6da1d60e-ffdc-4a0a-8c0d-5931994eb7b5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb2202ca-c0ea-4a11-b834-ed4c048e8ca7" type="checkbox" ><label for="bb2202ca-c0ea-4a11-b834-ed4c048e8ca7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="010cc0b3-6d81-4320-a5eb-7de0fe82dafb" type="checkbox" ><label for="010cc0b3-6d81-4320-a5eb-7de0fe82dafb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef7d73fd-c669-4cde-a264-f90a28ddd349" type="checkbox" ><label for="ef7d73fd-c669-4cde-a264-f90a28ddd349" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75331b42-ab94-4d35-986a-6dbeac1982b3" type="checkbox" ><label for="75331b42-ab94-4d35-986a-6dbeac1982b3" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.091 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
