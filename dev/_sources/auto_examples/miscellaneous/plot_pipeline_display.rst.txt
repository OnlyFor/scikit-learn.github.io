
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 {color: black;background-color: white;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 pre{padding: 0;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-toggleable {background-color: white;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-item {z-index: 1;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-parallel-item:only-child::after {width: 0;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6330b21b-aa0f-42dc-bd3c-7b11acac2a70" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac7aa715-2396-41ee-8fd2-2dbf14e30943" type="checkbox" ><label for="ac7aa715-2396-41ee-8fd2-2dbf14e30943" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f39211f0-d663-4389-b30e-60cbf681ff34" type="checkbox" ><label for="f39211f0-d663-4389-b30e-60cbf681ff34" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ea9c452-a632-47ee-9e97-0abf9024319a" type="checkbox" ><label for="8ea9c452-a632-47ee-9e97-0abf9024319a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 {color: black;background-color: white;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 pre{padding: 0;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-toggleable {background-color: white;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-item {z-index: 1;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-parallel-item:only-child::after {width: 0;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e85a5645-0185-49ee-bc42-dc7b2f24c902 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e85a5645-0185-49ee-bc42-dc7b2f24c902" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a77afdd9-00a1-449d-8bd6-6ce5cc6c818f" type="checkbox" ><label for="a77afdd9-00a1-449d-8bd6-6ce5cc6c818f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="261a4689-1395-4a4b-9d3b-8f7f44883415" type="checkbox" ><label for="261a4689-1395-4a4b-9d3b-8f7f44883415" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c92a4bd-f8ef-49ab-8e6b-31e9fe8acf4f" type="checkbox" ><label for="0c92a4bd-f8ef-49ab-8e6b-31e9fe8acf4f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e81eb93-8616-45d2-ac33-a94c5c5f7857" type="checkbox" ><label for="0e81eb93-8616-45d2-ac33-a94c5c5f7857" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1677212e-c754-4647-9eff-02dd13b008e1 {color: black;background-color: white;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 pre{padding: 0;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-toggleable {background-color: white;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-item {z-index: 1;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-parallel-item:only-child::after {width: 0;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1677212e-c754-4647-9eff-02dd13b008e1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1677212e-c754-4647-9eff-02dd13b008e1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68f97ac0-a48e-4622-9c86-3f4957292af9" type="checkbox" ><label for="68f97ac0-a48e-4622-9c86-3f4957292af9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1edc5971-70d8-48ee-9386-e40298e02727" type="checkbox" ><label for="1edc5971-70d8-48ee-9386-e40298e02727" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c930122-de40-4e3e-b443-dcb46820e2e2" type="checkbox" ><label for="8c930122-de40-4e3e-b443-dcb46820e2e2" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 {color: black;background-color: white;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 pre{padding: 0;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-toggleable {background-color: white;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-item {z-index: 1;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-parallel-item:only-child::after {width: 0;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-83c93f8b-47c3-4f8e-82a0-752f06515fb2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4345badb-40ba-4155-b262-dd5ea2edd6ae" type="checkbox" ><label for="4345badb-40ba-4155-b262-dd5ea2edd6ae" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c34f7dea-bd73-4b77-821c-b3ce99190489" type="checkbox" ><label for="c34f7dea-bd73-4b77-821c-b3ce99190489" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1f67006-6827-4495-88a3-3fff4d8b5f9e" type="checkbox" ><label for="a1f67006-6827-4495-88a3-3fff4d8b5f9e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f6ab08a-2dfe-4d40-af00-314d0bfe315a" type="checkbox" ><label for="4f6ab08a-2dfe-4d40-af00-314d0bfe315a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7871e3fd-6022-4ee9-ae3b-c2cbd6eef658" type="checkbox" ><label for="7871e3fd-6022-4ee9-ae3b-c2cbd6eef658" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33c75961-9066-4876-84d7-0d8182e4705d" type="checkbox" ><label for="33c75961-9066-4876-84d7-0d8182e4705d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d6657be-3530-4dca-963c-44de259c8cfc" type="checkbox" ><label for="6d6657be-3530-4dca-963c-44de259c8cfc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2b03e7f-c26f-47df-99b3-8ac8d8febd13" type="checkbox" ><label for="e2b03e7f-c26f-47df-99b3-8ac8d8febd13" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1359ec1b-c183-4a1c-92bd-7207232b7ae7" type="checkbox" ><label for="1359ec1b-c183-4a1c-92bd-7207232b7ae7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 {color: black;background-color: white;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 pre{padding: 0;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-toggleable {background-color: white;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-item {z-index: 1;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-parallel-item:only-child::after {width: 0;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8468a92c-deeb-4d44-983a-6d9278f00e58 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8468a92c-deeb-4d44-983a-6d9278f00e58" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f0c2637-9b63-4cf8-bc5f-b3cc3bd87410" type="checkbox" ><label for="6f0c2637-9b63-4cf8-bc5f-b3cc3bd87410" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28916bc1-b0c2-4064-8898-6f3a4602c46c" type="checkbox" ><label for="28916bc1-b0c2-4064-8898-6f3a4602c46c" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c250d40a-82ba-4af5-b4da-cbcc4d0804a4" type="checkbox" ><label for="c250d40a-82ba-4af5-b4da-cbcc4d0804a4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="889ef883-43f5-4317-9129-056b3912713b" type="checkbox" ><label for="889ef883-43f5-4317-9129-056b3912713b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fa2ee3d-7513-4748-9c94-8ea111a0e2a1" type="checkbox" ><label for="5fa2ee3d-7513-4748-9c94-8ea111a0e2a1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6370ff2-dd5e-429d-9f21-9c88fa8a1373" type="checkbox" ><label for="c6370ff2-dd5e-429d-9f21-9c88fa8a1373" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61c0788a-a030-4017-a4ce-388c45da5a74" type="checkbox" ><label for="61c0788a-a030-4017-a4ce-388c45da5a74" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="733a8126-20e9-428d-bd16-a9be005707f1" type="checkbox" ><label for="733a8126-20e9-428d-bd16-a9be005707f1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="588794b1-19ad-4167-b404-c53ed5138458" type="checkbox" ><label for="588794b1-19ad-4167-b404-c53ed5138458" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
