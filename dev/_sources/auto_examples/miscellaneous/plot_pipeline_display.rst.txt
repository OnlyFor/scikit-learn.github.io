
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 {color: black;background-color: white;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 pre{padding: 0;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-toggleable {background-color: white;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-item {z-index: 1;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-parallel-item:only-child::after {width: 0;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2591d1ae-df29-41f3-beb8-f0bd30e1d800" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c37921e3-9306-4c4c-8ccb-5f5ee20685a8" type="checkbox" ><label for="c37921e3-9306-4c4c-8ccb-5f5ee20685a8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9baa1b4a-fa61-4cd8-8cb8-5abc71218577" type="checkbox" ><label for="9baa1b4a-fa61-4cd8-8cb8-5abc71218577" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37591fbe-4ab0-4291-8152-174a58ef6d08" type="checkbox" ><label for="37591fbe-4ab0-4291-8152-174a58ef6d08" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 {color: black;background-color: white;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 pre{padding: 0;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-toggleable {background-color: white;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-item {z-index: 1;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-parallel-item:only-child::after {width: 0;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dd15b0f1-ddeb-49b8-b95c-193b52468d95" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbcff37e-b420-4bd8-9111-566729d7426b" type="checkbox" ><label for="bbcff37e-b420-4bd8-9111-566729d7426b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a99b59a2-5c64-4205-98cf-f949f29aa670" type="checkbox" ><label for="a99b59a2-5c64-4205-98cf-f949f29aa670" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad01fa3a-1d84-470e-870f-90de6c8c971b" type="checkbox" ><label for="ad01fa3a-1d84-470e-870f-90de6c8c971b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31d8402b-7a11-4022-96fc-ba8f9b2c9e6d" type="checkbox" ><label for="31d8402b-7a11-4022-96fc-ba8f9b2c9e6d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 {color: black;background-color: white;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 pre{padding: 0;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-toggleable {background-color: white;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-item {z-index: 1;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-parallel-item:only-child::after {width: 0;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-174a07cd-1b7f-4cae-8e65-4c3990ddb2f4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43697974-224f-43aa-9dd5-e13e0574d6d8" type="checkbox" ><label for="43697974-224f-43aa-9dd5-e13e0574d6d8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fab5f146-fb4f-41cd-ac24-5f3bd6c7584d" type="checkbox" ><label for="fab5f146-fb4f-41cd-ac24-5f3bd6c7584d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c4660ca-0592-49b3-82c0-cef15cf4eeb0" type="checkbox" ><label for="2c4660ca-0592-49b3-82c0-cef15cf4eeb0" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 {color: black;background-color: white;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 pre{padding: 0;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-toggleable {background-color: white;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-item {z-index: 1;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-parallel-item:only-child::after {width: 0;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-294f64cf-e2c9-4c46-9759-4ae1a0e7a8a8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9298b532-9cb0-453c-be19-a40f07dd32bf" type="checkbox" ><label for="9298b532-9cb0-453c-be19-a40f07dd32bf" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0039215-2084-4f8b-aa5f-e0bcdc14d64f" type="checkbox" ><label for="b0039215-2084-4f8b-aa5f-e0bcdc14d64f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07eb25c2-a4b4-49b2-aba1-9ced54fe724d" type="checkbox" ><label for="07eb25c2-a4b4-49b2-aba1-9ced54fe724d" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d32778f9-aefa-4095-b826-4c8b26b615ab" type="checkbox" ><label for="d32778f9-aefa-4095-b826-4c8b26b615ab" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="524636dd-9f27-4f21-b52e-9245001b5db6" type="checkbox" ><label for="524636dd-9f27-4f21-b52e-9245001b5db6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f14385fe-71ca-4eb5-9252-3f83bcd57f71" type="checkbox" ><label for="f14385fe-71ca-4eb5-9252-3f83bcd57f71" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64683404-6629-4c99-ad3e-3eb64a5c54e1" type="checkbox" ><label for="64683404-6629-4c99-ad3e-3eb64a5c54e1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="586b1985-f009-43ae-bfb5-7471e90f6b21" type="checkbox" ><label for="586b1985-f009-43ae-bfb5-7471e90f6b21" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95530695-a795-4abf-99b2-3556432682e9" type="checkbox" ><label for="95530695-a795-4abf-99b2-3556432682e9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c1903242-c7b2-420d-95b3-b873a39b0716 {color: black;background-color: white;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 pre{padding: 0;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-toggleable {background-color: white;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-item {z-index: 1;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-parallel-item:only-child::after {width: 0;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c1903242-c7b2-420d-95b3-b873a39b0716 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c1903242-c7b2-420d-95b3-b873a39b0716" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03c995bc-7a8a-4ec7-bf53-6b0f1e732c24" type="checkbox" ><label for="03c995bc-7a8a-4ec7-bf53-6b0f1e732c24" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acec2365-eaf6-4d85-a266-ec83fc0b58be" type="checkbox" ><label for="acec2365-eaf6-4d85-a266-ec83fc0b58be" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d542868-1cb7-4bb3-9989-1e26dda6c056" type="checkbox" ><label for="1d542868-1cb7-4bb3-9989-1e26dda6c056" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e007948-da80-4c73-b73d-1f7d7ed6544d" type="checkbox" ><label for="9e007948-da80-4c73-b73d-1f7d7ed6544d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c44e46d-8d18-4037-87e4-e42711016fa2" type="checkbox" ><label for="8c44e46d-8d18-4037-87e4-e42711016fa2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abf9f29e-c227-4a24-8d74-b5e080c952fd" type="checkbox" ><label for="abf9f29e-c227-4a24-8d74-b5e080c952fd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6327ccc5-58f0-4433-b3a8-b846bce30a44" type="checkbox" ><label for="6327ccc5-58f0-4433-b3a8-b846bce30a44" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8bc99d2-ef0f-49b3-91de-d3d3778f9bd7" type="checkbox" ><label for="a8bc99d2-ef0f-49b3-91de-d3d3778f9bd7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15d4f805-018f-4a37-8f51-4c4926ef8d08" type="checkbox" ><label for="15d4f805-018f-4a37-8f51-4c4926ef8d08" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
