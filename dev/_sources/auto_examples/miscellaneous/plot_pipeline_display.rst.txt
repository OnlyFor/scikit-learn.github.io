
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2f02c733-8315-40ed-bda1-33441d0765c9 {color: black;background-color: white;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 pre{padding: 0;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-toggleable {background-color: white;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-item {z-index: 1;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-parallel-item:only-child::after {width: 0;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2f02c733-8315-40ed-bda1-33441d0765c9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2f02c733-8315-40ed-bda1-33441d0765c9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bdb06a2-20ca-49a9-83c3-40d2625435a9" type="checkbox" ><label class="sk-toggleable__label" for="2bdb06a2-20ca-49a9-83c3-40d2625435a9">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d94369f-3ef7-4922-a6f9-755e46d9c0d8" type="checkbox" ><label class="sk-toggleable__label" for="3d94369f-3ef7-4922-a6f9-755e46d9c0d8">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23ff430d-efef-4cdf-9ba6-564ae404b801" type="checkbox" ><label class="sk-toggleable__label" for="23ff430d-efef-4cdf-9ba6-564ae404b801">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3a739b41-82cb-46da-928d-ef70816d5fdc {color: black;background-color: white;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc pre{padding: 0;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-toggleable {background-color: white;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-estimator:hover {background-color: #d4ebff;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-item {z-index: 1;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-parallel-item:only-child::after {width: 0;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3a739b41-82cb-46da-928d-ef70816d5fdc div.sk-text-repr-fallback {display: none;}</style><div id="sk-3a739b41-82cb-46da-928d-ef70816d5fdc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b961215f-f83c-4092-9f26-c1ae261d1110" type="checkbox" ><label class="sk-toggleable__label" for="b961215f-f83c-4092-9f26-c1ae261d1110">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c5394a7-79ca-44a0-a351-0ce39518d91f" type="checkbox" ><label class="sk-toggleable__label" for="1c5394a7-79ca-44a0-a351-0ce39518d91f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a30b20dc-6a20-4ba8-8dc1-cfec7e480005" type="checkbox" ><label class="sk-toggleable__label" for="a30b20dc-6a20-4ba8-8dc1-cfec7e480005">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1ea3645-d40b-43bc-b575-679a9f3addbf" type="checkbox" ><label class="sk-toggleable__label" for="c1ea3645-d40b-43bc-b575-679a9f3addbf">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 {color: black;background-color: white;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 pre{padding: 0;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-toggleable {background-color: white;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-item {z-index: 1;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-parallel-item:only-child::after {width: 0;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2db14efc-5631-4ad6-9c41-6fb1d014ec63" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6b7f15f-6bb7-43e0-82f0-fe4dcbb2b414" type="checkbox" ><label class="sk-toggleable__label" for="e6b7f15f-6bb7-43e0-82f0-fe4dcbb2b414">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff4e5027-31f1-4241-a4e8-9f8ef16e7c61" type="checkbox" ><label class="sk-toggleable__label" for="ff4e5027-31f1-4241-a4e8-9f8ef16e7c61">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ac91c58-70b9-4612-bc5e-701250bfcab3" type="checkbox" ><label class="sk-toggleable__label" for="7ac91c58-70b9-4612-bc5e-701250bfcab3">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d {color: black;background-color: white;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d pre{padding: 0;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-toggleable {background-color: white;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-estimator:hover {background-color: #d4ebff;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-item {z-index: 1;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-parallel-item:only-child::after {width: 0;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d div.sk-text-repr-fallback {display: none;}</style><div id="sk-6ea94d21-7c81-4e6a-9d09-a1f476e2103d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7e3c345-29ff-4ac4-a08c-0f5fbc9b46eb" type="checkbox" ><label class="sk-toggleable__label" for="a7e3c345-29ff-4ac4-a08c-0f5fbc9b46eb">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ff5b005-5d9e-43d4-b159-8f975808dfc0" type="checkbox" ><label class="sk-toggleable__label" for="6ff5b005-5d9e-43d4-b159-8f975808dfc0">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb3af483-b1a7-4c98-9eef-69eee53c39b9" type="checkbox" ><label class="sk-toggleable__label" for="cb3af483-b1a7-4c98-9eef-69eee53c39b9">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66f11211-210a-4e92-9e4f-8af6ead930e6" type="checkbox" ><label class="sk-toggleable__label" for="66f11211-210a-4e92-9e4f-8af6ead930e6">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17fc0b03-0564-4e00-a448-39ece059f20f" type="checkbox" ><label class="sk-toggleable__label" for="17fc0b03-0564-4e00-a448-39ece059f20f">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84878fee-2a67-4761-9491-11b751a8e6ee" type="checkbox" ><label class="sk-toggleable__label" for="84878fee-2a67-4761-9491-11b751a8e6ee">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0a85b04-1728-471d-8446-d6da2f4a2aed" type="checkbox" ><label class="sk-toggleable__label" for="b0a85b04-1728-471d-8446-d6da2f4a2aed">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="452427a3-bdd8-493e-9558-0040d901bb7c" type="checkbox" ><label class="sk-toggleable__label" for="452427a3-bdd8-493e-9558-0040d901bb7c">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9106dd0e-a22c-42d2-8100-95e09c7d8387" type="checkbox" ><label class="sk-toggleable__label" for="9106dd0e-a22c-42d2-8100-95e09c7d8387">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 {color: black;background-color: white;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 pre{padding: 0;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-toggleable {background-color: white;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-item {z-index: 1;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-parallel-item:only-child::after {width: 0;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5b5e88de-64f5-4cd8-b2ff-1cab8ebc2872" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56775215-aef1-4cf0-a8a6-a141099b2eb7" type="checkbox" ><label class="sk-toggleable__label" for="56775215-aef1-4cf0-a8a6-a141099b2eb7">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e653e419-4891-4493-bb9f-2358fbc325b9" type="checkbox" ><label class="sk-toggleable__label" for="e653e419-4891-4493-bb9f-2358fbc325b9">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="597f74e7-2efc-4c9a-94ce-f500a365fda9" type="checkbox" ><label class="sk-toggleable__label" for="597f74e7-2efc-4c9a-94ce-f500a365fda9">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6aa4c4bf-9ac5-45c5-8ccc-17061d687476" type="checkbox" ><label class="sk-toggleable__label" for="6aa4c4bf-9ac5-45c5-8ccc-17061d687476">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e34b9118-9063-4cd1-86ea-a4163c7296cd" type="checkbox" ><label class="sk-toggleable__label" for="e34b9118-9063-4cd1-86ea-a4163c7296cd">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="100eeb0f-4150-4921-a03d-63c51398148c" type="checkbox" ><label class="sk-toggleable__label" for="100eeb0f-4150-4921-a03d-63c51398148c">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9417f705-e92a-459f-b8e2-fd3e34c3c1d7" type="checkbox" ><label class="sk-toggleable__label" for="9417f705-e92a-459f-b8e2-fd3e34c3c1d7">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd070d9c-a2e5-4251-bbe5-5f5c592d09a8" type="checkbox" ><label class="sk-toggleable__label" for="bd070d9c-a2e5-4251-bbe5-5f5c592d09a8">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="224de434-a505-4b07-bf47-ad0994ba3fc6" type="checkbox" ><label class="sk-toggleable__label" for="224de434-a505-4b07-bf47-ad0994ba3fc6">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.096 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
