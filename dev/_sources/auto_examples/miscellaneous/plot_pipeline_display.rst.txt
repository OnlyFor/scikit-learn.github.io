
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-68494138-6e08-463e-947d-eaa6f3362eac {color: black;background-color: white;}#sk-68494138-6e08-463e-947d-eaa6f3362eac pre{padding: 0;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-toggleable {background-color: white;}#sk-68494138-6e08-463e-947d-eaa6f3362eac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-68494138-6e08-463e-947d-eaa6f3362eac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68494138-6e08-463e-947d-eaa6f3362eac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-estimator:hover {background-color: #d4ebff;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-item {z-index: 1;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-parallel-item:only-child::after {width: 0;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-container {display: inline-block;position: relative;}#sk-68494138-6e08-463e-947d-eaa6f3362eac div.sk-text-repr-fallback {display: none;}</style><div id="sk-68494138-6e08-463e-947d-eaa6f3362eac" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac2f7976-0bc1-43cc-bd8f-aaa9a37549fc" type="checkbox" ><label class="sk-toggleable__label" for="ac2f7976-0bc1-43cc-bd8f-aaa9a37549fc">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfaa5f3e-7edd-4ffe-8a93-4405bf5bb56a" type="checkbox" ><label class="sk-toggleable__label" for="dfaa5f3e-7edd-4ffe-8a93-4405bf5bb56a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47f89540-872c-4896-bb57-79d9c66ea22c" type="checkbox" ><label class="sk-toggleable__label" for="47f89540-872c-4896-bb57-79d9c66ea22c">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8e93919d-5110-48ff-9329-dcf22347dd86 {color: black;background-color: white;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 pre{padding: 0;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-toggleable {background-color: white;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-item {z-index: 1;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-parallel-item:only-child::after {width: 0;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-container {display: inline-block;position: relative;}#sk-8e93919d-5110-48ff-9329-dcf22347dd86 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8e93919d-5110-48ff-9329-dcf22347dd86" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcfc3c02-7e0b-4a51-aae1-8a80e28a5da0" type="checkbox" ><label class="sk-toggleable__label" for="fcfc3c02-7e0b-4a51-aae1-8a80e28a5da0">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb811e7f-e12a-42ab-bdde-163dfec1a005" type="checkbox" ><label class="sk-toggleable__label" for="eb811e7f-e12a-42ab-bdde-163dfec1a005">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5032c0d7-f50b-4a09-85c2-251c92547307" type="checkbox" ><label class="sk-toggleable__label" for="5032c0d7-f50b-4a09-85c2-251c92547307">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ff0692f-deb9-4408-94b4-75153938312a" type="checkbox" ><label class="sk-toggleable__label" for="9ff0692f-deb9-4408-94b4-75153938312a">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 {color: black;background-color: white;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 pre{padding: 0;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-toggleable {background-color: white;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-estimator:hover {background-color: #d4ebff;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-item {z-index: 1;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-parallel-item:only-child::after {width: 0;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-container {display: inline-block;position: relative;}#sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025 div.sk-text-repr-fallback {display: none;}</style><div id="sk-55ab0427-a43e-4f0c-9c22-3b0bc6bf2025" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34891c44-9cf0-4989-8faa-ecf786669b0b" type="checkbox" ><label class="sk-toggleable__label" for="34891c44-9cf0-4989-8faa-ecf786669b0b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4d06641-e850-4a7d-adb2-e781badb62fb" type="checkbox" ><label class="sk-toggleable__label" for="c4d06641-e850-4a7d-adb2-e781badb62fb">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22f6fb7c-7521-4648-bd2d-13c26cbc3d92" type="checkbox" ><label class="sk-toggleable__label" for="22f6fb7c-7521-4648-bd2d-13c26cbc3d92">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac {color: black;background-color: white;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac pre{padding: 0;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-toggleable {background-color: white;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-estimator:hover {background-color: #d4ebff;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-item {z-index: 1;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-parallel-item:only-child::after {width: 0;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-container {display: inline-block;position: relative;}#sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac div.sk-text-repr-fallback {display: none;}</style><div id="sk-42f82a42-9519-4e2d-977a-3bf3d4e14fac" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b817503f-d84f-4324-8a31-f040c1b15d6b" type="checkbox" ><label class="sk-toggleable__label" for="b817503f-d84f-4324-8a31-f040c1b15d6b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdbbe10a-e540-46de-8768-313bcc8f489b" type="checkbox" ><label class="sk-toggleable__label" for="fdbbe10a-e540-46de-8768-313bcc8f489b">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16f7b956-a4dd-4a4a-9ea1-19230c6363ab" type="checkbox" ><label class="sk-toggleable__label" for="16f7b956-a4dd-4a4a-9ea1-19230c6363ab">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e3b6065-6c03-4a63-88c5-db617cf975ad" type="checkbox" ><label class="sk-toggleable__label" for="0e3b6065-6c03-4a63-88c5-db617cf975ad">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70455ea0-a6a9-4457-aec8-f68df350b19b" type="checkbox" ><label class="sk-toggleable__label" for="70455ea0-a6a9-4457-aec8-f68df350b19b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1924e737-349f-40df-9da5-c23c1ee4b038" type="checkbox" ><label class="sk-toggleable__label" for="1924e737-349f-40df-9da5-c23c1ee4b038">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b17e4c3-7371-4fa3-ac40-88c6d927f717" type="checkbox" ><label class="sk-toggleable__label" for="8b17e4c3-7371-4fa3-ac40-88c6d927f717">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="045c2b7b-9b68-4cdc-8b54-4a5f28d0c707" type="checkbox" ><label class="sk-toggleable__label" for="045c2b7b-9b68-4cdc-8b54-4a5f28d0c707">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d602fd0-6748-4c0a-9e11-3861dd8ea68b" type="checkbox" ><label class="sk-toggleable__label" for="6d602fd0-6748-4c0a-9e11-3861dd8ea68b">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 {color: black;background-color: white;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 pre{padding: 0;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-toggleable {background-color: white;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-item {z-index: 1;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-parallel-item:only-child::after {width: 0;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-container {display: inline-block;position: relative;}#sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d6a91b96-fc5c-43f6-b017-8b80b902ee48" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0dded13-1b11-4ace-bc0f-f45347461d87" type="checkbox" ><label class="sk-toggleable__label" for="f0dded13-1b11-4ace-bc0f-f45347461d87">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4117c3d5-deab-4481-a9a0-b05a6635163c" type="checkbox" ><label class="sk-toggleable__label" for="4117c3d5-deab-4481-a9a0-b05a6635163c">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fee69d3e-df38-41a3-b480-5c3953a44ebe" type="checkbox" ><label class="sk-toggleable__label" for="fee69d3e-df38-41a3-b480-5c3953a44ebe">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffcb4636-151b-45d2-a130-eb0b7d83b9cf" type="checkbox" ><label class="sk-toggleable__label" for="ffcb4636-151b-45d2-a130-eb0b7d83b9cf">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c166147-70e6-4c4a-a656-0b47e604dc78" type="checkbox" ><label class="sk-toggleable__label" for="2c166147-70e6-4c4a-a656-0b47e604dc78">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcfe3349-2c10-4793-b7d7-2628979cbd37" type="checkbox" ><label class="sk-toggleable__label" for="fcfe3349-2c10-4793-b7d7-2628979cbd37">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6454fb4-f37b-4e32-896b-a5350c5eac6d" type="checkbox" ><label class="sk-toggleable__label" for="e6454fb4-f37b-4e32-896b-a5350c5eac6d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34bb069c-9da4-4973-ace8-c9a84b43be09" type="checkbox" ><label class="sk-toggleable__label" for="34bb069c-9da4-4973-ace8-c9a84b43be09">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4298f301-e584-45e3-85a9-48cdd71c6c7d" type="checkbox" ><label class="sk-toggleable__label" for="4298f301-e584-45e3-85a9-48cdd71c6c7d">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.078 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
