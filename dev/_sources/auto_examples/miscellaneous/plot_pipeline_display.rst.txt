
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 {color: black;background-color: white;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 pre{padding: 0;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-toggleable {background-color: white;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-item {z-index: 1;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-parallel-item:only-child::after {width: 0;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2cd0f415-280d-49bc-b998-ccbe5e90fb48" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a27e8e8a-6d34-40bf-91ff-c64b9c70cbe8" type="checkbox" ><label for="a27e8e8a-6d34-40bf-91ff-c64b9c70cbe8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7954c905-b731-41a9-b098-9901a18f1b12" type="checkbox" ><label for="7954c905-b731-41a9-b098-9901a18f1b12" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf49d88f-6172-4f7b-a23b-0ed2c68fc196" type="checkbox" ><label for="bf49d88f-6172-4f7b-a23b-0ed2c68fc196" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 {color: black;background-color: white;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 pre{padding: 0;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-toggleable {background-color: white;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-item {z-index: 1;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-parallel-item:only-child::after {width: 0;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9b057a4b-fb2f-428e-84d4-d36420dae388 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9b057a4b-fb2f-428e-84d4-d36420dae388" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17998031-0415-448c-9f56-0bf2995de298" type="checkbox" ><label for="17998031-0415-448c-9f56-0bf2995de298" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0723609b-5df0-48a5-b071-c55a106623fc" type="checkbox" ><label for="0723609b-5df0-48a5-b071-c55a106623fc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb3baa53-64ad-4ba9-b00e-74ddc04d414b" type="checkbox" ><label for="cb3baa53-64ad-4ba9-b00e-74ddc04d414b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9dcfaf1-860f-4f20-bbcf-0e2242f7c865" type="checkbox" ><label for="b9dcfaf1-860f-4f20-bbcf-0e2242f7c865" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 {color: black;background-color: white;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 pre{padding: 0;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-toggleable {background-color: white;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-estimator:hover {background-color: #d4ebff;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-item {z-index: 1;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-parallel-item:only-child::after {width: 0;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-847c1918-ca1d-4b61-a55f-04aa91f19e59 div.sk-text-repr-fallback {display: none;}</style><div id="sk-847c1918-ca1d-4b61-a55f-04aa91f19e59" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22964052-aaa4-4385-83af-4ede7854490d" type="checkbox" ><label for="22964052-aaa4-4385-83af-4ede7854490d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0538ac4-5e2f-4d32-ad4d-74b7e55eaa7e" type="checkbox" ><label for="f0538ac4-5e2f-4d32-ad4d-74b7e55eaa7e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f7bb885-ff6f-4c37-b9ed-257f123d1b1c" type="checkbox" ><label for="3f7bb885-ff6f-4c37-b9ed-257f123d1b1c" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 {color: black;background-color: white;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 pre{padding: 0;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-toggleable {background-color: white;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-item {z-index: 1;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-parallel-item:only-child::after {width: 0;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b318acc-c77c-4292-9f42-a4e536f28d57 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b318acc-c77c-4292-9f42-a4e536f28d57" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e26ec8f6-eb0f-4f09-b430-3c89e4544a4f" type="checkbox" ><label for="e26ec8f6-eb0f-4f09-b430-3c89e4544a4f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4af0e13-c464-40f8-bd09-201f0d86b07d" type="checkbox" ><label for="f4af0e13-c464-40f8-bd09-201f0d86b07d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9701fb9-8f4c-4a04-86fb-673144a85aa3" type="checkbox" ><label for="e9701fb9-8f4c-4a04-86fb-673144a85aa3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7ddf311-1763-4a35-84b3-7a27e97ebb2e" type="checkbox" ><label for="d7ddf311-1763-4a35-84b3-7a27e97ebb2e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3e659ac-2e74-4a18-8873-28fdf461f11e" type="checkbox" ><label for="f3e659ac-2e74-4a18-8873-28fdf461f11e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d404f0f2-cef4-4058-8b15-2142ef3346c2" type="checkbox" ><label for="d404f0f2-cef4-4058-8b15-2142ef3346c2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="084e55f6-7cc8-4511-a079-dfa7faa8779c" type="checkbox" ><label for="084e55f6-7cc8-4511-a079-dfa7faa8779c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8fa674d1-8e03-4795-87a5-32e12cf2dc28" type="checkbox" ><label for="8fa674d1-8e03-4795-87a5-32e12cf2dc28" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e2df9b7-eb95-4111-8b2f-7c993728cff9" type="checkbox" ><label for="0e2df9b7-eb95-4111-8b2f-7c993728cff9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 {color: black;background-color: white;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 pre{padding: 0;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-toggleable {background-color: white;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-item {z-index: 1;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-parallel-item:only-child::after {width: 0;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-684d8da3-afec-4f52-8cb2-bcec82118eb9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-684d8da3-afec-4f52-8cb2-bcec82118eb9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="405aa16c-201e-4988-a67a-c2ebb9041b78" type="checkbox" ><label for="405aa16c-201e-4988-a67a-c2ebb9041b78" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7496a6d-74d4-4104-8dc9-2893f3d92ab3" type="checkbox" ><label for="c7496a6d-74d4-4104-8dc9-2893f3d92ab3" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb28008f-c0cc-4e16-aceb-28893c5890f8" type="checkbox" ><label for="eb28008f-c0cc-4e16-aceb-28893c5890f8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae4bcebe-2f7d-4131-8005-744ed0366904" type="checkbox" ><label for="ae4bcebe-2f7d-4131-8005-744ed0366904" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1238a4f-8c00-429d-a2c4-41df56f5d0da" type="checkbox" ><label for="c1238a4f-8c00-429d-a2c4-41df56f5d0da" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28a20185-d8c7-4756-a901-4306e77b1b3a" type="checkbox" ><label for="28a20185-d8c7-4756-a901-4306e77b1b3a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9deb7d38-08e2-413f-84b5-8561be883bc5" type="checkbox" ><label for="9deb7d38-08e2-413f-84b5-8561be883bc5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcff1b97-7237-41cd-8a6b-575692c8c756" type="checkbox" ><label for="bcff1b97-7237-41cd-8a6b-575692c8c756" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="602a0be5-b0b1-47c9-98c6-7a0af44b5925" type="checkbox" ><label for="602a0be5-b0b1-47c9-98c6-7a0af44b5925" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.104 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
