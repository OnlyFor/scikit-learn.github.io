
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b {color: black;background-color: white;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b pre{padding: 0;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-toggleable {background-color: white;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-estimator:hover {background-color: #d4ebff;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-item {z-index: 1;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-parallel-item:only-child::after {width: 0;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1bfc18f0-31cc-4776-8381-4d75d77c082b div.sk-text-repr-fallback {display: none;}</style><div id="sk-1bfc18f0-31cc-4776-8381-4d75d77c082b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f09a8b7c-5854-4b63-976b-dca8b203ac48" type="checkbox" ><label for="f09a8b7c-5854-4b63-976b-dca8b203ac48" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34aff4f3-07b9-425d-a03f-6c825ec8fdd8" type="checkbox" ><label for="34aff4f3-07b9-425d-a03f-6c825ec8fdd8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8addc75c-a584-444f-90af-8fefa99f9e2b" type="checkbox" ><label for="8addc75c-a584-444f-90af-8fefa99f9e2b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 {color: black;background-color: white;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 pre{padding: 0;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-toggleable {background-color: white;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-estimator:hover {background-color: #d4ebff;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-item {z-index: 1;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-parallel-item:only-child::after {width: 0;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13 div.sk-text-repr-fallback {display: none;}</style><div id="sk-95d95eb1-deb5-4c74-a1ec-22018ea0ba13" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23aba1c5-477a-4c68-8cc5-e2d2c8e2612e" type="checkbox" ><label for="23aba1c5-477a-4c68-8cc5-e2d2c8e2612e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75c1b757-0b4a-4a39-8bd1-cc11fd11b92e" type="checkbox" ><label for="75c1b757-0b4a-4a39-8bd1-cc11fd11b92e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="507de102-fdaf-4930-8fe5-07914e6e1a0a" type="checkbox" ><label for="507de102-fdaf-4930-8fe5-07914e6e1a0a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f52c5d09-d3b3-49fb-b121-2c202c20f9ba" type="checkbox" ><label for="f52c5d09-d3b3-49fb-b121-2c202c20f9ba" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f201f242-6ed0-4373-855c-41c088e7c902 {color: black;background-color: white;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 pre{padding: 0;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-toggleable {background-color: white;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-item {z-index: 1;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-parallel-item:only-child::after {width: 0;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f201f242-6ed0-4373-855c-41c088e7c902 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f201f242-6ed0-4373-855c-41c088e7c902" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6705102e-2056-4d76-9c84-87ffaefa1847" type="checkbox" ><label for="6705102e-2056-4d76-9c84-87ffaefa1847" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0c62510-179f-4260-9da9-df881ae41618" type="checkbox" ><label for="e0c62510-179f-4260-9da9-df881ae41618" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b05a984-1881-4b88-8db2-762f6117e5df" type="checkbox" ><label for="3b05a984-1881-4b88-8db2-762f6117e5df" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb {color: black;background-color: white;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb pre{padding: 0;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-toggleable {background-color: white;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-estimator:hover {background-color: #d4ebff;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-item {z-index: 1;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-parallel-item:only-child::after {width: 0;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb div.sk-text-repr-fallback {display: none;}</style><div id="sk-7d869a8f-6c2f-4473-b97a-22c34ff98ffb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7d426a9-a44f-4891-a10e-e5f48923e84b" type="checkbox" ><label for="d7d426a9-a44f-4891-a10e-e5f48923e84b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ef3719f-6088-479d-b43f-06d3d38b6f89" type="checkbox" ><label for="6ef3719f-6088-479d-b43f-06d3d38b6f89" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1789d9fa-f5ea-4d12-9aa9-29e9774ad4d2" type="checkbox" ><label for="1789d9fa-f5ea-4d12-9aa9-29e9774ad4d2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f478b16f-7f3a-498f-bca1-f0fe383c098b" type="checkbox" ><label for="f478b16f-7f3a-498f-bca1-f0fe383c098b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6ed58f8-93af-4790-9051-14046e9e1a70" type="checkbox" ><label for="f6ed58f8-93af-4790-9051-14046e9e1a70" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbab8eab-5815-4d85-8d88-b2c03c1d64bd" type="checkbox" ><label for="fbab8eab-5815-4d85-8d88-b2c03c1d64bd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77ed38a1-2ea5-4321-a7ce-e254e9507f23" type="checkbox" ><label for="77ed38a1-2ea5-4321-a7ce-e254e9507f23" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d3ee74a-db00-4e23-bed2-2a5db85deab5" type="checkbox" ><label for="9d3ee74a-db00-4e23-bed2-2a5db85deab5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa249e50-0353-4035-a637-8e9a5135982a" type="checkbox" ><label for="fa249e50-0353-4035-a637-8e9a5135982a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0475c846-781c-4507-936c-a5c6f55ea5fc {color: black;background-color: white;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc pre{padding: 0;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-toggleable {background-color: white;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-estimator:hover {background-color: #d4ebff;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-item {z-index: 1;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-parallel-item:only-child::after {width: 0;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0475c846-781c-4507-936c-a5c6f55ea5fc div.sk-text-repr-fallback {display: none;}</style><div id="sk-0475c846-781c-4507-936c-a5c6f55ea5fc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8baaff2a-59d8-49b5-9838-2f4934dac574" type="checkbox" ><label for="8baaff2a-59d8-49b5-9838-2f4934dac574" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55014896-d262-4736-a7c4-56f89dd2b064" type="checkbox" ><label for="55014896-d262-4736-a7c4-56f89dd2b064" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4e628a2-103a-44b0-a638-d856d1ce825e" type="checkbox" ><label for="b4e628a2-103a-44b0-a638-d856d1ce825e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0af1ba7-37ca-4c62-b2fd-cc26d92db377" type="checkbox" ><label for="c0af1ba7-37ca-4c62-b2fd-cc26d92db377" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8671a774-8da1-4363-9985-2fc71929b09d" type="checkbox" ><label for="8671a774-8da1-4363-9985-2fc71929b09d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e58b33aa-1120-40b7-8151-08f6f59882fa" type="checkbox" ><label for="e58b33aa-1120-40b7-8151-08f6f59882fa" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6cca2b2f-c14d-479c-9066-6ed8387e22b7" type="checkbox" ><label for="6cca2b2f-c14d-479c-9066-6ed8387e22b7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6760d721-0838-44d7-933b-7790b22aae40" type="checkbox" ><label for="6760d721-0838-44d7-933b-7790b22aae40" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0af7b601-3a3b-4cad-ae46-63c32835bbb4" type="checkbox" ><label for="0af7b601-3a3b-4cad-ae46-63c32835bbb4" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
