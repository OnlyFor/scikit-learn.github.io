
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2d166af5-cafa-4fde-9a91-3805690746a7 {color: black;background-color: white;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 pre{padding: 0;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-toggleable {background-color: white;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-item {z-index: 1;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-parallel-item:only-child::after {width: 0;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2d166af5-cafa-4fde-9a91-3805690746a7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2d166af5-cafa-4fde-9a91-3805690746a7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12c3d99b-f4eb-47ba-94bc-e25d966aa272" type="checkbox" ><label for="12c3d99b-f4eb-47ba-94bc-e25d966aa272" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8ed504f-c240-4251-bc74-84f1eb34a0d3" type="checkbox" ><label for="a8ed504f-c240-4251-bc74-84f1eb34a0d3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bf54724-f9cc-4de0-a389-052dc3e97d5f" type="checkbox" ><label for="5bf54724-f9cc-4de0-a389-052dc3e97d5f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d {color: black;background-color: white;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d pre{padding: 0;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-toggleable {background-color: white;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-estimator:hover {background-color: #d4ebff;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-item {z-index: 1;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-parallel-item:only-child::after {width: 0;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d div.sk-text-repr-fallback {display: none;}</style><div id="sk-f0c7ad35-958a-4d8e-9af2-bd09454ca51d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1067d370-83be-4d1b-8181-66d2f48e2c06" type="checkbox" ><label for="1067d370-83be-4d1b-8181-66d2f48e2c06" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b9518bc-37eb-44e8-8f60-a3e0ebb74346" type="checkbox" ><label for="4b9518bc-37eb-44e8-8f60-a3e0ebb74346" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e6ac318-69da-437d-beac-6f5c5119cce9" type="checkbox" ><label for="0e6ac318-69da-437d-beac-6f5c5119cce9" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f15df9e-3a0f-4cb1-b2dc-1f3716e015c2" type="checkbox" ><label for="9f15df9e-3a0f-4cb1-b2dc-1f3716e015c2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c26b637c-cf3d-4316-a349-d6283b016129 {color: black;background-color: white;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 pre{padding: 0;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-toggleable {background-color: white;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-item {z-index: 1;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-parallel-item:only-child::after {width: 0;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c26b637c-cf3d-4316-a349-d6283b016129 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c26b637c-cf3d-4316-a349-d6283b016129" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c5e2ef3-305c-4938-89ec-3ccfaba61711" type="checkbox" ><label for="2c5e2ef3-305c-4938-89ec-3ccfaba61711" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c98bbde-b6ef-42a6-8e62-8f78da4db411" type="checkbox" ><label for="9c98bbde-b6ef-42a6-8e62-8f78da4db411" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e0fb2ae-589c-4b09-a467-4be23261331b" type="checkbox" ><label for="1e0fb2ae-589c-4b09-a467-4be23261331b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab {color: black;background-color: white;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab pre{padding: 0;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-toggleable {background-color: white;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-estimator:hover {background-color: #d4ebff;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-item {z-index: 1;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-parallel-item:only-child::after {width: 0;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7e580fe6-6447-48b8-af90-2dc4ded429ab div.sk-text-repr-fallback {display: none;}</style><div id="sk-7e580fe6-6447-48b8-af90-2dc4ded429ab" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f34241c-aba6-476f-8765-9b4012982049" type="checkbox" ><label for="2f34241c-aba6-476f-8765-9b4012982049" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69e4fe30-ff34-45ae-aa6f-80f5c5f6cda7" type="checkbox" ><label for="69e4fe30-ff34-45ae-aa6f-80f5c5f6cda7" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af9cfaf0-b9dd-4862-93a0-94ae8ac9bcc8" type="checkbox" ><label for="af9cfaf0-b9dd-4862-93a0-94ae8ac9bcc8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7de9b6e6-8d86-4789-a2b1-2ae0b8134c85" type="checkbox" ><label for="7de9b6e6-8d86-4789-a2b1-2ae0b8134c85" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63f41757-f018-4d3c-aca3-067b799e4fce" type="checkbox" ><label for="63f41757-f018-4d3c-aca3-067b799e4fce" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c123615c-c2f1-4f15-8e62-3dfd64d6ac2f" type="checkbox" ><label for="c123615c-c2f1-4f15-8e62-3dfd64d6ac2f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d162d201-1e3b-43e2-931d-802a13a9c2cf" type="checkbox" ><label for="d162d201-1e3b-43e2-931d-802a13a9c2cf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="baee0300-8056-4904-9716-1383bbeaf139" type="checkbox" ><label for="baee0300-8056-4904-9716-1383bbeaf139" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ed7e8da-0a34-47ee-93c4-e2f0463f2b88" type="checkbox" ><label for="8ed7e8da-0a34-47ee-93c4-e2f0463f2b88" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f {color: black;background-color: white;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f pre{padding: 0;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-toggleable {background-color: white;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-estimator:hover {background-color: #d4ebff;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-item {z-index: 1;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-parallel-item:only-child::after {width: 0;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f div.sk-text-repr-fallback {display: none;}</style><div id="sk-dc6c32ce-0fb4-467b-8f19-093ac7aacf6f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccbfc326-755e-4221-b735-e0d34d7ac056" type="checkbox" ><label for="ccbfc326-755e-4221-b735-e0d34d7ac056" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88c00e88-ec3b-488b-a20b-01d9f348be73" type="checkbox" ><label for="88c00e88-ec3b-488b-a20b-01d9f348be73" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b822ea46-df49-41a8-b9b4-4f1aeb43301b" type="checkbox" ><label for="b822ea46-df49-41a8-b9b4-4f1aeb43301b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12827a9e-ccba-450e-8928-816f477091ab" type="checkbox" ><label for="12827a9e-ccba-450e-8928-816f477091ab" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da3b57ae-80d0-4160-8902-7af9ab7bc518" type="checkbox" ><label for="da3b57ae-80d0-4160-8902-7af9ab7bc518" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="882bda68-1b54-43af-8ada-ac29fae6ead9" type="checkbox" ><label for="882bda68-1b54-43af-8ada-ac29fae6ead9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bda14c6-a97b-47c4-a887-ff1b2362e52d" type="checkbox" ><label for="5bda14c6-a97b-47c4-a887-ff1b2362e52d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2b33501-e15f-4c32-b3a8-f6c815fc5773" type="checkbox" ><label for="f2b33501-e15f-4c32-b3a8-f6c815fc5773" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a431cb1-75ca-4b32-ac7f-735e1a0f4e85" type="checkbox" ><label for="9a431cb1-75ca-4b32-ac7f-735e1a0f4e85" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
