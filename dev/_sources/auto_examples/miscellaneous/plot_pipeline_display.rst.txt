
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 {color: black;background-color: white;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 pre{padding: 0;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-toggleable {background-color: white;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-item {z-index: 1;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-parallel-item:only-child::after {width: 0;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0f0b4cbb-ed90-4b3a-9052-046370b02272 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0f0b4cbb-ed90-4b3a-9052-046370b02272" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44c52731-d8e3-448f-9cc7-3413c4e45659" type="checkbox" ><label for="44c52731-d8e3-448f-9cc7-3413c4e45659" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbf8a338-e955-4ff5-8f63-e7a5d69dcae4" type="checkbox" ><label for="dbf8a338-e955-4ff5-8f63-e7a5d69dcae4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3b9bf7e-edd9-470c-bb9d-efa27e28bde3" type="checkbox" ><label for="d3b9bf7e-edd9-470c-bb9d-efa27e28bde3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9a05083c-42b2-4859-8823-25023a267523 {color: black;background-color: white;}#sk-9a05083c-42b2-4859-8823-25023a267523 pre{padding: 0;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-toggleable {background-color: white;}#sk-9a05083c-42b2-4859-8823-25023a267523 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9a05083c-42b2-4859-8823-25023a267523 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9a05083c-42b2-4859-8823-25023a267523 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9a05083c-42b2-4859-8823-25023a267523 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9a05083c-42b2-4859-8823-25023a267523 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a05083c-42b2-4859-8823-25023a267523 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-item {z-index: 1;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-parallel-item:only-child::after {width: 0;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9a05083c-42b2-4859-8823-25023a267523 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9a05083c-42b2-4859-8823-25023a267523" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f66465ed-9c24-4b92-9bdc-cb1af140e974" type="checkbox" ><label for="f66465ed-9c24-4b92-9bdc-cb1af140e974" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e52691a-49e7-47e1-9545-45ca7bafe892" type="checkbox" ><label for="7e52691a-49e7-47e1-9545-45ca7bafe892" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f38032e-621f-4c5f-893a-d61d213acfdf" type="checkbox" ><label for="3f38032e-621f-4c5f-893a-d61d213acfdf" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60025c7f-26df-48cc-940d-fe14d1a9406d" type="checkbox" ><label for="60025c7f-26df-48cc-940d-fe14d1a9406d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 {color: black;background-color: white;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 pre{padding: 0;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-toggleable {background-color: white;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-item {z-index: 1;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-parallel-item:only-child::after {width: 0;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a41b81f7-476c-43c6-8332-e0b800ae4c26 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a41b81f7-476c-43c6-8332-e0b800ae4c26" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77622c8d-1ceb-4c04-80b3-a1ac35576a7c" type="checkbox" ><label for="77622c8d-1ceb-4c04-80b3-a1ac35576a7c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69580d57-13f0-41ac-a3bd-26c18a7abc7e" type="checkbox" ><label for="69580d57-13f0-41ac-a3bd-26c18a7abc7e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff2fde48-9a1b-4505-a3ec-4d3b1a42823a" type="checkbox" ><label for="ff2fde48-9a1b-4505-a3ec-4d3b1a42823a" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c {color: black;background-color: white;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c pre{padding: 0;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-toggleable {background-color: white;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-estimator:hover {background-color: #d4ebff;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-item {z-index: 1;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-parallel-item:only-child::after {width: 0;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c div.sk-text-repr-fallback {display: none;}</style><div id="sk-d1d466f6-0527-4d6c-b142-eef95c17fe2c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52abf6c7-ce06-41cc-bf3f-010247ab0422" type="checkbox" ><label for="52abf6c7-ce06-41cc-bf3f-010247ab0422" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e52355c-acb5-4b99-8fab-44fdeb974f4b" type="checkbox" ><label for="0e52355c-acb5-4b99-8fab-44fdeb974f4b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56058560-1b5d-49ba-b3ad-56073c4036d0" type="checkbox" ><label for="56058560-1b5d-49ba-b3ad-56073c4036d0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dffc096b-4f58-4e09-b77a-339016fb6893" type="checkbox" ><label for="dffc096b-4f58-4e09-b77a-339016fb6893" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21a7e7f4-0e44-4262-83b2-13e341bab51d" type="checkbox" ><label for="21a7e7f4-0e44-4262-83b2-13e341bab51d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab8c21d0-e9e6-45dc-a5f1-b926cad387cb" type="checkbox" ><label for="ab8c21d0-e9e6-45dc-a5f1-b926cad387cb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2b97d57-f5d6-4c9b-82c7-1de8e6cf1847" type="checkbox" ><label for="a2b97d57-f5d6-4c9b-82c7-1de8e6cf1847" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b176fa6-8dc5-4c6a-ab52-36626561be80" type="checkbox" ><label for="4b176fa6-8dc5-4c6a-ab52-36626561be80" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="330446f0-6175-4e7a-8fec-df29d10e92ca" type="checkbox" ><label for="330446f0-6175-4e7a-8fec-df29d10e92ca" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-540495f5-b149-4663-84a1-441a0a230015 {color: black;background-color: white;}#sk-540495f5-b149-4663-84a1-441a0a230015 pre{padding: 0;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-toggleable {background-color: white;}#sk-540495f5-b149-4663-84a1-441a0a230015 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-540495f5-b149-4663-84a1-441a0a230015 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-540495f5-b149-4663-84a1-441a0a230015 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-540495f5-b149-4663-84a1-441a0a230015 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-540495f5-b149-4663-84a1-441a0a230015 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-540495f5-b149-4663-84a1-441a0a230015 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-estimator:hover {background-color: #d4ebff;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-item {z-index: 1;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-parallel-item:only-child::after {width: 0;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-540495f5-b149-4663-84a1-441a0a230015 div.sk-text-repr-fallback {display: none;}</style><div id="sk-540495f5-b149-4663-84a1-441a0a230015" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c242341-ff24-4f3f-8b15-e29c05ae97b4" type="checkbox" ><label for="5c242341-ff24-4f3f-8b15-e29c05ae97b4" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b351f015-6e05-4517-8f84-fed4133a2bfa" type="checkbox" ><label for="b351f015-6e05-4517-8f84-fed4133a2bfa" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2af3aee-a585-4277-9334-e7d80a4121e0" type="checkbox" ><label for="d2af3aee-a585-4277-9334-e7d80a4121e0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe5112f0-5d34-4e03-a375-77dfe89df9ad" type="checkbox" ><label for="fe5112f0-5d34-4e03-a375-77dfe89df9ad" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ef389e5-076d-42fc-bccf-c7082eb2417e" type="checkbox" ><label for="8ef389e5-076d-42fc-bccf-c7082eb2417e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a30f4ff-b934-4297-a78a-2ec107933520" type="checkbox" ><label for="3a30f4ff-b934-4297-a78a-2ec107933520" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcd481ac-d53a-4637-bf27-b556970b6294" type="checkbox" ><label for="bcd481ac-d53a-4637-bf27-b556970b6294" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa64555c-81b8-4400-85a6-6afec8ab6fe4" type="checkbox" ><label for="fa64555c-81b8-4400-85a6-6afec8ab6fe4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2707ce04-54db-4efb-9e6d-2a56fdf8a6ac" type="checkbox" ><label for="2707ce04-54db-4efb-9e6d-2a56fdf8a6ac" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
