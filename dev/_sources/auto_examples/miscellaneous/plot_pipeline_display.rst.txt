
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-461e0677-a28e-43d4-8c52-79da170207a3 {color: black;background-color: white;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 pre{padding: 0;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-toggleable {background-color: white;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-item {z-index: 1;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-parallel-item:only-child::after {width: 0;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-461e0677-a28e-43d4-8c52-79da170207a3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-461e0677-a28e-43d4-8c52-79da170207a3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcda6193-a931-473c-a847-489ce3da7c23" type="checkbox" ><label for="fcda6193-a931-473c-a847-489ce3da7c23" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ebd001d5-19e5-4c7c-b3d0-f228d6a2e4e1" type="checkbox" ><label for="ebd001d5-19e5-4c7c-b3d0-f228d6a2e4e1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fd05d95-7e76-4dd3-aa19-b650c8aa4053" type="checkbox" ><label for="1fd05d95-7e76-4dd3-aa19-b650c8aa4053" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 {color: black;background-color: white;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 pre{padding: 0;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-toggleable {background-color: white;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-estimator:hover {background-color: #d4ebff;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-item {z-index: 1;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-parallel-item:only-child::after {width: 0;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528 div.sk-text-repr-fallback {display: none;}</style><div id="sk-337bbd4c-ca6c-4f59-a8b6-4aa3e8385528" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58847873-d45e-4645-ab26-307729c399fd" type="checkbox" ><label for="58847873-d45e-4645-ab26-307729c399fd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60621dde-fe31-4564-aaf9-6c72994de5ce" type="checkbox" ><label for="60621dde-fe31-4564-aaf9-6c72994de5ce" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92afc0d9-6914-4f88-bde2-e9ec7068a9e3" type="checkbox" ><label for="92afc0d9-6914-4f88-bde2-e9ec7068a9e3" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12e103d8-89a0-4f13-8e05-89bdd0b851a4" type="checkbox" ><label for="12e103d8-89a0-4f13-8e05-89bdd0b851a4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f {color: black;background-color: white;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f pre{padding: 0;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-toggleable {background-color: white;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-estimator:hover {background-color: #d4ebff;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-item {z-index: 1;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-parallel-item:only-child::after {width: 0;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f div.sk-text-repr-fallback {display: none;}</style><div id="sk-b452b6d4-0ef0-4d59-8ec3-6ea920fe775f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e78b76d-cd7b-4ac1-853f-b398ec901eeb" type="checkbox" ><label for="5e78b76d-cd7b-4ac1-853f-b398ec901eeb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92d8ff94-ce6f-4882-8da5-74eb035e6b3b" type="checkbox" ><label for="92d8ff94-ce6f-4882-8da5-74eb035e6b3b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="729ec55f-0439-430c-a62a-4885b8bfa49b" type="checkbox" ><label for="729ec55f-0439-430c-a62a-4885b8bfa49b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 {color: black;background-color: white;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 pre{padding: 0;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-toggleable {background-color: white;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-item {z-index: 1;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-parallel-item:only-child::after {width: 0;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5f2f9946-b564-4d8f-a57c-5017a250df32 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5f2f9946-b564-4d8f-a57c-5017a250df32" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="126144b0-8352-40b3-a048-51f046f42d7f" type="checkbox" ><label for="126144b0-8352-40b3-a048-51f046f42d7f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83e72d2b-d0b8-478b-a663-83dfb1690d96" type="checkbox" ><label for="83e72d2b-d0b8-478b-a663-83dfb1690d96" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d87e2a50-8e29-43b6-8765-817a1f4de37c" type="checkbox" ><label for="d87e2a50-8e29-43b6-8765-817a1f4de37c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b54f6d0-2457-45fe-8438-1dcc1151f8eb" type="checkbox" ><label for="5b54f6d0-2457-45fe-8438-1dcc1151f8eb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7edcc71b-fe4d-47de-a4d1-a36867692808" type="checkbox" ><label for="7edcc71b-fe4d-47de-a4d1-a36867692808" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69f0173e-bd26-4bad-bcf6-331f35b11dcf" type="checkbox" ><label for="69f0173e-bd26-4bad-bcf6-331f35b11dcf" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5c79448-f8b8-4634-b0a5-15a166de21c9" type="checkbox" ><label for="c5c79448-f8b8-4634-b0a5-15a166de21c9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd5e6061-802b-412f-98a0-4d0375d7b386" type="checkbox" ><label for="cd5e6061-802b-412f-98a0-4d0375d7b386" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="106172a3-a414-4de6-8fae-fcc82db9016a" type="checkbox" ><label for="106172a3-a414-4de6-8fae-fcc82db9016a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde {color: black;background-color: white;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde pre{padding: 0;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-toggleable {background-color: white;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-estimator:hover {background-color: #d4ebff;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-item {z-index: 1;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-parallel-item:only-child::after {width: 0;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde div.sk-text-repr-fallback {display: none;}</style><div id="sk-9b9f5be5-738c-4f8d-8dfe-dc59ad6dcfde" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="805d10a5-f006-4a0e-826d-148dcab00694" type="checkbox" ><label for="805d10a5-f006-4a0e-826d-148dcab00694" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e06366eb-4a14-4cfe-a329-9569c403664b" type="checkbox" ><label for="e06366eb-4a14-4cfe-a329-9569c403664b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="966a5754-14e9-4f58-8824-43d3a47f0594" type="checkbox" ><label for="966a5754-14e9-4f58-8824-43d3a47f0594" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e24f66bc-8f94-48ed-8e94-df1448d2f878" type="checkbox" ><label for="e24f66bc-8f94-48ed-8e94-df1448d2f878" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e850ed6-5507-4266-9c5b-6a95733f78f5" type="checkbox" ><label for="2e850ed6-5507-4266-9c5b-6a95733f78f5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5c9fda5-abe3-4c8d-84ac-c14718ef9303" type="checkbox" ><label for="b5c9fda5-abe3-4c8d-84ac-c14718ef9303" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e11f3304-23ba-4310-8b25-867e6d101374" type="checkbox" ><label for="e11f3304-23ba-4310-8b25-867e6d101374" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d7bfb0d-e7a5-4f81-91dc-a32af4fe2e75" type="checkbox" ><label for="7d7bfb0d-e7a5-4f81-91dc-a32af4fe2e75" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a04bacbc-5da4-4c48-aaf9-f31e52159681" type="checkbox" ><label for="a04bacbc-5da4-4c48-aaf9-f31e52159681" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
