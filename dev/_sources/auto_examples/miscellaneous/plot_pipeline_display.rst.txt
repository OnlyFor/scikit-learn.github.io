
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd {color: black;background-color: white;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd pre{padding: 0;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-toggleable {background-color: white;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-estimator:hover {background-color: #d4ebff;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-item {z-index: 1;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-parallel-item:only-child::after {width: 0;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd div.sk-text-repr-fallback {display: none;}</style><div id="sk-4a5b64d5-a4cf-4e27-b896-9875e94c33dd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5acc32ad-fe1a-480b-95fb-0d83fb145965" type="checkbox" ><label for="5acc32ad-fe1a-480b-95fb-0d83fb145965" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84d6b05d-30b3-44e4-990c-78763b37ba97" type="checkbox" ><label for="84d6b05d-30b3-44e4-990c-78763b37ba97" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90901d80-f980-4f40-b25e-c54bfda9adb2" type="checkbox" ><label for="90901d80-f980-4f40-b25e-c54bfda9adb2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 {color: black;background-color: white;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 pre{padding: 0;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-toggleable {background-color: white;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-item {z-index: 1;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-parallel-item:only-child::after {width: 0;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-990eb71e-67a6-43b3-95a0-412f3b3551d8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-990eb71e-67a6-43b3-95a0-412f3b3551d8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bf045c0-85dd-4cd8-a022-c191d11f30da" type="checkbox" ><label for="0bf045c0-85dd-4cd8-a022-c191d11f30da" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0051a5f-f1af-4e0b-aeb0-4e64263cb722" type="checkbox" ><label for="c0051a5f-f1af-4e0b-aeb0-4e64263cb722" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7869be0-6901-418e-920a-91912b5fde04" type="checkbox" ><label for="b7869be0-6901-418e-920a-91912b5fde04" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b70a485-6f9e-4f83-abc4-a4914e425a4f" type="checkbox" ><label for="4b70a485-6f9e-4f83-abc4-a4914e425a4f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb {color: black;background-color: white;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb pre{padding: 0;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-toggleable {background-color: white;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-estimator:hover {background-color: #d4ebff;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-item {z-index: 1;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-parallel-item:only-child::after {width: 0;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb div.sk-text-repr-fallback {display: none;}</style><div id="sk-3fd73e05-31ee-48b6-9d03-0250c2f13dbb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbbdada7-3601-4d1f-9830-817a65584d9e" type="checkbox" ><label for="bbbdada7-3601-4d1f-9830-817a65584d9e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0839bbec-6701-4467-bb94-679c7b67ebaf" type="checkbox" ><label for="0839bbec-6701-4467-bb94-679c7b67ebaf" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25fdbf40-1f53-483e-8c36-8aed94f1df42" type="checkbox" ><label for="25fdbf40-1f53-483e-8c36-8aed94f1df42" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a {color: black;background-color: white;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a pre{padding: 0;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-toggleable {background-color: white;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-estimator:hover {background-color: #d4ebff;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-item {z-index: 1;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-parallel-item:only-child::after {width: 0;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a div.sk-text-repr-fallback {display: none;}</style><div id="sk-7cdd2d9d-c06d-4b3d-9691-fb6deaf0218a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36ff0e31-3f40-49d4-976f-6071f16bbc94" type="checkbox" ><label for="36ff0e31-3f40-49d4-976f-6071f16bbc94" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="761a05e1-b329-4c5a-9922-40c6e9726be6" type="checkbox" ><label for="761a05e1-b329-4c5a-9922-40c6e9726be6" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c8080d3-3c4c-4ba1-91d3-1c9f67af6e95" type="checkbox" ><label for="8c8080d3-3c4c-4ba1-91d3-1c9f67af6e95" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="809ea783-1904-441e-8875-38f9054e5ccf" type="checkbox" ><label for="809ea783-1904-441e-8875-38f9054e5ccf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7377d685-06c1-4568-86a0-3bffe9495797" type="checkbox" ><label for="7377d685-06c1-4568-86a0-3bffe9495797" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34a67bf6-a7c4-4da4-be66-951684dd9ed4" type="checkbox" ><label for="34a67bf6-a7c4-4da4-be66-951684dd9ed4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df21b042-d8c0-470f-9314-d33aa4355012" type="checkbox" ><label for="df21b042-d8c0-470f-9314-d33aa4355012" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecf5200a-c66f-46b3-a1f7-e9b80c7572da" type="checkbox" ><label for="ecf5200a-c66f-46b3-a1f7-e9b80c7572da" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6c9a343-5a74-4255-b370-b00ba754a05b" type="checkbox" ><label for="f6c9a343-5a74-4255-b370-b00ba754a05b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 {color: black;background-color: white;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 pre{padding: 0;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-toggleable {background-color: white;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-item {z-index: 1;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-parallel-item:only-child::after {width: 0;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e4440f4e-3aae-4f53-8e04-39706cb74b88 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e4440f4e-3aae-4f53-8e04-39706cb74b88" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37367289-98ae-426c-ae14-650d8f712c85" type="checkbox" ><label for="37367289-98ae-426c-ae14-650d8f712c85" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74ac854c-0ca0-497e-97d1-07e30b5cb799" type="checkbox" ><label for="74ac854c-0ca0-497e-97d1-07e30b5cb799" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1f76306-4aa1-4e80-a769-592f0ba0bf4a" type="checkbox" ><label for="f1f76306-4aa1-4e80-a769-592f0ba0bf4a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9394f5f7-7b95-4ce1-b3b4-71cc9041d349" type="checkbox" ><label for="9394f5f7-7b95-4ce1-b3b4-71cc9041d349" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f7488b4-8b72-4a64-a5dc-ded4619ac6ee" type="checkbox" ><label for="9f7488b4-8b72-4a64-a5dc-ded4619ac6ee" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e71f4b0-95d7-4d59-bff3-90ad3f4ad527" type="checkbox" ><label for="0e71f4b0-95d7-4d59-bff3-90ad3f4ad527" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ae1a170-6edd-433c-91c0-7b2bb90c2ec4" type="checkbox" ><label for="0ae1a170-6edd-433c-91c0-7b2bb90c2ec4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19b39845-4f0b-404c-903c-18cb29a99d40" type="checkbox" ><label for="19b39845-4f0b-404c-903c-18cb29a99d40" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db26f6fe-9afb-4e05-8517-258c9f96cda5" type="checkbox" ><label for="db26f6fe-9afb-4e05-8517-258c9f96cda5" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
