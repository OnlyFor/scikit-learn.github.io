
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee {color: black;background-color: white;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee pre{padding: 0;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-toggleable {background-color: white;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-estimator:hover {background-color: #d4ebff;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-item {z-index: 1;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-parallel-item:only-child::after {width: 0;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9f49d805-a1cf-4996-a950-038b8a6f87ee div.sk-text-repr-fallback {display: none;}</style><div id="sk-9f49d805-a1cf-4996-a950-038b8a6f87ee" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b38201be-a9e7-433b-b0c7-d3ae6dfd8f5c" type="checkbox" ><label for="b38201be-a9e7-433b-b0c7-d3ae6dfd8f5c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72ceb291-1dac-41d7-a883-15289cc124b1" type="checkbox" ><label for="72ceb291-1dac-41d7-a883-15289cc124b1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37598414-698b-49ea-822d-c1c3c1ee4728" type="checkbox" ><label for="37598414-698b-49ea-822d-c1c3c1ee4728" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 {color: black;background-color: white;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 pre{padding: 0;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-toggleable {background-color: white;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-estimator:hover {background-color: #d4ebff;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-item {z-index: 1;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-parallel-item:only-child::after {width: 0;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528 div.sk-text-repr-fallback {display: none;}</style><div id="sk-92f96fa7-c2ea-4af1-92c8-41f6f61ce528" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c047597f-5d6e-4ef5-acc1-989ec0251592" type="checkbox" ><label for="c047597f-5d6e-4ef5-acc1-989ec0251592" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b7c007a-4fbd-490b-917f-7043de3c3b93" type="checkbox" ><label for="4b7c007a-4fbd-490b-917f-7043de3c3b93" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87938932-acd0-4ca1-92b1-d6b4229ac4da" type="checkbox" ><label for="87938932-acd0-4ca1-92b1-d6b4229ac4da" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bd5b01f-fef2-4135-9c17-201f0b8cf5e3" type="checkbox" ><label for="2bd5b01f-fef2-4135-9c17-201f0b8cf5e3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 {color: black;background-color: white;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 pre{padding: 0;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-toggleable {background-color: white;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-item {z-index: 1;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-parallel-item:only-child::after {width: 0;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-42a672a4-cf7f-4a0f-a666-8f7900747bc6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5725bf21-ac08-4771-8e2b-38421a5e3afb" type="checkbox" ><label for="5725bf21-ac08-4771-8e2b-38421a5e3afb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ce419fd-b129-403d-ac77-ea173cddaec7" type="checkbox" ><label for="3ce419fd-b129-403d-ac77-ea173cddaec7" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c488d67-539b-4427-a8a0-41346e69179f" type="checkbox" ><label for="6c488d67-539b-4427-a8a0-41346e69179f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e {color: black;background-color: white;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e pre{padding: 0;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-toggleable {background-color: white;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-estimator:hover {background-color: #d4ebff;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-item {z-index: 1;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-parallel-item:only-child::after {width: 0;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7299b532-dbd9-4dac-aef6-0b118fbc287e div.sk-text-repr-fallback {display: none;}</style><div id="sk-7299b532-dbd9-4dac-aef6-0b118fbc287e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a971ddbd-335c-43ef-b9cf-e2c692d847db" type="checkbox" ><label for="a971ddbd-335c-43ef-b9cf-e2c692d847db" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac263fa5-8dfe-476d-b5cf-7f580fde94d9" type="checkbox" ><label for="ac263fa5-8dfe-476d-b5cf-7f580fde94d9" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e02be409-6f3f-4fa9-a85c-883720480bcd" type="checkbox" ><label for="e02be409-6f3f-4fa9-a85c-883720480bcd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fc56af1-0d13-4424-8ec7-3f0636b44755" type="checkbox" ><label for="5fc56af1-0d13-4424-8ec7-3f0636b44755" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcd717c0-7fba-4182-a4c1-30b2979bf9a3" type="checkbox" ><label for="dcd717c0-7fba-4182-a4c1-30b2979bf9a3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fec18f7-702e-4e98-bc2c-c0e61ae28296" type="checkbox" ><label for="0fec18f7-702e-4e98-bc2c-c0e61ae28296" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66c07843-2ca7-4a9f-8ceb-eddc052d0628" type="checkbox" ><label for="66c07843-2ca7-4a9f-8ceb-eddc052d0628" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b59463bb-cb2b-4d26-b15a-e5e137f462a3" type="checkbox" ><label for="b59463bb-cb2b-4d26-b15a-e5e137f462a3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ce68a18-8935-4a0d-b587-995f8782d12a" type="checkbox" ><label for="9ce68a18-8935-4a0d-b587-995f8782d12a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b {color: black;background-color: white;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b pre{padding: 0;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-toggleable {background-color: white;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-estimator:hover {background-color: #d4ebff;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-item {z-index: 1;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-parallel-item:only-child::after {width: 0;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d9cca250-41f4-4e4d-992b-79cb19e4960b div.sk-text-repr-fallback {display: none;}</style><div id="sk-d9cca250-41f4-4e4d-992b-79cb19e4960b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0c443df-7a30-49f5-8dce-310c658b1395" type="checkbox" ><label for="f0c443df-7a30-49f5-8dce-310c658b1395" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bd669c1-2be3-400a-b011-5082c340abed" type="checkbox" ><label for="3bd669c1-2be3-400a-b011-5082c340abed" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38639904-8fef-45ce-abe9-6be466471eda" type="checkbox" ><label for="38639904-8fef-45ce-abe9-6be466471eda" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b3ff258-7dc0-45d9-b281-68413daf1c2f" type="checkbox" ><label for="7b3ff258-7dc0-45d9-b281-68413daf1c2f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57a49a7c-0122-4315-9809-555b1b335f16" type="checkbox" ><label for="57a49a7c-0122-4315-9809-555b1b335f16" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca220ae2-e236-4a8b-9807-7cfc080496ea" type="checkbox" ><label for="ca220ae2-e236-4a8b-9807-7cfc080496ea" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c7f77f9-3ae1-49f9-9c03-5133069c3cf4" type="checkbox" ><label for="8c7f77f9-3ae1-49f9-9c03-5133069c3cf4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="890386bc-195d-4690-8cdc-7c3c8f09485c" type="checkbox" ><label for="890386bc-195d-4690-8cdc-7c3c8f09485c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32a4fd2f-b829-4064-88a8-aae0f798582d" type="checkbox" ><label for="32a4fd2f-b829-4064-88a8-aae0f798582d" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.080 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
