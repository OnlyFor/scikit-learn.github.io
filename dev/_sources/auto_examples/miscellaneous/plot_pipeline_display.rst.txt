
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c {color: black;background-color: white;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c pre{padding: 0;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-toggleable {background-color: white;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-estimator:hover {background-color: #d4ebff;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-item {z-index: 1;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-parallel-item:only-child::after {width: 0;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c div.sk-text-repr-fallback {display: none;}</style><div id="sk-e3cd38b3-e9e9-4bda-b439-dd0b1eadd76c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdddd645-1610-40ce-b38f-1659541fc0ee" type="checkbox" ><label for="cdddd645-1610-40ce-b38f-1659541fc0ee" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04c652ca-5d9b-43ee-a279-7e363acc5e18" type="checkbox" ><label for="04c652ca-5d9b-43ee-a279-7e363acc5e18" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94b790b1-fd81-44d2-af8c-7530fe99dbbf" type="checkbox" ><label for="94b790b1-fd81-44d2-af8c-7530fe99dbbf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 {color: black;background-color: white;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 pre{padding: 0;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-toggleable {background-color: white;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-item {z-index: 1;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-parallel-item:only-child::after {width: 0;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eed1fcd3-6464-4786-bcd7-a325cc42b1b4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d83c80f1-ff88-4a8f-9267-5283af9efe04" type="checkbox" ><label for="d83c80f1-ff88-4a8f-9267-5283af9efe04" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e8a5187-7029-4537-a4a4-173e27b03aea" type="checkbox" ><label for="7e8a5187-7029-4537-a4a4-173e27b03aea" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7a79ffa-c54a-44ea-8a9b-424e2eee6801" type="checkbox" ><label for="c7a79ffa-c54a-44ea-8a9b-424e2eee6801" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8c15c49-055c-4392-a071-ae2086988cda" type="checkbox" ><label for="b8c15c49-055c-4392-a071-ae2086988cda" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-438488c0-89d5-42fe-8ce7-e243fede822d {color: black;background-color: white;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d pre{padding: 0;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-toggleable {background-color: white;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-estimator:hover {background-color: #d4ebff;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-item {z-index: 1;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-parallel-item:only-child::after {width: 0;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-438488c0-89d5-42fe-8ce7-e243fede822d div.sk-text-repr-fallback {display: none;}</style><div id="sk-438488c0-89d5-42fe-8ce7-e243fede822d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b073375-5c87-4d99-a9a2-acbeab737c65" type="checkbox" ><label for="2b073375-5c87-4d99-a9a2-acbeab737c65" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="272e197f-5a57-449e-b865-02d9a57e6399" type="checkbox" ><label for="272e197f-5a57-449e-b865-02d9a57e6399" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73b7fa06-5601-425b-9cb0-f1f8f06ff881" type="checkbox" ><label for="73b7fa06-5601-425b-9cb0-f1f8f06ff881" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 {color: black;background-color: white;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 pre{padding: 0;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-toggleable {background-color: white;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-item {z-index: 1;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-parallel-item:only-child::after {width: 0;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-205530cd-a577-4c59-8cab-78b387cfd8b6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-205530cd-a577-4c59-8cab-78b387cfd8b6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="430cdcb3-734f-4a0d-8649-8827c019f20f" type="checkbox" ><label for="430cdcb3-734f-4a0d-8649-8827c019f20f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e51ea7d-9875-4223-8173-9ef1e4a1caac" type="checkbox" ><label for="8e51ea7d-9875-4223-8173-9ef1e4a1caac" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c16aa869-7162-47c8-9f87-6306f5c7150e" type="checkbox" ><label for="c16aa869-7162-47c8-9f87-6306f5c7150e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbfedca4-1558-41bb-a2dd-d16aed2c8de5" type="checkbox" ><label for="fbfedca4-1558-41bb-a2dd-d16aed2c8de5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e15a3998-9319-4da3-a6ab-d0920705614d" type="checkbox" ><label for="e15a3998-9319-4da3-a6ab-d0920705614d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16ae7d9a-d86a-463a-9739-31c8177a8739" type="checkbox" ><label for="16ae7d9a-d86a-463a-9739-31c8177a8739" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0a96553-c313-4720-8895-77910c6dfe27" type="checkbox" ><label for="f0a96553-c313-4720-8895-77910c6dfe27" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08044015-634f-41f6-aba5-a76a71bd5717" type="checkbox" ><label for="08044015-634f-41f6-aba5-a76a71bd5717" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbe3e90e-d407-4ad7-99d4-11b860fd0df2" type="checkbox" ><label for="bbe3e90e-d407-4ad7-99d4-11b860fd0df2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 {color: black;background-color: white;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 pre{padding: 0;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-toggleable {background-color: white;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-item {z-index: 1;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-parallel-item:only-child::after {width: 0;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fa7e4daa-dbbd-4318-b55c-9659a76126a4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bf0949b-df64-4220-b8d9-59f60e8cf735" type="checkbox" ><label for="4bf0949b-df64-4220-b8d9-59f60e8cf735" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b82b1f59-de83-4bd8-bc0b-fcf2c448be3d" type="checkbox" ><label for="b82b1f59-de83-4bd8-bc0b-fcf2c448be3d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d35c706f-4698-4414-8a24-69d0654931ff" type="checkbox" ><label for="d35c706f-4698-4414-8a24-69d0654931ff" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19e849b0-447e-4ef4-af8d-ac754838df0b" type="checkbox" ><label for="19e849b0-447e-4ef4-af8d-ac754838df0b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1bbb24cb-142c-4ecd-b4ab-2102c9cf2e61" type="checkbox" ><label for="1bbb24cb-142c-4ecd-b4ab-2102c9cf2e61" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9b6bf39-64b5-4629-907a-376ae7d8cbed" type="checkbox" ><label for="a9b6bf39-64b5-4629-907a-376ae7d8cbed" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e03f0c3-4d4a-48a8-9a57-7c75f6b97286" type="checkbox" ><label for="0e03f0c3-4d4a-48a8-9a57-7c75f6b97286" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e2d1ffa-d2be-4a9f-885c-12afe52e6c82" type="checkbox" ><label for="7e2d1ffa-d2be-4a9f-885c-12afe52e6c82" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29ab544f-405a-4b79-a1f9-88dc3bf20f7b" type="checkbox" ><label for="29ab544f-405a-4b79-a1f9-88dc3bf20f7b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.080 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
