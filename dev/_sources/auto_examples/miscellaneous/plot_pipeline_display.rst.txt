
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-16c01be0-9649-4476-877f-7213dceb6f34 {color: black;background-color: white;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 pre{padding: 0;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-toggleable {background-color: white;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-estimator:hover {background-color: #d4ebff;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-item {z-index: 1;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-parallel-item:only-child::after {width: 0;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-16c01be0-9649-4476-877f-7213dceb6f34 div.sk-text-repr-fallback {display: none;}</style><div id="sk-16c01be0-9649-4476-877f-7213dceb6f34" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1dee6aca-b21c-4669-a09e-142b1914ae92" type="checkbox" ><label for="1dee6aca-b21c-4669-a09e-142b1914ae92" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d603f039-eca4-4aec-a0c2-292b583ba12c" type="checkbox" ><label for="d603f039-eca4-4aec-a0c2-292b583ba12c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2e24417-1d60-42e5-977e-267e767ee06f" type="checkbox" ><label for="e2e24417-1d60-42e5-977e-267e767ee06f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d {color: black;background-color: white;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d pre{padding: 0;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-toggleable {background-color: white;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-estimator:hover {background-color: #d4ebff;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-item {z-index: 1;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-parallel-item:only-child::after {width: 0;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1ae306c5-15bf-4d89-b043-e8e28f18403d div.sk-text-repr-fallback {display: none;}</style><div id="sk-1ae306c5-15bf-4d89-b043-e8e28f18403d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f78abefa-e47d-45a2-bf8b-7d3da54b6970" type="checkbox" ><label for="f78abefa-e47d-45a2-bf8b-7d3da54b6970" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69d94faf-c680-4dbb-9348-7fd3052e5472" type="checkbox" ><label for="69d94faf-c680-4dbb-9348-7fd3052e5472" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c8a4437-2ab5-4fd5-8616-2e571041147e" type="checkbox" ><label for="1c8a4437-2ab5-4fd5-8616-2e571041147e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0d22177-901c-40e5-9fe2-6e411e88c22a" type="checkbox" ><label for="c0d22177-901c-40e5-9fe2-6e411e88c22a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 {color: black;background-color: white;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 pre{padding: 0;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-toggleable {background-color: white;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-item {z-index: 1;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-parallel-item:only-child::after {width: 0;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-81440785-b57b-443c-9c98-f77d2bd95fe0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-81440785-b57b-443c-9c98-f77d2bd95fe0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d65d17cf-bcd9-4d5f-a26e-5afcd137d4d1" type="checkbox" ><label for="d65d17cf-bcd9-4d5f-a26e-5afcd137d4d1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67a98f49-4f14-431a-a3c8-9c78c98f2415" type="checkbox" ><label for="67a98f49-4f14-431a-a3c8-9c78c98f2415" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38fbce32-5957-4465-8fa9-f763ce629907" type="checkbox" ><label for="38fbce32-5957-4465-8fa9-f763ce629907" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 {color: black;background-color: white;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 pre{padding: 0;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-toggleable {background-color: white;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-item {z-index: 1;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-parallel-item:only-child::after {width: 0;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2668fd5f-4eae-4458-8b0b-a3c38679bad0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38e685de-2a70-40ff-8a9c-b3c248b0f6f7" type="checkbox" ><label for="38e685de-2a70-40ff-8a9c-b3c248b0f6f7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2f4fc4e-7f29-44b0-af47-97148217863b" type="checkbox" ><label for="e2f4fc4e-7f29-44b0-af47-97148217863b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a51ed1aa-d728-49dc-84bb-5fc6beda3668" type="checkbox" ><label for="a51ed1aa-d728-49dc-84bb-5fc6beda3668" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0a1c4a8-2c72-4f1d-8a50-dabfeec98f53" type="checkbox" ><label for="b0a1c4a8-2c72-4f1d-8a50-dabfeec98f53" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a90f611a-833b-4323-a35c-088513f76fc6" type="checkbox" ><label for="a90f611a-833b-4323-a35c-088513f76fc6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecb25b6d-b862-4ed7-9d16-eeb414575b47" type="checkbox" ><label for="ecb25b6d-b862-4ed7-9d16-eeb414575b47" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af28b050-45b7-4815-8f0a-ead37542395b" type="checkbox" ><label for="af28b050-45b7-4815-8f0a-ead37542395b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0c324ee-79e9-44ad-8859-0824a63db26d" type="checkbox" ><label for="f0c324ee-79e9-44ad-8859-0824a63db26d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17754949-5c6a-4481-86a4-5988d9182354" type="checkbox" ><label for="17754949-5c6a-4481-86a4-5988d9182354" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1d74e394-d768-4140-a55e-467f5993339d {color: black;background-color: white;}#sk-1d74e394-d768-4140-a55e-467f5993339d pre{padding: 0;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-toggleable {background-color: white;}#sk-1d74e394-d768-4140-a55e-467f5993339d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1d74e394-d768-4140-a55e-467f5993339d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1d74e394-d768-4140-a55e-467f5993339d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1d74e394-d768-4140-a55e-467f5993339d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1d74e394-d768-4140-a55e-467f5993339d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1d74e394-d768-4140-a55e-467f5993339d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-estimator:hover {background-color: #d4ebff;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-item {z-index: 1;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-parallel-item:only-child::after {width: 0;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1d74e394-d768-4140-a55e-467f5993339d div.sk-text-repr-fallback {display: none;}</style><div id="sk-1d74e394-d768-4140-a55e-467f5993339d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32f444e3-bfeb-49ae-bf09-599a702799d5" type="checkbox" ><label for="32f444e3-bfeb-49ae-bf09-599a702799d5" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90ad1cf7-b325-4bbd-a190-72e562778b4d" type="checkbox" ><label for="90ad1cf7-b325-4bbd-a190-72e562778b4d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85c7fd80-c813-416c-999d-b9c75811bb6e" type="checkbox" ><label for="85c7fd80-c813-416c-999d-b9c75811bb6e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6bca807-831d-4ecd-b7f9-59998bad2cdb" type="checkbox" ><label for="f6bca807-831d-4ecd-b7f9-59998bad2cdb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02782f16-cdb5-4ebc-8e63-a46b352a7b9b" type="checkbox" ><label for="02782f16-cdb5-4ebc-8e63-a46b352a7b9b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a985867-d352-4832-bdfa-d353062d3c01" type="checkbox" ><label for="9a985867-d352-4832-bdfa-d353062d3c01" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0758bcc1-8577-4c01-829f-e31914fe893e" type="checkbox" ><label for="0758bcc1-8577-4c01-829f-e31914fe893e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="636812e4-36c3-48d7-a054-ab912d92496e" type="checkbox" ><label for="636812e4-36c3-48d7-a054-ab912d92496e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a03d98b2-672c-4366-bbd1-89afb135e3f0" type="checkbox" ><label for="a03d98b2-672c-4366-bbd1-89afb135e3f0" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
