
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 {color: black;background-color: white;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 pre{padding: 0;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-toggleable {background-color: white;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-item {z-index: 1;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-parallel-item:only-child::after {width: 0;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cd3dfc7e-8ec8-43b0-ab2e-df8a39f25098" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d2c922a-9175-46d3-94ec-ad02d0a1990f" type="checkbox" ><label for="2d2c922a-9175-46d3-94ec-ad02d0a1990f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0034b605-9ba3-4c16-b6b6-47eb3cbcdac5" type="checkbox" ><label for="0034b605-9ba3-4c16-b6b6-47eb3cbcdac5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b75f39ab-fc81-4745-ba55-19aeffceda59" type="checkbox" ><label for="b75f39ab-fc81-4745-ba55-19aeffceda59" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-34bd6679-d470-4cff-8b17-269014f1ae1a {color: black;background-color: white;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a pre{padding: 0;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-toggleable {background-color: white;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-estimator:hover {background-color: #d4ebff;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-item {z-index: 1;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-parallel-item:only-child::after {width: 0;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-34bd6679-d470-4cff-8b17-269014f1ae1a div.sk-text-repr-fallback {display: none;}</style><div id="sk-34bd6679-d470-4cff-8b17-269014f1ae1a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1438f7c2-9d60-4bff-b8c5-fb0e856a14a5" type="checkbox" ><label for="1438f7c2-9d60-4bff-b8c5-fb0e856a14a5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5838681-1948-45f5-9349-d4f07e3b2d74" type="checkbox" ><label for="e5838681-1948-45f5-9349-d4f07e3b2d74" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="247a2a33-417c-403b-8b0f-2ff38f76c52a" type="checkbox" ><label for="247a2a33-417c-403b-8b0f-2ff38f76c52a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c03acf2-a0fd-4931-97aa-2e2cb7263715" type="checkbox" ><label for="4c03acf2-a0fd-4931-97aa-2e2cb7263715" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ba194389-bb19-47eb-9e65-8216a275eedd {color: black;background-color: white;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd pre{padding: 0;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-toggleable {background-color: white;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-estimator:hover {background-color: #d4ebff;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-item {z-index: 1;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-parallel-item:only-child::after {width: 0;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ba194389-bb19-47eb-9e65-8216a275eedd div.sk-text-repr-fallback {display: none;}</style><div id="sk-ba194389-bb19-47eb-9e65-8216a275eedd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7c1fcb2-30da-4931-a72f-ffef52b83a8c" type="checkbox" ><label for="e7c1fcb2-30da-4931-a72f-ffef52b83a8c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcc77e57-2451-465c-9718-0ea922a411f7" type="checkbox" ><label for="fcc77e57-2451-465c-9718-0ea922a411f7" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efee5ae9-9bbf-466a-827c-0d7cff791876" type="checkbox" ><label for="efee5ae9-9bbf-466a-827c-0d7cff791876" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 {color: black;background-color: white;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 pre{padding: 0;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-toggleable {background-color: white;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-item {z-index: 1;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-parallel-item:only-child::after {width: 0;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6f25beef-5957-47cf-bf7e-4568edf68d26 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6f25beef-5957-47cf-bf7e-4568edf68d26" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a95af13f-feb2-4994-8e8b-cbb62576742d" type="checkbox" ><label for="a95af13f-feb2-4994-8e8b-cbb62576742d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5d8e7f7-40b1-4d68-aae2-80f2e548ee5c" type="checkbox" ><label for="d5d8e7f7-40b1-4d68-aae2-80f2e548ee5c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="099dd969-64b6-44bd-889b-12112867f5b8" type="checkbox" ><label for="099dd969-64b6-44bd-889b-12112867f5b8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fc2e53e-bbbf-4c18-9817-e149e73e56da" type="checkbox" ><label for="0fc2e53e-bbbf-4c18-9817-e149e73e56da" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42ff1308-c1c2-4881-82e1-a70f5cef8e0b" type="checkbox" ><label for="42ff1308-c1c2-4881-82e1-a70f5cef8e0b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e216a949-3e58-49de-b7d6-070b6271062f" type="checkbox" ><label for="e216a949-3e58-49de-b7d6-070b6271062f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b7630f6-7e9b-4014-9c16-b2743446e5ff" type="checkbox" ><label for="1b7630f6-7e9b-4014-9c16-b2743446e5ff" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5e5a08e-6d21-4bf3-ad55-884a03b550cc" type="checkbox" ><label for="e5e5a08e-6d21-4bf3-ad55-884a03b550cc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b259ca6-72c7-4080-a911-6120cdd1420c" type="checkbox" ><label for="4b259ca6-72c7-4080-a911-6120cdd1420c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff {color: black;background-color: white;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff pre{padding: 0;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-toggleable {background-color: white;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-item {z-index: 1;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-parallel-item:only-child::after {width: 0;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0f66a54b-fb32-46e0-a15f-d958964f21ff div.sk-text-repr-fallback {display: none;}</style><div id="sk-0f66a54b-fb32-46e0-a15f-d958964f21ff" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57d529e9-dde6-4417-9abb-9f000962cf1e" type="checkbox" ><label for="57d529e9-dde6-4417-9abb-9f000962cf1e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e83d6912-7f4d-46dc-9302-68118bb83684" type="checkbox" ><label for="e83d6912-7f4d-46dc-9302-68118bb83684" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18e0f05a-1386-47c3-8826-b186f233f599" type="checkbox" ><label for="18e0f05a-1386-47c3-8826-b186f233f599" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="299fbca3-8c17-4ccd-9776-35e74640a83c" type="checkbox" ><label for="299fbca3-8c17-4ccd-9776-35e74640a83c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37486b8a-0c59-43f2-abae-ca2a88b341c3" type="checkbox" ><label for="37486b8a-0c59-43f2-abae-ca2a88b341c3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42494fd2-9615-4e56-96c4-49294256c665" type="checkbox" ><label for="42494fd2-9615-4e56-96c4-49294256c665" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef188234-2f05-4b11-8579-ffc23146afa9" type="checkbox" ><label for="ef188234-2f05-4b11-8579-ffc23146afa9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="773c5a77-98da-4d8e-9e34-0b021caa959b" type="checkbox" ><label for="773c5a77-98da-4d8e-9e34-0b021caa959b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3973d211-6448-4da0-ab7b-7c0b51fa51a0" type="checkbox" ><label for="3973d211-6448-4da0-ab7b-7c0b51fa51a0" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
