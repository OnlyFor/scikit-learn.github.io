
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 {color: black;background-color: white;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 pre{padding: 0;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-toggleable {background-color: white;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-item {z-index: 1;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-parallel-item:only-child::after {width: 0;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7bb951e0-69c4-4ca1-af97-55f593357ca0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7bb951e0-69c4-4ca1-af97-55f593357ca0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8db1df4c-2a3f-41e8-91e0-51ae280eff34" type="checkbox" ><label for="8db1df4c-2a3f-41e8-91e0-51ae280eff34" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="740d18d6-762b-43df-8030-63e506f0d96e" type="checkbox" ><label for="740d18d6-762b-43df-8030-63e506f0d96e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57b0cae2-d4a9-4a6a-929b-9e41440bbd1b" type="checkbox" ><label for="57b0cae2-d4a9-4a6a-929b-9e41440bbd1b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb {color: black;background-color: white;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb pre{padding: 0;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-toggleable {background-color: white;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-estimator:hover {background-color: #d4ebff;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-item {z-index: 1;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-parallel-item:only-child::after {width: 0;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb div.sk-text-repr-fallback {display: none;}</style><div id="sk-a2e7144a-f74e-49f3-9a05-d6db40c397fb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62f9efdc-a615-42b0-b4e0-d26afba1267c" type="checkbox" ><label for="62f9efdc-a615-42b0-b4e0-d26afba1267c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="360bf7ae-16f4-4d98-b3af-36e9895e73b6" type="checkbox" ><label for="360bf7ae-16f4-4d98-b3af-36e9895e73b6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5939d332-d3d5-44c9-9153-0809113ded0f" type="checkbox" ><label for="5939d332-d3d5-44c9-9153-0809113ded0f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c407c9a9-cb85-4137-a4c3-4a4d112d7a22" type="checkbox" ><label for="c407c9a9-cb85-4137-a4c3-4a4d112d7a22" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 {color: black;background-color: white;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 pre{padding: 0;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-toggleable {background-color: white;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-item {z-index: 1;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-parallel-item:only-child::after {width: 0;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1f6e6e82-8084-4e06-aa45-1087ab2d47a4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bff3dfec-8885-47c2-8380-dda29777bddd" type="checkbox" ><label for="bff3dfec-8885-47c2-8380-dda29777bddd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1428a517-3975-4391-b014-6e705fb8eeaf" type="checkbox" ><label for="1428a517-3975-4391-b014-6e705fb8eeaf" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="717b7188-3f9f-4346-abc8-e35b085f3c77" type="checkbox" ><label for="717b7188-3f9f-4346-abc8-e35b085f3c77" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b {color: black;background-color: white;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b pre{padding: 0;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-toggleable {background-color: white;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-estimator:hover {background-color: #d4ebff;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-item {z-index: 1;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-parallel-item:only-child::after {width: 0;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b div.sk-text-repr-fallback {display: none;}</style><div id="sk-d08af237-d750-4d87-9ddf-e7cd38ccc13b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a530749f-ecd2-4656-8dd5-6607b14ee7a5" type="checkbox" ><label for="a530749f-ecd2-4656-8dd5-6607b14ee7a5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8620cf71-85f9-4137-b624-9f3d37b470e1" type="checkbox" ><label for="8620cf71-85f9-4137-b624-9f3d37b470e1" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="622e4356-b50c-48f9-8741-052e36f4a889" type="checkbox" ><label for="622e4356-b50c-48f9-8741-052e36f4a889" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0293a22-0f8a-470a-b083-06ef522e11c8" type="checkbox" ><label for="c0293a22-0f8a-470a-b083-06ef522e11c8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="737b706d-41e9-4f51-9a42-2f79c37dd935" type="checkbox" ><label for="737b706d-41e9-4f51-9a42-2f79c37dd935" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c927e79c-b9ba-404a-a7ca-5072220e8feb" type="checkbox" ><label for="c927e79c-b9ba-404a-a7ca-5072220e8feb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a28e629-b861-4e04-802c-c5f6120d84ae" type="checkbox" ><label for="0a28e629-b861-4e04-802c-c5f6120d84ae" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8256569-2dbd-4626-9610-0b338243ee1a" type="checkbox" ><label for="b8256569-2dbd-4626-9610-0b338243ee1a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af642800-b23a-410d-a35a-4d1a8052dbc7" type="checkbox" ><label for="af642800-b23a-410d-a35a-4d1a8052dbc7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6fe33439-f5ef-4782-95be-919d77cbd23a {color: black;background-color: white;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a pre{padding: 0;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-toggleable {background-color: white;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-estimator:hover {background-color: #d4ebff;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-item {z-index: 1;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-parallel-item:only-child::after {width: 0;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6fe33439-f5ef-4782-95be-919d77cbd23a div.sk-text-repr-fallback {display: none;}</style><div id="sk-6fe33439-f5ef-4782-95be-919d77cbd23a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6efe8125-8f86-4b53-a950-6f07f9b39a7e" type="checkbox" ><label for="6efe8125-8f86-4b53-a950-6f07f9b39a7e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7eec8dd8-d044-48ef-95f7-dacfb97cf5c1" type="checkbox" ><label for="7eec8dd8-d044-48ef-95f7-dacfb97cf5c1" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="526ce50a-0cdf-4494-b225-76902c83b51f" type="checkbox" ><label for="526ce50a-0cdf-4494-b225-76902c83b51f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2a3b404-c465-4c08-a794-c99dc7fec63d" type="checkbox" ><label for="b2a3b404-c465-4c08-a794-c99dc7fec63d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1817cc50-1c4a-41f0-9050-0c2ffc1a8106" type="checkbox" ><label for="1817cc50-1c4a-41f0-9050-0c2ffc1a8106" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b045426e-895a-4beb-9d86-a5ec86a1d8a3" type="checkbox" ><label for="b045426e-895a-4beb-9d86-a5ec86a1d8a3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5524d28-d690-4510-ad9f-0679f194c6ce" type="checkbox" ><label for="c5524d28-d690-4510-ad9f-0679f194c6ce" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa23f7e5-e4bf-4b25-bda6-f58139002a21" type="checkbox" ><label for="fa23f7e5-e4bf-4b25-bda6-f58139002a21" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1f5fff5-b844-4e6b-a02d-1932420db26f" type="checkbox" ><label for="b1f5fff5-b844-4e6b-a02d-1932420db26f" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
