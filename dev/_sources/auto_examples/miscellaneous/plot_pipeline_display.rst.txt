
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-832a2a53-8429-4a12-9e40-420078c693d6 {color: black;background-color: white;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 pre{padding: 0;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-toggleable {background-color: white;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-item {z-index: 1;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-parallel-item:only-child::after {width: 0;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-832a2a53-8429-4a12-9e40-420078c693d6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-832a2a53-8429-4a12-9e40-420078c693d6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb53a5d1-cdca-4e43-8e31-71e53b78f426" type="checkbox" ><label for="eb53a5d1-cdca-4e43-8e31-71e53b78f426" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3656695c-b4e6-4f36-91be-eab838049b3f" type="checkbox" ><label for="3656695c-b4e6-4f36-91be-eab838049b3f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc1396d6-3ef9-4e5a-9a45-264ffe4af4ca" type="checkbox" ><label for="bc1396d6-3ef9-4e5a-9a45-264ffe4af4ca" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b {color: black;background-color: white;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b pre{padding: 0;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-toggleable {background-color: white;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-estimator:hover {background-color: #d4ebff;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-item {z-index: 1;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-parallel-item:only-child::after {width: 0;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b div.sk-text-repr-fallback {display: none;}</style><div id="sk-2822a8cf-2c90-4ff7-9db0-e58420493e8b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bb0336a-33eb-4afb-80e4-afcf8f5cd470" type="checkbox" ><label for="6bb0336a-33eb-4afb-80e4-afcf8f5cd470" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a5c2e52-76cb-4e47-8223-47c92ece0095" type="checkbox" ><label for="5a5c2e52-76cb-4e47-8223-47c92ece0095" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="642a92ed-0aed-4b4a-b32c-9c2d184315de" type="checkbox" ><label for="642a92ed-0aed-4b4a-b32c-9c2d184315de" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50dd7b4b-3bf0-4233-9288-490818a49240" type="checkbox" ><label for="50dd7b4b-3bf0-4233-9288-490818a49240" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 {color: black;background-color: white;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 pre{padding: 0;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-toggleable {background-color: white;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-item {z-index: 1;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-parallel-item:only-child::after {width: 0;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3e2b8b96-68f2-4534-bf99-5b3dcd7d0728" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7dcaf43-8eee-4b2e-9d94-6794cc2e48ae" type="checkbox" ><label for="d7dcaf43-8eee-4b2e-9d94-6794cc2e48ae" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7503e28d-2b4d-4afd-9b25-940350dc9c48" type="checkbox" ><label for="7503e28d-2b4d-4afd-9b25-940350dc9c48" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="323d7cce-af7d-4fed-b603-025148da0128" type="checkbox" ><label for="323d7cce-af7d-4fed-b603-025148da0128" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc {color: black;background-color: white;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc pre{padding: 0;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-toggleable {background-color: white;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-estimator:hover {background-color: #d4ebff;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-item {z-index: 1;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-parallel-item:only-child::after {width: 0;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc div.sk-text-repr-fallback {display: none;}</style><div id="sk-335a6faa-22ae-4d33-b848-8a5a4bc918cc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a8497c1-ff5a-402f-8266-2786ab652bf5" type="checkbox" ><label for="0a8497c1-ff5a-402f-8266-2786ab652bf5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f54ca03-71cc-48e9-9593-6281d15c3181" type="checkbox" ><label for="9f54ca03-71cc-48e9-9593-6281d15c3181" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60c00abd-7b46-4cc6-8487-015d4450bb83" type="checkbox" ><label for="60c00abd-7b46-4cc6-8487-015d4450bb83" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a39c518f-c923-4576-8f5c-0ab93d232cc4" type="checkbox" ><label for="a39c518f-c923-4576-8f5c-0ab93d232cc4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4700334a-34ae-4597-8f49-cb299756a2e8" type="checkbox" ><label for="4700334a-34ae-4597-8f49-cb299756a2e8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5df9d9f7-ecd9-4149-b5b7-d6e9d37d69e3" type="checkbox" ><label for="5df9d9f7-ecd9-4149-b5b7-d6e9d37d69e3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c13ec26b-1f6f-4ef7-b41c-d68e64079590" type="checkbox" ><label for="c13ec26b-1f6f-4ef7-b41c-d68e64079590" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7bfbd5d-2dd5-451a-948e-0d67b72a57b2" type="checkbox" ><label for="e7bfbd5d-2dd5-451a-948e-0d67b72a57b2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bf20068-7c1d-4529-9e2f-1189af2f0ed2" type="checkbox" ><label for="8bf20068-7c1d-4529-9e2f-1189af2f0ed2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-74b204ec-0131-47d1-91fe-b265f9829f7b {color: black;background-color: white;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b pre{padding: 0;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-toggleable {background-color: white;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-estimator:hover {background-color: #d4ebff;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-item {z-index: 1;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-parallel-item:only-child::after {width: 0;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-74b204ec-0131-47d1-91fe-b265f9829f7b div.sk-text-repr-fallback {display: none;}</style><div id="sk-74b204ec-0131-47d1-91fe-b265f9829f7b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25d7267d-bcc9-4b75-a7f1-f8c20e9fcb39" type="checkbox" ><label for="25d7267d-bcc9-4b75-a7f1-f8c20e9fcb39" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5554fcd2-87c6-468c-8712-ef9834560c21" type="checkbox" ><label for="5554fcd2-87c6-468c-8712-ef9834560c21" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1fdfc3e-993a-444b-8ce1-4b7f42559faa" type="checkbox" ><label for="c1fdfc3e-993a-444b-8ce1-4b7f42559faa" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55f14e19-f318-482f-b3c7-ef99737c12f2" type="checkbox" ><label for="55f14e19-f318-482f-b3c7-ef99737c12f2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b133703d-979b-475d-a662-34d270cb51c4" type="checkbox" ><label for="b133703d-979b-475d-a662-34d270cb51c4" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0036571-93ef-41f6-9c4c-03e5ffca1ea3" type="checkbox" ><label for="a0036571-93ef-41f6-9c4c-03e5ffca1ea3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9df3f05d-da8d-4a17-84a3-c4ff33193e2f" type="checkbox" ><label for="9df3f05d-da8d-4a17-84a3-c4ff33193e2f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd5f15dd-ba8e-4f45-b462-7adbe1788805" type="checkbox" ><label for="fd5f15dd-ba8e-4f45-b462-7adbe1788805" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a1c7dc8-f6e0-40ca-8f0f-10e237cc8c38" type="checkbox" ><label for="6a1c7dc8-f6e0-40ca-8f0f-10e237cc8c38" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
