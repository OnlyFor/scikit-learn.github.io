
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 {color: black;background-color: white;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 pre{padding: 0;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-toggleable {background-color: white;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-item {z-index: 1;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-parallel-item:only-child::after {width: 0;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4f1e7a2c-798b-4165-ab42-35cce9c413e9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cfabad6-98aa-434d-ae28-8a37d3e4abf8" type="checkbox" ><label for="1cfabad6-98aa-434d-ae28-8a37d3e4abf8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="388f900a-1239-44c0-a663-01ffc09cf85a" type="checkbox" ><label for="388f900a-1239-44c0-a663-01ffc09cf85a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0500979f-936e-4ddc-bf4b-b48bd5ed7263" type="checkbox" ><label for="0500979f-936e-4ddc-bf4b-b48bd5ed7263" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 {color: black;background-color: white;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 pre{padding: 0;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-toggleable {background-color: white;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-item {z-index: 1;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-parallel-item:only-child::after {width: 0;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7681f2ce-b1dc-442f-9b29-4ce86dc1dd97" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcd61506-16f9-4661-8b2d-c1f3599552c8" type="checkbox" ><label for="fcd61506-16f9-4661-8b2d-c1f3599552c8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a327255c-8f83-4579-9ae5-17cd1ada743d" type="checkbox" ><label for="a327255c-8f83-4579-9ae5-17cd1ada743d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfb018b1-8fa3-4734-b7d7-99e05f5542c6" type="checkbox" ><label for="bfb018b1-8fa3-4734-b7d7-99e05f5542c6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3ac430e-a04c-47c2-b6e2-731aa09c73c2" type="checkbox" ><label for="b3ac430e-a04c-47c2-b6e2-731aa09c73c2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 {color: black;background-color: white;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 pre{padding: 0;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-toggleable {background-color: white;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-estimator:hover {background-color: #d4ebff;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-item {z-index: 1;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-parallel-item:only-child::after {width: 0;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-23c72fbe-6247-48bf-96db-e02c7157bc78 div.sk-text-repr-fallback {display: none;}</style><div id="sk-23c72fbe-6247-48bf-96db-e02c7157bc78" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a68cde3-d072-467a-81d8-784da9e9f11e" type="checkbox" ><label for="3a68cde3-d072-467a-81d8-784da9e9f11e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f4573c5-ee73-45b7-8eb9-d15a826ffa96" type="checkbox" ><label for="7f4573c5-ee73-45b7-8eb9-d15a826ffa96" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a722b59d-832d-4302-ac6a-811bf7d22407" type="checkbox" ><label for="a722b59d-832d-4302-ac6a-811bf7d22407" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 {color: black;background-color: white;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 pre{padding: 0;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-toggleable {background-color: white;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-item {z-index: 1;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-parallel-item:only-child::after {width: 0;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2e2317fd-71bc-4e63-8ee2-1d41e5202095" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="537d68b5-6e64-403f-ae01-891bd7bb90c2" type="checkbox" ><label for="537d68b5-6e64-403f-ae01-891bd7bb90c2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca09116c-efd6-4349-a41b-b3440f78022d" type="checkbox" ><label for="ca09116c-efd6-4349-a41b-b3440f78022d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="364215b5-1504-4715-b6b0-6855e5e7e3c9" type="checkbox" ><label for="364215b5-1504-4715-b6b0-6855e5e7e3c9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cf62cca-d8d8-4248-806f-ccc8e40abee0" type="checkbox" ><label for="0cf62cca-d8d8-4248-806f-ccc8e40abee0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="398ee661-2c94-4873-8d99-3c22d4aa84e2" type="checkbox" ><label for="398ee661-2c94-4873-8d99-3c22d4aa84e2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="820befe0-a806-40c4-a31a-747c35b57cf7" type="checkbox" ><label for="820befe0-a806-40c4-a31a-747c35b57cf7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="975d1154-866c-47b3-aae5-634c8c8ee85a" type="checkbox" ><label for="975d1154-866c-47b3-aae5-634c8c8ee85a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ab23f15-8e97-453e-9412-bd3fdfa45835" type="checkbox" ><label for="6ab23f15-8e97-453e-9412-bd3fdfa45835" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23b63ab8-6f2c-4972-9b3e-135087c5922f" type="checkbox" ><label for="23b63ab8-6f2c-4972-9b3e-135087c5922f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a {color: black;background-color: white;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a pre{padding: 0;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-toggleable {background-color: white;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-estimator:hover {background-color: #d4ebff;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-item {z-index: 1;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-parallel-item:only-child::after {width: 0;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a div.sk-text-repr-fallback {display: none;}</style><div id="sk-9ddcfbb7-2fa8-48ad-96af-b9863284057a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62855862-ef9a-4dd4-949d-901631784fd5" type="checkbox" ><label for="62855862-ef9a-4dd4-949d-901631784fd5" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b703627f-f62e-4a39-af8c-fe687f701ac1" type="checkbox" ><label for="b703627f-f62e-4a39-af8c-fe687f701ac1" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d5db1c4-8b52-44e8-84a3-5d445cf31854" type="checkbox" ><label for="8d5db1c4-8b52-44e8-84a3-5d445cf31854" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43a0eb3e-ff6c-41cf-a093-cdbc742a7864" type="checkbox" ><label for="43a0eb3e-ff6c-41cf-a093-cdbc742a7864" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34a024b2-fd22-47a7-b29a-6ec9a1932af2" type="checkbox" ><label for="34a024b2-fd22-47a7-b29a-6ec9a1932af2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13b62062-a629-4942-9690-a3422412fbd9" type="checkbox" ><label for="13b62062-a629-4942-9690-a3422412fbd9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f33f107d-1e02-4728-90ed-31c45dc452a8" type="checkbox" ><label for="f33f107d-1e02-4728-90ed-31c45dc452a8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c55c0774-1b1b-4e07-ba2e-362e110a5e03" type="checkbox" ><label for="c55c0774-1b1b-4e07-ba2e-362e110a5e03" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7823dafe-86ab-4087-bc9a-6cdea27210de" type="checkbox" ><label for="7823dafe-86ab-4087-bc9a-6cdea27210de" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
