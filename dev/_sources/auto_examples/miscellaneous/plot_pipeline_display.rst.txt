
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-616ae964-2602-4758-b9b6-68f503cb7594 {color: black;background-color: white;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 pre{padding: 0;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-toggleable {background-color: white;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-estimator:hover {background-color: #d4ebff;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-item {z-index: 1;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-parallel-item:only-child::after {width: 0;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-616ae964-2602-4758-b9b6-68f503cb7594 div.sk-text-repr-fallback {display: none;}</style><div id="sk-616ae964-2602-4758-b9b6-68f503cb7594" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a70bbe14-a045-4024-a3e0-c1d8aebd2e3c" type="checkbox" ><label for="a70bbe14-a045-4024-a3e0-c1d8aebd2e3c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6109e1a-ac75-4817-a7b3-37f8f919321c" type="checkbox" ><label for="b6109e1a-ac75-4817-a7b3-37f8f919321c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c113eba1-5f25-4a96-a390-663936d07169" type="checkbox" ><label for="c113eba1-5f25-4a96-a390-663936d07169" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba {color: black;background-color: white;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba pre{padding: 0;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-toggleable {background-color: white;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-estimator:hover {background-color: #d4ebff;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-item {z-index: 1;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-parallel-item:only-child::after {width: 0;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba div.sk-text-repr-fallback {display: none;}</style><div id="sk-a02d7fc8-e6f8-48d3-bd90-a9c1c486deba" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a234581c-1fa2-4b6b-863f-9b9b0c4f70be" type="checkbox" ><label for="a234581c-1fa2-4b6b-863f-9b9b0c4f70be" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bf5d42d-6be5-47ab-8964-06d6a65cd1fd" type="checkbox" ><label for="6bf5d42d-6be5-47ab-8964-06d6a65cd1fd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58d4662b-f568-430a-ac10-ed274b4b5a58" type="checkbox" ><label for="58d4662b-f568-430a-ac10-ed274b4b5a58" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76779fbf-3f62-46df-8d14-2d6acaf5a568" type="checkbox" ><label for="76779fbf-3f62-46df-8d14-2d6acaf5a568" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ebc47352-1a8b-438c-b908-419d8da54d00 {color: black;background-color: white;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 pre{padding: 0;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-toggleable {background-color: white;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-item {z-index: 1;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-parallel-item:only-child::after {width: 0;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ebc47352-1a8b-438c-b908-419d8da54d00 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ebc47352-1a8b-438c-b908-419d8da54d00" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba9583ab-f7a1-4c04-964f-74157721f639" type="checkbox" ><label for="ba9583ab-f7a1-4c04-964f-74157721f639" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a71ec35-c0b0-4d82-9410-684c1b55c8b1" type="checkbox" ><label for="6a71ec35-c0b0-4d82-9410-684c1b55c8b1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e1b35bc-c871-4fbe-a0ef-fbe7ff8a4390" type="checkbox" ><label for="7e1b35bc-c871-4fbe-a0ef-fbe7ff8a4390" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 {color: black;background-color: white;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 pre{padding: 0;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-toggleable {background-color: white;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-item {z-index: 1;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-parallel-item:only-child::after {width: 0;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8c73f384-b4f3-479a-ae78-0b41eca86274 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8c73f384-b4f3-479a-ae78-0b41eca86274" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4eea4f25-d407-4a95-a8be-7bb97487d094" type="checkbox" ><label for="4eea4f25-d407-4a95-a8be-7bb97487d094" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9391f52-0193-43a4-b1be-5c31de843991" type="checkbox" ><label for="b9391f52-0193-43a4-b1be-5c31de843991" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c48c9b23-b15a-4389-bffd-db1e674702da" type="checkbox" ><label for="c48c9b23-b15a-4389-bffd-db1e674702da" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44fff1c3-7eb3-4d7a-ba52-4b18ff646248" type="checkbox" ><label for="44fff1c3-7eb3-4d7a-ba52-4b18ff646248" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a56bcf16-638b-48b5-be01-10695b8a6d79" type="checkbox" ><label for="a56bcf16-638b-48b5-be01-10695b8a6d79" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0685b948-7536-4d01-80fa-80ae25aa254a" type="checkbox" ><label for="0685b948-7536-4d01-80fa-80ae25aa254a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f2b20b9-5ac0-4da7-8e2a-988959944c4f" type="checkbox" ><label for="3f2b20b9-5ac0-4da7-8e2a-988959944c4f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98e330ad-abd2-40fb-b1b9-500c72f21759" type="checkbox" ><label for="98e330ad-abd2-40fb-b1b9-500c72f21759" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b368766-73a5-4458-9812-dd188bd9cb06" type="checkbox" ><label for="8b368766-73a5-4458-9812-dd188bd9cb06" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 {color: black;background-color: white;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 pre{padding: 0;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-toggleable {background-color: white;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-item {z-index: 1;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-parallel-item:only-child::after {width: 0;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b6f7c25b-e700-44f3-ab6a-10a138773871 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b6f7c25b-e700-44f3-ab6a-10a138773871" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3936f0f7-cf65-4210-9d64-513bb0101eb0" type="checkbox" ><label for="3936f0f7-cf65-4210-9d64-513bb0101eb0" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9adc7e23-0d69-4c9f-be37-e10dd77aa791" type="checkbox" ><label for="9adc7e23-0d69-4c9f-be37-e10dd77aa791" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e09e78de-ea95-43c0-81ca-19b9b8107535" type="checkbox" ><label for="e09e78de-ea95-43c0-81ca-19b9b8107535" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e28b5c89-7779-4921-8480-e5a81f7ab954" type="checkbox" ><label for="e28b5c89-7779-4921-8480-e5a81f7ab954" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99438cff-f0f5-476d-8d5c-66e07bc5ba18" type="checkbox" ><label for="99438cff-f0f5-476d-8d5c-66e07bc5ba18" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f2cd978-ac88-430a-b517-f97ade05a1e2" type="checkbox" ><label for="3f2cd978-ac88-430a-b517-f97ade05a1e2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b4849ad-55af-4a18-860e-c5a5cbb7e368" type="checkbox" ><label for="0b4849ad-55af-4a18-860e-c5a5cbb7e368" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22423cc7-c271-47d4-bf6f-4aa5b47e2b83" type="checkbox" ><label for="22423cc7-c271-47d4-bf6f-4aa5b47e2b83" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b371cd2-ad91-4a9b-9a6a-35fa4c5b41ac" type="checkbox" ><label for="8b371cd2-ad91-4a9b-9a6a-35fa4c5b41ac" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
