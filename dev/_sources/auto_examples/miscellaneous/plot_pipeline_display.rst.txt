
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 {color: black;background-color: white;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 pre{padding: 0;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-toggleable {background-color: white;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-item {z-index: 1;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-parallel-item:only-child::after {width: 0;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a6e4d6a2-7ae7-403f-ac63-13f6db57af59" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb777c3b-a4ee-4c28-86e2-dd1d1c32b088" type="checkbox" ><label for="cb777c3b-a4ee-4c28-86e2-dd1d1c32b088" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a139a91-bc05-47f9-a23f-2062958de3c3" type="checkbox" ><label for="5a139a91-bc05-47f9-a23f-2062958de3c3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b3d2674-8f44-4f4a-a00f-905c5882d644" type="checkbox" ><label for="3b3d2674-8f44-4f4a-a00f-905c5882d644" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 {color: black;background-color: white;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 pre{padding: 0;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-toggleable {background-color: white;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-item {z-index: 1;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-parallel-item:only-child::after {width: 0;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9162a6da-b4f8-4745-ae68-f1c7060b2d91" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc7ad92a-c5cd-4625-a236-9867d835ada7" type="checkbox" ><label for="dc7ad92a-c5cd-4625-a236-9867d835ada7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6037b1c2-89d9-44ea-9b5e-c894114655ab" type="checkbox" ><label for="6037b1c2-89d9-44ea-9b5e-c894114655ab" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c61914ce-f0dc-4af5-9711-676d8e687c40" type="checkbox" ><label for="c61914ce-f0dc-4af5-9711-676d8e687c40" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="525a2e4b-90e0-4e1c-ae18-24fb43747554" type="checkbox" ><label for="525a2e4b-90e0-4e1c-ae18-24fb43747554" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 {color: black;background-color: white;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 pre{padding: 0;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-toggleable {background-color: white;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-estimator:hover {background-color: #d4ebff;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-item {z-index: 1;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-parallel-item:only-child::after {width: 0;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05 div.sk-text-repr-fallback {display: none;}</style><div id="sk-467a6588-b2ba-4ce5-8eb1-681a8dd92f05" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57f0af1c-4a90-4d42-869c-11adfd261d0b" type="checkbox" ><label for="57f0af1c-4a90-4d42-869c-11adfd261d0b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f7bf50e-5f00-429a-9fa7-6f0b0a15c025" type="checkbox" ><label for="8f7bf50e-5f00-429a-9fa7-6f0b0a15c025" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58fb5109-cfde-4564-9fde-e430bdbac685" type="checkbox" ><label for="58fb5109-cfde-4564-9fde-e430bdbac685" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f {color: black;background-color: white;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f pre{padding: 0;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-toggleable {background-color: white;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-estimator:hover {background-color: #d4ebff;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-item {z-index: 1;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-parallel-item:only-child::after {width: 0;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ef508480-08f2-4f59-9ca2-e9da551ce31f div.sk-text-repr-fallback {display: none;}</style><div id="sk-ef508480-08f2-4f59-9ca2-e9da551ce31f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64892894-8a8c-48b8-aba2-fddc8d4b60a6" type="checkbox" ><label for="64892894-8a8c-48b8-aba2-fddc8d4b60a6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffccceb0-b6dd-4406-8d61-bfdd14f11915" type="checkbox" ><label for="ffccceb0-b6dd-4406-8d61-bfdd14f11915" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e95cc68b-6a4a-4778-b78b-a6e2bb4b0b9c" type="checkbox" ><label for="e95cc68b-6a4a-4778-b78b-a6e2bb4b0b9c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81f62d3d-6426-4764-bc56-5eb5c9df8713" type="checkbox" ><label for="81f62d3d-6426-4764-bc56-5eb5c9df8713" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90071a09-5e10-4c5f-b113-b5a1dcbb22ce" type="checkbox" ><label for="90071a09-5e10-4c5f-b113-b5a1dcbb22ce" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bf77f85-daeb-4bba-bb66-e639211cb70a" type="checkbox" ><label for="5bf77f85-daeb-4bba-bb66-e639211cb70a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb19ceef-b546-41fe-be7a-556d00a92451" type="checkbox" ><label for="eb19ceef-b546-41fe-be7a-556d00a92451" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4ddf7b0-24b8-4975-805f-7cfa72d516bd" type="checkbox" ><label for="d4ddf7b0-24b8-4975-805f-7cfa72d516bd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfde1747-b207-47db-8fab-c0609c7bafe3" type="checkbox" ><label for="cfde1747-b207-47db-8fab-c0609c7bafe3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e {color: black;background-color: white;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e pre{padding: 0;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-toggleable {background-color: white;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-estimator:hover {background-color: #d4ebff;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-item {z-index: 1;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-parallel-item:only-child::after {width: 0;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e div.sk-text-repr-fallback {display: none;}</style><div id="sk-163d5be3-c648-4c3f-a9fc-13a91ecce34e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8577eb6b-e105-4a53-8300-d83b00c82f5f" type="checkbox" ><label for="8577eb6b-e105-4a53-8300-d83b00c82f5f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74797d71-3d18-4990-9a48-a25ba00d6c06" type="checkbox" ><label for="74797d71-3d18-4990-9a48-a25ba00d6c06" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf239e35-38f9-413d-8dcf-324586327306" type="checkbox" ><label for="cf239e35-38f9-413d-8dcf-324586327306" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee48613d-4399-419f-9a2f-43ad0a1d61bc" type="checkbox" ><label for="ee48613d-4399-419f-9a2f-43ad0a1d61bc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbddda22-b66f-4287-b1b4-8e6cedb0e9d2" type="checkbox" ><label for="cbddda22-b66f-4287-b1b4-8e6cedb0e9d2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="780e8951-b87f-4b54-8487-dd1eae517099" type="checkbox" ><label for="780e8951-b87f-4b54-8487-dd1eae517099" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc6788da-2c34-4c06-a2b9-15499d96d91a" type="checkbox" ><label for="bc6788da-2c34-4c06-a2b9-15499d96d91a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af602d82-b0d6-453d-a86d-7468635185ae" type="checkbox" ><label for="af602d82-b0d6-453d-a86d-7468635185ae" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94f3b5dd-53a3-4f3e-ac74-5934cd94dd10" type="checkbox" ><label for="94f3b5dd-53a3-4f3e-ac74-5934cd94dd10" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
