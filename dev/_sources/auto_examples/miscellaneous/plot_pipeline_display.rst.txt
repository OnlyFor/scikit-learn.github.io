
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc {color: black;background-color: white;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc pre{padding: 0;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-toggleable {background-color: white;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-estimator:hover {background-color: #d4ebff;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-item {z-index: 1;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-parallel-item:only-child::after {width: 0;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc div.sk-text-repr-fallback {display: none;}</style><div id="sk-eeed20dd-e15b-41eb-8f6b-e4f44a1bcfdc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1118be80-cd3c-43f6-aa3a-4d0b58892d62" type="checkbox" ><label for="1118be80-cd3c-43f6-aa3a-4d0b58892d62" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e7b7def-5864-4eb9-96f4-2efe7729deae" type="checkbox" ><label for="2e7b7def-5864-4eb9-96f4-2efe7729deae" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f328a343-63f3-4c40-8b87-5b8c6c20bde6" type="checkbox" ><label for="f328a343-63f3-4c40-8b87-5b8c6c20bde6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c485cfcd-f67f-4c60-a589-926c30ced42a {color: black;background-color: white;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a pre{padding: 0;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-toggleable {background-color: white;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-estimator:hover {background-color: #d4ebff;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-item {z-index: 1;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-parallel-item:only-child::after {width: 0;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c485cfcd-f67f-4c60-a589-926c30ced42a div.sk-text-repr-fallback {display: none;}</style><div id="sk-c485cfcd-f67f-4c60-a589-926c30ced42a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c6d6248-95cc-4a60-a762-d1d0e7d47478" type="checkbox" ><label for="2c6d6248-95cc-4a60-a762-d1d0e7d47478" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecdbd0fe-d362-438d-8782-0f32b94f0bfe" type="checkbox" ><label for="ecdbd0fe-d362-438d-8782-0f32b94f0bfe" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3ab215a-a456-42fe-9ce8-568decb2f515" type="checkbox" ><label for="e3ab215a-a456-42fe-9ce8-568decb2f515" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f337887f-b6b6-4747-b609-23d6d4839283" type="checkbox" ><label for="f337887f-b6b6-4747-b609-23d6d4839283" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-930bd723-2993-4f81-844c-113b7f245ee2 {color: black;background-color: white;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 pre{padding: 0;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-toggleable {background-color: white;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-item {z-index: 1;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-parallel-item:only-child::after {width: 0;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-930bd723-2993-4f81-844c-113b7f245ee2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-930bd723-2993-4f81-844c-113b7f245ee2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="302cd293-422b-4e1e-9430-a03682e07fc7" type="checkbox" ><label for="302cd293-422b-4e1e-9430-a03682e07fc7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5297fd82-de8d-4362-aca8-cd7745cb3d92" type="checkbox" ><label for="5297fd82-de8d-4362-aca8-cd7745cb3d92" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59c0259f-a551-4352-a3bb-8667be0757b7" type="checkbox" ><label for="59c0259f-a551-4352-a3bb-8667be0757b7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c1850547-9d22-4552-bea2-a4504f50584e {color: black;background-color: white;}#sk-c1850547-9d22-4552-bea2-a4504f50584e pre{padding: 0;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-toggleable {background-color: white;}#sk-c1850547-9d22-4552-bea2-a4504f50584e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c1850547-9d22-4552-bea2-a4504f50584e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c1850547-9d22-4552-bea2-a4504f50584e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c1850547-9d22-4552-bea2-a4504f50584e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c1850547-9d22-4552-bea2-a4504f50584e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1850547-9d22-4552-bea2-a4504f50584e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-estimator:hover {background-color: #d4ebff;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-item {z-index: 1;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-parallel-item:only-child::after {width: 0;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c1850547-9d22-4552-bea2-a4504f50584e div.sk-text-repr-fallback {display: none;}</style><div id="sk-c1850547-9d22-4552-bea2-a4504f50584e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fac48e6a-7a48-4b00-9db6-8e5368b0f46d" type="checkbox" ><label for="fac48e6a-7a48-4b00-9db6-8e5368b0f46d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4dc86b07-a46f-4b1f-81d9-43f144aba840" type="checkbox" ><label for="4dc86b07-a46f-4b1f-81d9-43f144aba840" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04d39886-2d23-4254-9c02-b7170dda0bba" type="checkbox" ><label for="04d39886-2d23-4254-9c02-b7170dda0bba" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6795514-051c-42f9-b72c-a7e428c93e8e" type="checkbox" ><label for="e6795514-051c-42f9-b72c-a7e428c93e8e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4af73f9-14ec-4507-8fec-d8e31b80f19b" type="checkbox" ><label for="e4af73f9-14ec-4507-8fec-d8e31b80f19b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e44f6f3-f016-45c0-841f-8bc2a5c6414e" type="checkbox" ><label for="5e44f6f3-f016-45c0-841f-8bc2a5c6414e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcd743ac-d08e-4e02-ab9a-285b119a3552" type="checkbox" ><label for="fcd743ac-d08e-4e02-ab9a-285b119a3552" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5c3324d-b987-427f-a9c4-16fb96c33add" type="checkbox" ><label for="f5c3324d-b987-427f-a9c4-16fb96c33add" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="848656df-aa54-4809-98a9-4b7cd7f5e07f" type="checkbox" ><label for="848656df-aa54-4809-98a9-4b7cd7f5e07f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 {color: black;background-color: white;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 pre{padding: 0;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-toggleable {background-color: white;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-item {z-index: 1;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-parallel-item:only-child::after {width: 0;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e96c74b5-caa9-4cc4-bd94-aadb36327a66" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1813016b-3c85-4c4f-a675-3de8481e3e25" type="checkbox" ><label for="1813016b-3c85-4c4f-a675-3de8481e3e25" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab87b432-d175-457a-a037-d7a1a0839bbe" type="checkbox" ><label for="ab87b432-d175-457a-a037-d7a1a0839bbe" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf0bf799-fb13-4b0d-b095-18a16b845241" type="checkbox" ><label for="bf0bf799-fb13-4b0d-b095-18a16b845241" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23ff9f49-48bb-4265-b37b-8653389949ea" type="checkbox" ><label for="23ff9f49-48bb-4265-b37b-8653389949ea" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7db52746-8716-4362-849f-b6cc94fedfdc" type="checkbox" ><label for="7db52746-8716-4362-849f-b6cc94fedfdc" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d4c530f-9140-4919-b10a-36f516c87a0e" type="checkbox" ><label for="5d4c530f-9140-4919-b10a-36f516c87a0e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7bc9823-a21b-4c2e-afdf-85af5ec1859a" type="checkbox" ><label for="f7bc9823-a21b-4c2e-afdf-85af5ec1859a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e96c751-8e41-49d6-a173-5f150d0bf729" type="checkbox" ><label for="0e96c751-8e41-49d6-a173-5f150d0bf729" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7010b1b-da9e-443c-8bab-709cf1c9a1a8" type="checkbox" ><label for="f7010b1b-da9e-443c-8bab-709cf1c9a1a8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
