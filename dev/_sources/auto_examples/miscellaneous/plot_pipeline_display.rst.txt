
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed {color: black;background-color: white;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed pre{padding: 0;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-toggleable {background-color: white;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-estimator:hover {background-color: #d4ebff;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-item {z-index: 1;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-parallel-item:only-child::after {width: 0;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-670ab452-895b-47a2-ba1b-83f95a0aeaed div.sk-text-repr-fallback {display: none;}</style><div id="sk-670ab452-895b-47a2-ba1b-83f95a0aeaed" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b156826-5ef7-49f0-bfce-39f27b371bf3" type="checkbox" ><label for="1b156826-5ef7-49f0-bfce-39f27b371bf3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="687c337f-193e-40e2-98b4-e4f7f0507c65" type="checkbox" ><label for="687c337f-193e-40e2-98b4-e4f7f0507c65" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3840be0b-ff16-4310-8bb3-4b16c931f6ac" type="checkbox" ><label for="3840be0b-ff16-4310-8bb3-4b16c931f6ac" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-be214db5-e572-4c28-9429-14a1542d6829 {color: black;background-color: white;}#sk-be214db5-e572-4c28-9429-14a1542d6829 pre{padding: 0;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-toggleable {background-color: white;}#sk-be214db5-e572-4c28-9429-14a1542d6829 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-be214db5-e572-4c28-9429-14a1542d6829 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-be214db5-e572-4c28-9429-14a1542d6829 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-be214db5-e572-4c28-9429-14a1542d6829 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-be214db5-e572-4c28-9429-14a1542d6829 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be214db5-e572-4c28-9429-14a1542d6829 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-estimator:hover {background-color: #d4ebff;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-item {z-index: 1;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-parallel-item:only-child::after {width: 0;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-be214db5-e572-4c28-9429-14a1542d6829 div.sk-text-repr-fallback {display: none;}</style><div id="sk-be214db5-e572-4c28-9429-14a1542d6829" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70f47074-122a-48c7-9940-dbce03ee9ed5" type="checkbox" ><label for="70f47074-122a-48c7-9940-dbce03ee9ed5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55f37381-13f4-46ba-a9a9-a56d7cc89465" type="checkbox" ><label for="55f37381-13f4-46ba-a9a9-a56d7cc89465" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35f56ad5-2428-420e-b9aa-3350432a169a" type="checkbox" ><label for="35f56ad5-2428-420e-b9aa-3350432a169a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9267c207-673b-4b89-b3cc-0817e85d970a" type="checkbox" ><label for="9267c207-673b-4b89-b3cc-0817e85d970a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-345d226e-a918-41fe-9755-70bdfa467fe1 {color: black;background-color: white;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 pre{padding: 0;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-toggleable {background-color: white;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-item {z-index: 1;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-parallel-item:only-child::after {width: 0;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-345d226e-a918-41fe-9755-70bdfa467fe1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-345d226e-a918-41fe-9755-70bdfa467fe1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e865f30-b1e9-4ba2-9c0a-392014d1721d" type="checkbox" ><label for="0e865f30-b1e9-4ba2-9c0a-392014d1721d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30c8883e-166a-4627-8312-24ad18121daf" type="checkbox" ><label for="30c8883e-166a-4627-8312-24ad18121daf" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8f96112-6be4-4386-9b6e-99b63b0d4da3" type="checkbox" ><label for="e8f96112-6be4-4386-9b6e-99b63b0d4da3" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c {color: black;background-color: white;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c pre{padding: 0;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-toggleable {background-color: white;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-estimator:hover {background-color: #d4ebff;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-item {z-index: 1;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-parallel-item:only-child::after {width: 0;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c div.sk-text-repr-fallback {display: none;}</style><div id="sk-db0c75c1-b1e3-445d-9572-60d3e0d52c5c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4c55ac2-804a-44f2-b0c6-8eeb0a41cd3c" type="checkbox" ><label for="e4c55ac2-804a-44f2-b0c6-8eeb0a41cd3c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="574bc0c9-3ecb-4a79-b608-46336494ec7c" type="checkbox" ><label for="574bc0c9-3ecb-4a79-b608-46336494ec7c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="faf3824c-7e09-4bd0-a049-1a00bc4d665f" type="checkbox" ><label for="faf3824c-7e09-4bd0-a049-1a00bc4d665f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84124499-555c-44bb-b12d-28c35d341509" type="checkbox" ><label for="84124499-555c-44bb-b12d-28c35d341509" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6836740a-b295-41c8-9331-0b7e0070fba8" type="checkbox" ><label for="6836740a-b295-41c8-9331-0b7e0070fba8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4abaab67-ed19-4cc7-82c6-71b39fbd9904" type="checkbox" ><label for="4abaab67-ed19-4cc7-82c6-71b39fbd9904" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9acaffd8-cfda-4578-9cb8-05b939d89843" type="checkbox" ><label for="9acaffd8-cfda-4578-9cb8-05b939d89843" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbb3ae2e-0548-43f1-aca3-7b52856b541f" type="checkbox" ><label for="dbb3ae2e-0548-43f1-aca3-7b52856b541f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a94ed098-9446-4091-98de-880b14b5c28c" type="checkbox" ><label for="a94ed098-9446-4091-98de-880b14b5c28c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 {color: black;background-color: white;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 pre{padding: 0;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-toggleable {background-color: white;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-item {z-index: 1;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-parallel-item:only-child::after {width: 0;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c86cef2e-026c-4c50-98c1-ea6518d6d078 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c86cef2e-026c-4c50-98c1-ea6518d6d078" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c3c7dda-c317-45f9-b72d-c1b6af322153" type="checkbox" ><label for="6c3c7dda-c317-45f9-b72d-c1b6af322153" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="357fdd5d-f43e-4589-b235-70a37782c106" type="checkbox" ><label for="357fdd5d-f43e-4589-b235-70a37782c106" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d870fb3c-855e-4724-9852-8948bacb693b" type="checkbox" ><label for="d870fb3c-855e-4724-9852-8948bacb693b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8329e837-f85e-42f9-bfb9-81b2830288e1" type="checkbox" ><label for="8329e837-f85e-42f9-bfb9-81b2830288e1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8874c61-d8ab-407a-ab11-49a14b45ae8b" type="checkbox" ><label for="f8874c61-d8ab-407a-ab11-49a14b45ae8b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c7c527d-f106-4e2c-bcfa-b0ed7ab5f726" type="checkbox" ><label for="8c7c527d-f106-4e2c-bcfa-b0ed7ab5f726" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34b3c418-db4f-42a7-be40-da7002ce7c1a" type="checkbox" ><label for="34b3c418-db4f-42a7-be40-da7002ce7c1a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="edf6a99a-60a2-440a-85dd-f45f910722e3" type="checkbox" ><label for="edf6a99a-60a2-440a-85dd-f45f910722e3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="459e2b84-33df-48e5-97cb-8eee94a28276" type="checkbox" ><label for="459e2b84-33df-48e5-97cb-8eee94a28276" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
