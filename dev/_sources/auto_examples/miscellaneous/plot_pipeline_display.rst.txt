
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b {color: black;background-color: white;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b pre{padding: 0;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-toggleable {background-color: white;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-estimator:hover {background-color: #d4ebff;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-item {z-index: 1;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-parallel-item:only-child::after {width: 0;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b div.sk-text-repr-fallback {display: none;}</style><div id="sk-e8d3bcb8-d6da-41fa-b98f-a3b9cad67c4b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c834a91-9359-439b-976a-65022fc0f923" type="checkbox" ><label class="sk-toggleable__label" for="3c834a91-9359-439b-976a-65022fc0f923">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43f59233-bd70-4f26-b1d9-f99d80682a0d" type="checkbox" ><label class="sk-toggleable__label" for="43f59233-bd70-4f26-b1d9-f99d80682a0d">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2454cc93-ac15-48d2-b794-70c0d289e413" type="checkbox" ><label class="sk-toggleable__label" for="2454cc93-ac15-48d2-b794-70c0d289e413">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-069d6699-0eff-4637-9ec2-51318c8c728f {color: black;background-color: white;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f pre{padding: 0;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-toggleable {background-color: white;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-estimator:hover {background-color: #d4ebff;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-item {z-index: 1;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-parallel-item:only-child::after {width: 0;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-069d6699-0eff-4637-9ec2-51318c8c728f div.sk-text-repr-fallback {display: none;}</style><div id="sk-069d6699-0eff-4637-9ec2-51318c8c728f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02e909a6-86da-4367-a599-37b7a5c5b2fa" type="checkbox" ><label class="sk-toggleable__label" for="02e909a6-86da-4367-a599-37b7a5c5b2fa">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="462ccf88-518c-4fd6-bd08-9e1162bf6e66" type="checkbox" ><label class="sk-toggleable__label" for="462ccf88-518c-4fd6-bd08-9e1162bf6e66">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db48e89b-da1c-4313-bb31-66041e72e78c" type="checkbox" ><label class="sk-toggleable__label" for="db48e89b-da1c-4313-bb31-66041e72e78c">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d93f46cd-ad2a-4d6a-a618-017ba261191b" type="checkbox" ><label class="sk-toggleable__label" for="d93f46cd-ad2a-4d6a-a618-017ba261191b">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 {color: black;background-color: white;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 pre{padding: 0;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-toggleable {background-color: white;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-estimator:hover {background-color: #d4ebff;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-item {z-index: 1;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-parallel-item:only-child::after {width: 0;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208 div.sk-text-repr-fallback {display: none;}</style><div id="sk-43eb7f52-6980-4a65-b1ea-d4c4c8d85208" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcf46e77-465c-421e-814b-a0ae567c6dc7" type="checkbox" ><label class="sk-toggleable__label" for="bcf46e77-465c-421e-814b-a0ae567c6dc7">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61f97a02-3111-4c9e-9cb2-464490fb31e7" type="checkbox" ><label class="sk-toggleable__label" for="61f97a02-3111-4c9e-9cb2-464490fb31e7">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e641b6fc-4509-418d-a8af-628d9d881c4f" type="checkbox" ><label class="sk-toggleable__label" for="e641b6fc-4509-418d-a8af-628d9d881c4f">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 {color: black;background-color: white;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 pre{padding: 0;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-toggleable {background-color: white;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-item {z-index: 1;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-parallel-item:only-child::after {width: 0;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-397615ae-4a3e-4d15-b207-4bb202a02ec3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-397615ae-4a3e-4d15-b207-4bb202a02ec3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="819a90f0-d22e-48ac-888f-832dff1a29a6" type="checkbox" ><label class="sk-toggleable__label" for="819a90f0-d22e-48ac-888f-832dff1a29a6">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e771348-fb22-4603-a09f-3b718d91470b" type="checkbox" ><label class="sk-toggleable__label" for="3e771348-fb22-4603-a09f-3b718d91470b">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f63db43a-146b-411f-84c3-e1d3c32612b0" type="checkbox" ><label class="sk-toggleable__label" for="f63db43a-146b-411f-84c3-e1d3c32612b0">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d378c11f-08d6-4a98-9d05-7458aadb4b48" type="checkbox" ><label class="sk-toggleable__label" for="d378c11f-08d6-4a98-9d05-7458aadb4b48">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba15f7bf-c3d8-4d42-b763-6e2b7bc2bda9" type="checkbox" ><label class="sk-toggleable__label" for="ba15f7bf-c3d8-4d42-b763-6e2b7bc2bda9">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca524c9f-9956-43b4-ad66-5df804e22ad3" type="checkbox" ><label class="sk-toggleable__label" for="ca524c9f-9956-43b4-ad66-5df804e22ad3">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10f60525-6834-4ce2-8519-b33ae4154eb5" type="checkbox" ><label class="sk-toggleable__label" for="10f60525-6834-4ce2-8519-b33ae4154eb5">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="204ffad1-d0cc-44d5-b24a-3bdac5453fb5" type="checkbox" ><label class="sk-toggleable__label" for="204ffad1-d0cc-44d5-b24a-3bdac5453fb5">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49e95567-63c7-4c7c-b7cc-76c43d04086b" type="checkbox" ><label class="sk-toggleable__label" for="49e95567-63c7-4c7c-b7cc-76c43d04086b">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-94a08396-f526-4a53-87e5-974db34a1ba7 {color: black;background-color: white;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 pre{padding: 0;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-toggleable {background-color: white;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-item {z-index: 1;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-parallel-item:only-child::after {width: 0;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-94a08396-f526-4a53-87e5-974db34a1ba7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-94a08396-f526-4a53-87e5-974db34a1ba7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="480af1e9-eb27-418e-8de6-03940de622f9" type="checkbox" ><label class="sk-toggleable__label" for="480af1e9-eb27-418e-8de6-03940de622f9">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a048c91d-15ae-4d4a-8098-b06147bd6d9f" type="checkbox" ><label class="sk-toggleable__label" for="a048c91d-15ae-4d4a-8098-b06147bd6d9f">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81113755-98eb-4e14-9ef1-2224ce1f40d0" type="checkbox" ><label class="sk-toggleable__label" for="81113755-98eb-4e14-9ef1-2224ce1f40d0">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a33f0e85-bbb3-4936-b238-761698d3806f" type="checkbox" ><label class="sk-toggleable__label" for="a33f0e85-bbb3-4936-b238-761698d3806f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="383f01f6-67e3-4373-b648-ba4f8bf0ef3b" type="checkbox" ><label class="sk-toggleable__label" for="383f01f6-67e3-4373-b648-ba4f8bf0ef3b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="634b571a-e10d-4d4c-b531-58b70b8b6c16" type="checkbox" ><label class="sk-toggleable__label" for="634b571a-e10d-4d4c-b531-58b70b8b6c16">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88563253-ef32-42aa-913e-d3556abe8bfc" type="checkbox" ><label class="sk-toggleable__label" for="88563253-ef32-42aa-913e-d3556abe8bfc">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcadfe28-02be-49b9-b9ac-762bedf9e8ce" type="checkbox" ><label class="sk-toggleable__label" for="bcadfe28-02be-49b9-b9ac-762bedf9e8ce">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3602a14b-18ca-47e9-8214-9774d2a242ee" type="checkbox" ><label class="sk-toggleable__label" for="3602a14b-18ca-47e9-8214-9774d2a242ee">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.095 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
