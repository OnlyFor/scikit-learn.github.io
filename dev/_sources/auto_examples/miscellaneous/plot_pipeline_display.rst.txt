
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3a42787d-9c95-460e-91cb-367810863d8a {color: black;background-color: white;}#sk-3a42787d-9c95-460e-91cb-367810863d8a pre{padding: 0;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-toggleable {background-color: white;}#sk-3a42787d-9c95-460e-91cb-367810863d8a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3a42787d-9c95-460e-91cb-367810863d8a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3a42787d-9c95-460e-91cb-367810863d8a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3a42787d-9c95-460e-91cb-367810863d8a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3a42787d-9c95-460e-91cb-367810863d8a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a42787d-9c95-460e-91cb-367810863d8a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-estimator:hover {background-color: #d4ebff;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-item {z-index: 1;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-parallel-item:only-child::after {width: 0;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3a42787d-9c95-460e-91cb-367810863d8a div.sk-text-repr-fallback {display: none;}</style><div id="sk-3a42787d-9c95-460e-91cb-367810863d8a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfb7535c-3f59-49fd-afeb-a3a0c9ee4097" type="checkbox" ><label for="dfb7535c-3f59-49fd-afeb-a3a0c9ee4097" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69ccdbd9-aeb7-4080-adad-62dd106711ea" type="checkbox" ><label for="69ccdbd9-aeb7-4080-adad-62dd106711ea" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a5f2c52-63e7-4c33-83aa-737785f8afa0" type="checkbox" ><label for="8a5f2c52-63e7-4c33-83aa-737785f8afa0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 {color: black;background-color: white;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 pre{padding: 0;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-toggleable {background-color: white;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-item {z-index: 1;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-parallel-item:only-child::after {width: 0;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9db84c8a-0a44-46ab-9d13-8f1b282f30a7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a31c48b-aa07-4f11-88b0-a8953bba1f4c" type="checkbox" ><label for="7a31c48b-aa07-4f11-88b0-a8953bba1f4c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bef2ab81-422d-41b2-9166-88ddefe90dda" type="checkbox" ><label for="bef2ab81-422d-41b2-9166-88ddefe90dda" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="322ca3f0-7dc9-4172-8d13-183b8a4f2a69" type="checkbox" ><label for="322ca3f0-7dc9-4172-8d13-183b8a4f2a69" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97ffe110-ba3b-4f56-a9f3-69361f33e1c0" type="checkbox" ><label for="97ffe110-ba3b-4f56-a9f3-69361f33e1c0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f {color: black;background-color: white;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f pre{padding: 0;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-toggleable {background-color: white;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-estimator:hover {background-color: #d4ebff;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-item {z-index: 1;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-parallel-item:only-child::after {width: 0;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f div.sk-text-repr-fallback {display: none;}</style><div id="sk-99b8c83a-0c4b-4e99-8550-faa32d2f517f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42690cb5-fede-4a60-87cc-f23d57a46bb7" type="checkbox" ><label for="42690cb5-fede-4a60-87cc-f23d57a46bb7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d09bb249-8700-4c4a-84ae-d57e4e648552" type="checkbox" ><label for="d09bb249-8700-4c4a-84ae-d57e4e648552" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f016592a-7150-4d08-b8f7-f79148de1fa6" type="checkbox" ><label for="f016592a-7150-4d08-b8f7-f79148de1fa6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 {color: black;background-color: white;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 pre{padding: 0;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-toggleable {background-color: white;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-item {z-index: 1;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-parallel-item:only-child::after {width: 0;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cf6c2d45-7b3f-42b7-b0dc-e443363cf305" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba32e5ba-223a-43c4-9d70-998519088dd5" type="checkbox" ><label for="ba32e5ba-223a-43c4-9d70-998519088dd5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ca053e7-82b4-43ca-add3-39b586f3f975" type="checkbox" ><label for="9ca053e7-82b4-43ca-add3-39b586f3f975" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eaa30b9d-6668-47df-9866-eb3b849a5a2a" type="checkbox" ><label for="eaa30b9d-6668-47df-9866-eb3b849a5a2a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60ff31dc-d25a-474a-acb3-befe4facca26" type="checkbox" ><label for="60ff31dc-d25a-474a-acb3-befe4facca26" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1d3f8f7-5ffd-4707-bdb6-1bd3e6402c6d" type="checkbox" ><label for="d1d3f8f7-5ffd-4707-bdb6-1bd3e6402c6d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea299444-e577-4875-bfec-79ecf97a39dc" type="checkbox" ><label for="ea299444-e577-4875-bfec-79ecf97a39dc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a555cdba-0494-4fe8-8344-0a3a17f8c597" type="checkbox" ><label for="a555cdba-0494-4fe8-8344-0a3a17f8c597" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf67ae3c-0ff0-4de8-a66a-38ddcaed90e9" type="checkbox" ><label for="bf67ae3c-0ff0-4de8-a66a-38ddcaed90e9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fceaafa-fd7f-4d7f-8835-099048bec193" type="checkbox" ><label for="5fceaafa-fd7f-4d7f-8835-099048bec193" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-83a19046-f24d-41fa-a316-da98727e463b {color: black;background-color: white;}#sk-83a19046-f24d-41fa-a316-da98727e463b pre{padding: 0;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-toggleable {background-color: white;}#sk-83a19046-f24d-41fa-a316-da98727e463b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-83a19046-f24d-41fa-a316-da98727e463b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-83a19046-f24d-41fa-a316-da98727e463b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-83a19046-f24d-41fa-a316-da98727e463b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-83a19046-f24d-41fa-a316-da98727e463b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-83a19046-f24d-41fa-a316-da98727e463b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-estimator:hover {background-color: #d4ebff;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-item {z-index: 1;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-parallel-item:only-child::after {width: 0;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-83a19046-f24d-41fa-a316-da98727e463b div.sk-text-repr-fallback {display: none;}</style><div id="sk-83a19046-f24d-41fa-a316-da98727e463b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfa793fe-91dd-4196-8ec6-c9f0668efea0" type="checkbox" ><label for="cfa793fe-91dd-4196-8ec6-c9f0668efea0" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb40690e-5f76-464d-bfd4-9f8775d4f669" type="checkbox" ><label for="bb40690e-5f76-464d-bfd4-9f8775d4f669" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="173f21b3-8b9b-4fe4-972c-1ce02678683b" type="checkbox" ><label for="173f21b3-8b9b-4fe4-972c-1ce02678683b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4bf0213-e1ba-49c5-9f1e-41d6e9b5e83a" type="checkbox" ><label for="a4bf0213-e1ba-49c5-9f1e-41d6e9b5e83a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfa051c7-7271-476d-892e-2e8ddfd47919" type="checkbox" ><label for="bfa051c7-7271-476d-892e-2e8ddfd47919" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77754a0a-cbc8-4938-99bc-802078a79e1a" type="checkbox" ><label for="77754a0a-cbc8-4938-99bc-802078a79e1a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1635d00-ee21-40e3-b65a-a48c57565050" type="checkbox" ><label for="d1635d00-ee21-40e3-b65a-a48c57565050" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b43e5fbc-4c96-48c1-b69a-be0e8f7b74b7" type="checkbox" ><label for="b43e5fbc-4c96-48c1-b69a-be0e8f7b74b7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d090b9f4-482d-47ca-9d9d-aacd5810268e" type="checkbox" ><label for="d090b9f4-482d-47ca-9d9d-aacd5810268e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
