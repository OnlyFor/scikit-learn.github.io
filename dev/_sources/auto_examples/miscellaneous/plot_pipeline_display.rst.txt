
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-242a9b98-e199-498a-8da8-812ee5e35586 {color: black;background-color: white;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 pre{padding: 0;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-toggleable {background-color: white;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-estimator:hover {background-color: #d4ebff;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-item {z-index: 1;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-parallel-item:only-child::after {width: 0;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-242a9b98-e199-498a-8da8-812ee5e35586 div.sk-text-repr-fallback {display: none;}</style><div id="sk-242a9b98-e199-498a-8da8-812ee5e35586" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a9a5cfd-463f-4bcf-8d41-c10cc28f6634" type="checkbox" ><label for="9a9a5cfd-463f-4bcf-8d41-c10cc28f6634" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="081d1335-76da-4a24-8b8d-6d55c0e29bed" type="checkbox" ><label for="081d1335-76da-4a24-8b8d-6d55c0e29bed" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4db3ab32-3f62-45ae-859a-06c23eac9e33" type="checkbox" ><label for="4db3ab32-3f62-45ae-859a-06c23eac9e33" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-731c4517-7bbb-4d38-81bd-58474460e58a {color: black;background-color: white;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a pre{padding: 0;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-toggleable {background-color: white;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-estimator:hover {background-color: #d4ebff;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-item {z-index: 1;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-parallel-item:only-child::after {width: 0;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-731c4517-7bbb-4d38-81bd-58474460e58a div.sk-text-repr-fallback {display: none;}</style><div id="sk-731c4517-7bbb-4d38-81bd-58474460e58a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3f7f2a0-65c8-4df3-8159-3c5185dc9b54" type="checkbox" ><label for="e3f7f2a0-65c8-4df3-8159-3c5185dc9b54" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd0589a2-062b-4550-a816-c2fc49b17680" type="checkbox" ><label for="bd0589a2-062b-4550-a816-c2fc49b17680" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a986e6f-6af1-4cb7-a110-f7d1e6e51b8b" type="checkbox" ><label for="1a986e6f-6af1-4cb7-a110-f7d1e6e51b8b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e31ee5d-2195-48b0-b0bb-ecd0e0fdd548" type="checkbox" ><label for="9e31ee5d-2195-48b0-b0bb-ecd0e0fdd548" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 {color: black;background-color: white;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 pre{padding: 0;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-toggleable {background-color: white;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-item {z-index: 1;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-parallel-item:only-child::after {width: 0;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-afc4a1e0-fd8d-48eb-9bae-7694db6a91a2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd12e0eb-38c1-483d-acce-0cc00bf1e7e0" type="checkbox" ><label for="bd12e0eb-38c1-483d-acce-0cc00bf1e7e0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bce720ae-480d-4f06-a749-486fc9c8ab95" type="checkbox" ><label for="bce720ae-480d-4f06-a749-486fc9c8ab95" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d5c03bc-9c02-47aa-9263-88e005770287" type="checkbox" ><label for="5d5c03bc-9c02-47aa-9263-88e005770287" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 {color: black;background-color: white;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 pre{padding: 0;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-toggleable {background-color: white;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-estimator:hover {background-color: #d4ebff;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-item {z-index: 1;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-parallel-item:only-child::after {width: 0;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-56a6fd78-ea08-4de0-9b48-c347d23d8122 div.sk-text-repr-fallback {display: none;}</style><div id="sk-56a6fd78-ea08-4de0-9b48-c347d23d8122" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="429ecfe4-3246-44bc-ae00-c727764a8640" type="checkbox" ><label for="429ecfe4-3246-44bc-ae00-c727764a8640" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9946d232-9aa0-4487-a4cc-41cddb0e200f" type="checkbox" ><label for="9946d232-9aa0-4487-a4cc-41cddb0e200f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c77613f-8307-41c1-889d-03fcb1aa708d" type="checkbox" ><label for="5c77613f-8307-41c1-889d-03fcb1aa708d" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83a6df5c-820d-4a55-b5f2-c870dfb75906" type="checkbox" ><label for="83a6df5c-820d-4a55-b5f2-c870dfb75906" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe999fcd-3095-40b3-873e-4031431567bf" type="checkbox" ><label for="fe999fcd-3095-40b3-873e-4031431567bf" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25af2b18-c1f8-4bf9-a2e6-d3cddc55f2e8" type="checkbox" ><label for="25af2b18-c1f8-4bf9-a2e6-d3cddc55f2e8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff3eb182-9571-4f18-973f-7c335e25b11e" type="checkbox" ><label for="ff3eb182-9571-4f18-973f-7c335e25b11e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dace3275-a2f7-4cda-abe0-868caab3c04a" type="checkbox" ><label for="dace3275-a2f7-4cda-abe0-868caab3c04a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83ccd480-ff05-427c-966d-57a6f7e54b34" type="checkbox" ><label for="83ccd480-ff05-427c-966d-57a6f7e54b34" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 {color: black;background-color: white;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 pre{padding: 0;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-toggleable {background-color: white;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-item {z-index: 1;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-parallel-item:only-child::after {width: 0;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-85e39406-85b4-4b56-a2b7-794fd985a3e3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-85e39406-85b4-4b56-a2b7-794fd985a3e3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94c00b0e-cb2b-46c1-9cb6-18c40c3290c8" type="checkbox" ><label for="94c00b0e-cb2b-46c1-9cb6-18c40c3290c8" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7d0350a-9ed2-4f76-97c8-d92d948165ba" type="checkbox" ><label for="a7d0350a-9ed2-4f76-97c8-d92d948165ba" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb199f34-f7a0-45c1-8832-6db0426b858e" type="checkbox" ><label for="fb199f34-f7a0-45c1-8832-6db0426b858e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24449899-6537-44d8-9382-e27e3b2a1df1" type="checkbox" ><label for="24449899-6537-44d8-9382-e27e3b2a1df1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a97ed0bd-9b81-4de6-9703-b83843b0e32f" type="checkbox" ><label for="a97ed0bd-9b81-4de6-9703-b83843b0e32f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3c5aaad-1fad-47c9-8d88-cc9473679599" type="checkbox" ><label for="e3c5aaad-1fad-47c9-8d88-cc9473679599" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee68af0b-934a-4682-9e8b-cb49e81f6a37" type="checkbox" ><label for="ee68af0b-934a-4682-9e8b-cb49e81f6a37" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a270a3fe-f2f1-479d-8123-5fc9b51bab05" type="checkbox" ><label for="a270a3fe-f2f1-479d-8123-5fc9b51bab05" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3efe387-a43a-443b-bfee-d4a861330a30" type="checkbox" ><label for="a3efe387-a43a-443b-bfee-d4a861330a30" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
