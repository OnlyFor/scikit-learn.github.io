
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac {color: black;background-color: white;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac pre{padding: 0;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-toggleable {background-color: white;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-item {z-index: 1;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-parallel-item:only-child::after {width: 0;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac div.sk-text-repr-fallback {display: none;}</style><div id="sk-fa79505c-e6e3-49e6-b2c0-dbe873076dac" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5d4d478-0075-4df6-9015-0c9eff999d7b" type="checkbox" ><label for="e5d4d478-0075-4df6-9015-0c9eff999d7b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ee85058-8bd8-4f2a-826a-eda91b008fcc" type="checkbox" ><label for="5ee85058-8bd8-4f2a-826a-eda91b008fcc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0642ecfe-7d4a-447a-9b66-22bed6ae525c" type="checkbox" ><label for="0642ecfe-7d4a-447a-9b66-22bed6ae525c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed {color: black;background-color: white;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed pre{padding: 0;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-toggleable {background-color: white;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-estimator:hover {background-color: #d4ebff;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-item {z-index: 1;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-parallel-item:only-child::after {width: 0;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed div.sk-text-repr-fallback {display: none;}</style><div id="sk-c75b4201-ecb2-4d38-9473-3e4cc8c492ed" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9076347-cfe8-438b-8db9-e2293e135ec7" type="checkbox" ><label for="a9076347-cfe8-438b-8db9-e2293e135ec7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7862850a-58f2-4c30-96d3-15fbf6563501" type="checkbox" ><label for="7862850a-58f2-4c30-96d3-15fbf6563501" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2735d124-2dbd-4ef1-ac6d-11f14ef2ef02" type="checkbox" ><label for="2735d124-2dbd-4ef1-ac6d-11f14ef2ef02" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea1469b4-eb5a-4bcb-84f9-12855728c001" type="checkbox" ><label for="ea1469b4-eb5a-4bcb-84f9-12855728c001" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5daaeb01-6c16-4461-a095-658a8f46662d {color: black;background-color: white;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d pre{padding: 0;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-toggleable {background-color: white;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-estimator:hover {background-color: #d4ebff;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-item {z-index: 1;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-parallel-item:only-child::after {width: 0;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5daaeb01-6c16-4461-a095-658a8f46662d div.sk-text-repr-fallback {display: none;}</style><div id="sk-5daaeb01-6c16-4461-a095-658a8f46662d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f598d7b2-9865-4803-bf9a-01e0f2ceb02e" type="checkbox" ><label for="f598d7b2-9865-4803-bf9a-01e0f2ceb02e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22255d24-5c2a-4ce8-8933-cfc2f10a6320" type="checkbox" ><label for="22255d24-5c2a-4ce8-8933-cfc2f10a6320" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2efd8fc2-f2e8-4ff0-be93-3f8a1551b372" type="checkbox" ><label for="2efd8fc2-f2e8-4ff0-be93-3f8a1551b372" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 {color: black;background-color: white;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 pre{padding: 0;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-toggleable {background-color: white;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-item {z-index: 1;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-parallel-item:only-child::after {width: 0;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d9840df3-defc-4e8a-85de-107c101aa5f4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d9840df3-defc-4e8a-85de-107c101aa5f4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a910a8fa-b475-433b-89dd-6d49f6d3fdbb" type="checkbox" ><label for="a910a8fa-b475-433b-89dd-6d49f6d3fdbb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9f75bdf-636c-4ecb-9b37-96a5c1f59e6d" type="checkbox" ><label for="d9f75bdf-636c-4ecb-9b37-96a5c1f59e6d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="baf25509-66df-4b28-b7de-ec279adeba90" type="checkbox" ><label for="baf25509-66df-4b28-b7de-ec279adeba90" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58964b01-ef39-40df-9e35-f84b18fb98a3" type="checkbox" ><label for="58964b01-ef39-40df-9e35-f84b18fb98a3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5585bc20-422c-4d49-9245-67225549fce3" type="checkbox" ><label for="5585bc20-422c-4d49-9245-67225549fce3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8e874f8-a0ab-46bf-8c65-cdd97842b77e" type="checkbox" ><label for="d8e874f8-a0ab-46bf-8c65-cdd97842b77e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="643da70b-2c07-4b4d-a7d0-87e5bae1bf6a" type="checkbox" ><label for="643da70b-2c07-4b4d-a7d0-87e5bae1bf6a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b2241cb-144a-451c-ac7f-a6fc71d8ef3a" type="checkbox" ><label for="0b2241cb-144a-451c-ac7f-a6fc71d8ef3a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3881158-2377-46ce-9c7c-095ee8788ddf" type="checkbox" ><label for="f3881158-2377-46ce-9c7c-095ee8788ddf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c {color: black;background-color: white;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c pre{padding: 0;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-toggleable {background-color: white;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-estimator:hover {background-color: #d4ebff;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-item {z-index: 1;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-parallel-item:only-child::after {width: 0;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c div.sk-text-repr-fallback {display: none;}</style><div id="sk-354540bc-e6b9-4d59-b209-ccc29f0f1f6c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a736d4f2-5057-4a5b-bb63-bcaccf9fd344" type="checkbox" ><label for="a736d4f2-5057-4a5b-bb63-bcaccf9fd344" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5ac6a65-9448-42df-abf6-05cc3414726f" type="checkbox" ><label for="a5ac6a65-9448-42df-abf6-05cc3414726f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6af25e5-00a0-41d2-b22e-b52d90d54dad" type="checkbox" ><label for="d6af25e5-00a0-41d2-b22e-b52d90d54dad" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08943e9a-7b34-4caf-ae02-51cc54974030" type="checkbox" ><label for="08943e9a-7b34-4caf-ae02-51cc54974030" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="922bcfda-c3d1-44f1-b53a-2491d043fcc1" type="checkbox" ><label for="922bcfda-c3d1-44f1-b53a-2491d043fcc1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef20d2c0-0f7c-4f7a-8b46-6cfe4e352898" type="checkbox" ><label for="ef20d2c0-0f7c-4f7a-8b46-6cfe4e352898" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9322f2b-e559-4576-8d99-9ba07a5c7fc6" type="checkbox" ><label for="d9322f2b-e559-4576-8d99-9ba07a5c7fc6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd82e4df-52ac-40ca-8d8e-758fd50fe83f" type="checkbox" ><label for="bd82e4df-52ac-40ca-8d8e-758fd50fe83f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bd63b4c-2337-4e73-8f80-37e5ae0ffb81" type="checkbox" ><label for="3bd63b4c-2337-4e73-8f80-37e5ae0ffb81" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
