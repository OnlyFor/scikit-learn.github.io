
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d {color: black;background-color: white;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d pre{padding: 0;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-toggleable {background-color: white;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-estimator:hover {background-color: #d4ebff;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-item {z-index: 1;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-parallel-item:only-child::after {width: 0;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d div.sk-text-repr-fallback {display: none;}</style><div id="sk-a0724f0e-1ab0-4ce8-b163-d21f96b8de4d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71e5132a-3851-466b-afdc-3081660c9761" type="checkbox" ><label for="71e5132a-3851-466b-afdc-3081660c9761" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f054c506-823b-4ac5-8b95-87f87797ba03" type="checkbox" ><label for="f054c506-823b-4ac5-8b95-87f87797ba03" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be95f2e5-5dbc-4ef4-8ba8-ba5c543b533c" type="checkbox" ><label for="be95f2e5-5dbc-4ef4-8ba8-ba5c543b533c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a {color: black;background-color: white;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a pre{padding: 0;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-toggleable {background-color: white;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-estimator:hover {background-color: #d4ebff;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-item {z-index: 1;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-parallel-item:only-child::after {width: 0;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a div.sk-text-repr-fallback {display: none;}</style><div id="sk-3b5e1946-d39e-4492-8a18-66d0ae2bab7a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b07956e-ebd1-4bf3-b421-35896504c5a1" type="checkbox" ><label for="7b07956e-ebd1-4bf3-b421-35896504c5a1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bed8dc0-526f-4ff4-a43e-e553de4b29b3" type="checkbox" ><label for="9bed8dc0-526f-4ff4-a43e-e553de4b29b3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91b00c79-e38f-4571-9187-bc330d423502" type="checkbox" ><label for="91b00c79-e38f-4571-9187-bc330d423502" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c897d84-0019-4391-870a-3dae5c5e314b" type="checkbox" ><label for="2c897d84-0019-4391-870a-3dae5c5e314b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 {color: black;background-color: white;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 pre{padding: 0;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-toggleable {background-color: white;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-estimator:hover {background-color: #d4ebff;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-item {z-index: 1;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-parallel-item:only-child::after {width: 0;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60 div.sk-text-repr-fallback {display: none;}</style><div id="sk-38bd0baa-f9e7-4960-b49d-1f4ce29b7f60" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe517b54-a64d-4e56-b253-3771f9939b79" type="checkbox" ><label for="fe517b54-a64d-4e56-b253-3771f9939b79" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22510a36-d806-4f22-adf1-8bd0aa2ecdff" type="checkbox" ><label for="22510a36-d806-4f22-adf1-8bd0aa2ecdff" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18e86112-f4c9-44ab-96f9-ecaf5a1bd02b" type="checkbox" ><label for="18e86112-f4c9-44ab-96f9-ecaf5a1bd02b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 {color: black;background-color: white;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 pre{padding: 0;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-toggleable {background-color: white;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-item {z-index: 1;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-parallel-item:only-child::after {width: 0;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0e05b928-054b-4dfa-b284-b195bdc6ba33 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0e05b928-054b-4dfa-b284-b195bdc6ba33" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fabb2849-fc79-44c5-a7f1-0a2a9dc914ed" type="checkbox" ><label for="fabb2849-fc79-44c5-a7f1-0a2a9dc914ed" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e324ac6f-ddf9-41db-9ee1-edc7f2d6cbe5" type="checkbox" ><label for="e324ac6f-ddf9-41db-9ee1-edc7f2d6cbe5" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c895c3a4-3d01-4a70-bf04-d95e1f0a4c3b" type="checkbox" ><label for="c895c3a4-3d01-4a70-bf04-d95e1f0a4c3b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a73b867-5320-4256-9dab-7a48d69fbf91" type="checkbox" ><label for="7a73b867-5320-4256-9dab-7a48d69fbf91" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ef9965b-c024-4633-9642-1da64beebe59" type="checkbox" ><label for="9ef9965b-c024-4633-9642-1da64beebe59" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1a1f40f-9254-4c03-9d7d-f1ae1eb49025" type="checkbox" ><label for="f1a1f40f-9254-4c03-9d7d-f1ae1eb49025" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="530b18b4-18be-472a-9e64-782df425952d" type="checkbox" ><label for="530b18b4-18be-472a-9e64-782df425952d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55d9bda4-4bc5-4ca2-a277-7eceb564ea6e" type="checkbox" ><label for="55d9bda4-4bc5-4ca2-a277-7eceb564ea6e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0648975-f05c-4a08-8b0b-72c00654a31c" type="checkbox" ><label for="b0648975-f05c-4a08-8b0b-72c00654a31c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 {color: black;background-color: white;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 pre{padding: 0;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-toggleable {background-color: white;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-item {z-index: 1;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-parallel-item:only-child::after {width: 0;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-10101636-63a2-4ce0-b237-42ca8ef891a5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-10101636-63a2-4ce0-b237-42ca8ef891a5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eda7b97b-2f31-4ba6-9a5b-88110883d1e2" type="checkbox" ><label for="eda7b97b-2f31-4ba6-9a5b-88110883d1e2" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="628459fd-85b5-4485-9c2c-5cd7a345d885" type="checkbox" ><label for="628459fd-85b5-4485-9c2c-5cd7a345d885" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c63696b4-d268-4153-9216-c39472542368" type="checkbox" ><label for="c63696b4-d268-4153-9216-c39472542368" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff6b9b73-f4f5-4cd9-ba0a-d039f48f7e06" type="checkbox" ><label for="ff6b9b73-f4f5-4cd9-ba0a-d039f48f7e06" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bffaee3-702a-49be-ae78-79f53f2d10cb" type="checkbox" ><label for="3bffaee3-702a-49be-ae78-79f53f2d10cb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4b04541-3fdf-48d6-a672-10228eb8c3d2" type="checkbox" ><label for="d4b04541-3fdf-48d6-a672-10228eb8c3d2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2d817c3-9b20-45c1-9e0c-b72a984b6548" type="checkbox" ><label for="e2d817c3-9b20-45c1-9e0c-b72a984b6548" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcb0de93-50d8-4ece-aa16-342c95e1faba" type="checkbox" ><label for="dcb0de93-50d8-4ece-aa16-342c95e1faba" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffde6569-382f-4586-a396-369cdc9963bb" type="checkbox" ><label for="ffde6569-382f-4586-a396-369cdc9963bb" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
