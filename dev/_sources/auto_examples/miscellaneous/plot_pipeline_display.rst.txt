
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 {color: black;background-color: white;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 pre{padding: 0;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-toggleable {background-color: white;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-item {z-index: 1;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-parallel-item:only-child::after {width: 0;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-58ffafeb-93dc-4315-b1db-6a260de654a5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-58ffafeb-93dc-4315-b1db-6a260de654a5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3ce254e-a7ca-41de-8017-3d2fe41d3754" type="checkbox" ><label for="f3ce254e-a7ca-41de-8017-3d2fe41d3754" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fd18b14-4dc2-4df1-8e79-fa18a28d0f0f" type="checkbox" ><label for="2fd18b14-4dc2-4df1-8e79-fa18a28d0f0f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2650115f-2ce8-4d3e-bd74-6320820bf340" type="checkbox" ><label for="2650115f-2ce8-4d3e-bd74-6320820bf340" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a37381b3-ac2e-4f84-a458-0e56b247862b {color: black;background-color: white;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b pre{padding: 0;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-toggleable {background-color: white;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-estimator:hover {background-color: #d4ebff;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-item {z-index: 1;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-parallel-item:only-child::after {width: 0;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a37381b3-ac2e-4f84-a458-0e56b247862b div.sk-text-repr-fallback {display: none;}</style><div id="sk-a37381b3-ac2e-4f84-a458-0e56b247862b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83696cf0-fe4f-49b2-aad7-1bafd06e4920" type="checkbox" ><label for="83696cf0-fe4f-49b2-aad7-1bafd06e4920" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="990de246-3c46-41e3-a941-53140346650f" type="checkbox" ><label for="990de246-3c46-41e3-a941-53140346650f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5e677ee-bf8b-4209-a7e2-8620907874e6" type="checkbox" ><label for="d5e677ee-bf8b-4209-a7e2-8620907874e6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa6fb0d9-d5c3-4a65-9443-d7897561aa8e" type="checkbox" ><label for="fa6fb0d9-d5c3-4a65-9443-d7897561aa8e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 {color: black;background-color: white;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 pre{padding: 0;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-toggleable {background-color: white;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-item {z-index: 1;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-parallel-item:only-child::after {width: 0;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9dabd5d4-8a78-462f-b34c-de39b94ea0e4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20f2aa95-9408-4f7a-ac2d-ee4d7cc1ce84" type="checkbox" ><label for="20f2aa95-9408-4f7a-ac2d-ee4d7cc1ce84" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92e43c26-d29a-4a42-91a2-85cf955fafbe" type="checkbox" ><label for="92e43c26-d29a-4a42-91a2-85cf955fafbe" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0849773a-069e-499f-ae36-8e2304e65454" type="checkbox" ><label for="0849773a-069e-499f-ae36-8e2304e65454" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-896c5742-2992-40d9-a6b7-da57459285fa {color: black;background-color: white;}#sk-896c5742-2992-40d9-a6b7-da57459285fa pre{padding: 0;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-toggleable {background-color: white;}#sk-896c5742-2992-40d9-a6b7-da57459285fa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-896c5742-2992-40d9-a6b7-da57459285fa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-896c5742-2992-40d9-a6b7-da57459285fa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-896c5742-2992-40d9-a6b7-da57459285fa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-896c5742-2992-40d9-a6b7-da57459285fa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-896c5742-2992-40d9-a6b7-da57459285fa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-estimator:hover {background-color: #d4ebff;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-item {z-index: 1;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-parallel-item:only-child::after {width: 0;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-896c5742-2992-40d9-a6b7-da57459285fa div.sk-text-repr-fallback {display: none;}</style><div id="sk-896c5742-2992-40d9-a6b7-da57459285fa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6d76b89-7833-4fb1-85b9-2580530fc072" type="checkbox" ><label for="a6d76b89-7833-4fb1-85b9-2580530fc072" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26f0d277-7e50-4b43-b3d7-1ff11e4d7be1" type="checkbox" ><label for="26f0d277-7e50-4b43-b3d7-1ff11e4d7be1" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="462b1fe4-d255-4997-a1b6-9f4a5a0f2b72" type="checkbox" ><label for="462b1fe4-d255-4997-a1b6-9f4a5a0f2b72" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f1ea62c-f101-4971-b775-7327fedf4f84" type="checkbox" ><label for="0f1ea62c-f101-4971-b775-7327fedf4f84" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aecf3f5b-fa2f-4e37-b1c8-b87b5eab24b0" type="checkbox" ><label for="aecf3f5b-fa2f-4e37-b1c8-b87b5eab24b0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc0a9235-02c5-4317-8be7-d9609eef3bce" type="checkbox" ><label for="dc0a9235-02c5-4317-8be7-d9609eef3bce" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bedae6c0-80a6-47f2-bea0-a8f036885948" type="checkbox" ><label for="bedae6c0-80a6-47f2-bea0-a8f036885948" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78de3ff4-35ed-48b7-ac90-add7b35c6ac0" type="checkbox" ><label for="78de3ff4-35ed-48b7-ac90-add7b35c6ac0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="674187e8-c1af-4692-9c1e-f23aa86182e0" type="checkbox" ><label for="674187e8-c1af-4692-9c1e-f23aa86182e0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 {color: black;background-color: white;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 pre{padding: 0;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-toggleable {background-color: white;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-item {z-index: 1;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-parallel-item:only-child::after {width: 0;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0f1b85a9-009f-4a1c-aa63-be10b5f901a4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3464ad4b-e821-4029-a5a8-1b0c52af6e2a" type="checkbox" ><label for="3464ad4b-e821-4029-a5a8-1b0c52af6e2a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85590be2-0c8f-4e05-adb3-7c54c8a89364" type="checkbox" ><label for="85590be2-0c8f-4e05-adb3-7c54c8a89364" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="132e05db-68f9-4fb0-b8cc-54d2b2e06976" type="checkbox" ><label for="132e05db-68f9-4fb0-b8cc-54d2b2e06976" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f6ba45e-51b9-400e-854b-cca3118d978c" type="checkbox" ><label for="4f6ba45e-51b9-400e-854b-cca3118d978c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13f3f78c-e2b7-48ad-a8fd-548fe1590fd9" type="checkbox" ><label for="13f3f78c-e2b7-48ad-a8fd-548fe1590fd9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="907d9dc9-e406-4410-9a07-86dc34464950" type="checkbox" ><label for="907d9dc9-e406-4410-9a07-86dc34464950" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff17ec45-6b65-40a0-8b8b-1c7f9014ac37" type="checkbox" ><label for="ff17ec45-6b65-40a0-8b8b-1c7f9014ac37" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfb785ce-88fa-4aa5-82c8-0895d18f25ac" type="checkbox" ><label for="dfb785ce-88fa-4aa5-82c8-0895d18f25ac" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cdf0833-a609-4989-b187-491e5a0f43d4" type="checkbox" ><label for="8cdf0833-a609-4989-b187-491e5a0f43d4" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.077 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
