
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 {color: black;background-color: white;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 pre{padding: 0;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-toggleable {background-color: white;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-item {z-index: 1;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-parallel-item:only-child::after {width: 0;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1934865a-cfb0-486f-aec3-da1daa0727c1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1934865a-cfb0-486f-aec3-da1daa0727c1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42a4952e-47bf-4537-8596-95c3defacd42" type="checkbox" ><label class="sk-toggleable__label" for="42a4952e-47bf-4537-8596-95c3defacd42">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b62b81bb-076d-4c9d-a377-2afc5597a0c1" type="checkbox" ><label class="sk-toggleable__label" for="b62b81bb-076d-4c9d-a377-2afc5597a0c1">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1578de22-e8f2-4494-90a0-3fd5b46ddf7b" type="checkbox" ><label class="sk-toggleable__label" for="1578de22-e8f2-4494-90a0-3fd5b46ddf7b">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d {color: black;background-color: white;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d pre{padding: 0;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-toggleable {background-color: white;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-estimator:hover {background-color: #d4ebff;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-item {z-index: 1;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-parallel-item:only-child::after {width: 0;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-61d40d45-fbc9-4a3c-a553-e89e714e873d div.sk-text-repr-fallback {display: none;}</style><div id="sk-61d40d45-fbc9-4a3c-a553-e89e714e873d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d302591e-a73d-4a59-ba1c-8531ca5e07ed" type="checkbox" ><label class="sk-toggleable__label" for="d302591e-a73d-4a59-ba1c-8531ca5e07ed">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1efa084c-1cc7-49d8-a63b-294ad7d8d0a7" type="checkbox" ><label class="sk-toggleable__label" for="1efa084c-1cc7-49d8-a63b-294ad7d8d0a7">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dde12caa-b877-431e-8b75-d58dd7d443ef" type="checkbox" ><label class="sk-toggleable__label" for="dde12caa-b877-431e-8b75-d58dd7d443ef">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce11b819-2378-4668-b849-8133f05494b2" type="checkbox" ><label class="sk-toggleable__label" for="ce11b819-2378-4668-b849-8133f05494b2">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b {color: black;background-color: white;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b pre{padding: 0;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-toggleable {background-color: white;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-estimator:hover {background-color: #d4ebff;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-item {z-index: 1;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-parallel-item:only-child::after {width: 0;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b div.sk-text-repr-fallback {display: none;}</style><div id="sk-a0011ad4-48e9-4fb2-ab54-fb77000dbb7b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="850afa75-3b81-4f52-b1d2-c9117f3fd701" type="checkbox" ><label class="sk-toggleable__label" for="850afa75-3b81-4f52-b1d2-c9117f3fd701">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70808991-001b-47b2-a2a7-150e475fd7ba" type="checkbox" ><label class="sk-toggleable__label" for="70808991-001b-47b2-a2a7-150e475fd7ba">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc1bc09a-c233-4cdb-ac34-2cfe6eff1d12" type="checkbox" ><label class="sk-toggleable__label" for="cc1bc09a-c233-4cdb-ac34-2cfe6eff1d12">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bb915138-1017-4503-8ea0-aacacf2bd88a {color: black;background-color: white;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a pre{padding: 0;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-toggleable {background-color: white;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-estimator:hover {background-color: #d4ebff;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-item {z-index: 1;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-parallel-item:only-child::after {width: 0;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bb915138-1017-4503-8ea0-aacacf2bd88a div.sk-text-repr-fallback {display: none;}</style><div id="sk-bb915138-1017-4503-8ea0-aacacf2bd88a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d313a8ef-c8a3-4625-b8b9-96455f8f5267" type="checkbox" ><label class="sk-toggleable__label" for="d313a8ef-c8a3-4625-b8b9-96455f8f5267">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd9bfc4e-d4a9-4729-8fc6-328bf7b13f24" type="checkbox" ><label class="sk-toggleable__label" for="dd9bfc4e-d4a9-4729-8fc6-328bf7b13f24">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b457517e-bdbc-4ab0-a837-c6e903119901" type="checkbox" ><label class="sk-toggleable__label" for="b457517e-bdbc-4ab0-a837-c6e903119901">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e5ab481-95d9-483b-a60f-69b2459525d4" type="checkbox" ><label class="sk-toggleable__label" for="6e5ab481-95d9-483b-a60f-69b2459525d4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ae288e1-844b-4a64-b6fa-60cf75bd7c4e" type="checkbox" ><label class="sk-toggleable__label" for="3ae288e1-844b-4a64-b6fa-60cf75bd7c4e">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64e3126e-ca8b-48c8-b6e2-ef63b08a6031" type="checkbox" ><label class="sk-toggleable__label" for="64e3126e-ca8b-48c8-b6e2-ef63b08a6031">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d611ffdb-e37b-42b8-b086-581d1b96b7fe" type="checkbox" ><label class="sk-toggleable__label" for="d611ffdb-e37b-42b8-b086-581d1b96b7fe">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a84023c-fe40-4689-a7d0-7124ffc3f72f" type="checkbox" ><label class="sk-toggleable__label" for="0a84023c-fe40-4689-a7d0-7124ffc3f72f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39973323-e72e-447c-8755-46127d2ae06e" type="checkbox" ><label class="sk-toggleable__label" for="39973323-e72e-447c-8755-46127d2ae06e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 {color: black;background-color: white;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 pre{padding: 0;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-toggleable {background-color: white;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-item {z-index: 1;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-parallel-item:only-child::after {width: 0;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-19ca386d-2e4c-42ed-b986-ff78a3815fc9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f2433be-4f2e-434b-973f-7ce9e04d3c83" type="checkbox" ><label class="sk-toggleable__label" for="4f2433be-4f2e-434b-973f-7ce9e04d3c83">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cd299e8-79aa-4d8b-8cfd-486633b5c90b" type="checkbox" ><label class="sk-toggleable__label" for="1cd299e8-79aa-4d8b-8cfd-486633b5c90b">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="225d1b66-2dcf-435f-9c4e-3a9eed52831a" type="checkbox" ><label class="sk-toggleable__label" for="225d1b66-2dcf-435f-9c4e-3a9eed52831a">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14c9cca2-5a69-453b-a0ce-418817e4a186" type="checkbox" ><label class="sk-toggleable__label" for="14c9cca2-5a69-453b-a0ce-418817e4a186">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45241937-34c8-4095-a811-4f5fe6f63db4" type="checkbox" ><label class="sk-toggleable__label" for="45241937-34c8-4095-a811-4f5fe6f63db4">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="520e6232-1dec-4771-afc7-5df9a525957e" type="checkbox" ><label class="sk-toggleable__label" for="520e6232-1dec-4771-afc7-5df9a525957e">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bf07568-614e-4235-9ae5-7264039a6c14" type="checkbox" ><label class="sk-toggleable__label" for="2bf07568-614e-4235-9ae5-7264039a6c14">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97608cf7-4073-4257-b4b1-37dc45d80907" type="checkbox" ><label class="sk-toggleable__label" for="97608cf7-4073-4257-b4b1-37dc45d80907">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84c3a917-4d78-403a-9ee2-dd2b63c4f08d" type="checkbox" ><label class="sk-toggleable__label" for="84c3a917-4d78-403a-9ee2-dd2b63c4f08d">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.144 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
