
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-45a53732-68f7-4bc6-9555-93107f846480 {color: black;background-color: white;}#sk-45a53732-68f7-4bc6-9555-93107f846480 pre{padding: 0;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-toggleable {background-color: white;}#sk-45a53732-68f7-4bc6-9555-93107f846480 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-45a53732-68f7-4bc6-9555-93107f846480 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-45a53732-68f7-4bc6-9555-93107f846480 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-estimator:hover {background-color: #d4ebff;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-item {z-index: 1;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-parallel-item:only-child::after {width: 0;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-container {display: inline-block;position: relative;}#sk-45a53732-68f7-4bc6-9555-93107f846480 div.sk-text-repr-fallback {display: none;}</style><div id="sk-45a53732-68f7-4bc6-9555-93107f846480" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4113c1c-6dea-4d2c-bded-2407cd089592" type="checkbox" ><label class="sk-toggleable__label" for="f4113c1c-6dea-4d2c-bded-2407cd089592">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0aa1ba9b-9fd0-4a78-9413-95a1d2e496aa" type="checkbox" ><label class="sk-toggleable__label" for="0aa1ba9b-9fd0-4a78-9413-95a1d2e496aa">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="746c2d86-26b8-4ea6-bf81-d83b5d9b1abf" type="checkbox" ><label class="sk-toggleable__label" for="746c2d86-26b8-4ea6-bf81-d83b5d9b1abf">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7738d283-eaa0-4efa-9554-09013955b6d7 {color: black;background-color: white;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 pre{padding: 0;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-toggleable {background-color: white;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-item {z-index: 1;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-parallel-item:only-child::after {width: 0;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-container {display: inline-block;position: relative;}#sk-7738d283-eaa0-4efa-9554-09013955b6d7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7738d283-eaa0-4efa-9554-09013955b6d7" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3f0a39d-3ee1-4222-a421-e9987c930df8" type="checkbox" ><label class="sk-toggleable__label" for="d3f0a39d-3ee1-4222-a421-e9987c930df8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b49efb54-3671-4378-b8ca-8ea4b131a0c1" type="checkbox" ><label class="sk-toggleable__label" for="b49efb54-3671-4378-b8ca-8ea4b131a0c1">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4fe9c83-4280-4eff-a3db-a059f0b70617" type="checkbox" ><label class="sk-toggleable__label" for="d4fe9c83-4280-4eff-a3db-a059f0b70617">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5e80567-5a00-4ff3-9599-574a9d61d6a2" type="checkbox" ><label class="sk-toggleable__label" for="d5e80567-5a00-4ff3-9599-574a9d61d6a2">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 {color: black;background-color: white;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 pre{padding: 0;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-toggleable {background-color: white;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-item {z-index: 1;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-parallel-item:only-child::after {width: 0;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-container {display: inline-block;position: relative;}#sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fe62f8bd-63d0-406e-a14b-5ef6acdae250" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="467de8d8-3c34-4a0a-9f54-d62d687ec29c" type="checkbox" ><label class="sk-toggleable__label" for="467de8d8-3c34-4a0a-9f54-d62d687ec29c">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c30fd97a-60a1-4d8d-a383-a406e11e74b6" type="checkbox" ><label class="sk-toggleable__label" for="c30fd97a-60a1-4d8d-a383-a406e11e74b6">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5353e5e-f792-4f90-b5a2-716fb74e78a3" type="checkbox" ><label class="sk-toggleable__label" for="e5353e5e-f792-4f90-b5a2-716fb74e78a3">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 {color: black;background-color: white;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 pre{padding: 0;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-toggleable {background-color: white;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-item {z-index: 1;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-parallel-item:only-child::after {width: 0;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-container {display: inline-block;position: relative;}#sk-a2c3e502-d876-4c59-aea2-f47e228e4b17 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a2c3e502-d876-4c59-aea2-f47e228e4b17" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2baf5af-4084-4d51-b4a3-2a01bd0abf08" type="checkbox" ><label class="sk-toggleable__label" for="e2baf5af-4084-4d51-b4a3-2a01bd0abf08">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca24fdd2-8689-4e86-8430-7a0d612662e4" type="checkbox" ><label class="sk-toggleable__label" for="ca24fdd2-8689-4e86-8430-7a0d612662e4">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5112e45b-499b-4db5-adb2-bb9eaee513f2" type="checkbox" ><label class="sk-toggleable__label" for="5112e45b-499b-4db5-adb2-bb9eaee513f2">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abb7d9d2-8aa2-444d-ab38-5d6f5040331a" type="checkbox" ><label class="sk-toggleable__label" for="abb7d9d2-8aa2-444d-ab38-5d6f5040331a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9412f393-140c-42f8-8feb-7754b5cf282c" type="checkbox" ><label class="sk-toggleable__label" for="9412f393-140c-42f8-8feb-7754b5cf282c">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f33fdec4-3a94-4aa1-bc11-0a3d2e51fddd" type="checkbox" ><label class="sk-toggleable__label" for="f33fdec4-3a94-4aa1-bc11-0a3d2e51fddd">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef780b13-f0e8-43d5-b46f-6f16c2956453" type="checkbox" ><label class="sk-toggleable__label" for="ef780b13-f0e8-43d5-b46f-6f16c2956453">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cf0d61f-6c67-4a36-aceb-714ae3a1bafa" type="checkbox" ><label class="sk-toggleable__label" for="0cf0d61f-6c67-4a36-aceb-714ae3a1bafa">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="256ecc2f-0952-41c5-8c85-efdfb46f01ad" type="checkbox" ><label class="sk-toggleable__label" for="256ecc2f-0952-41c5-8c85-efdfb46f01ad">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 {color: black;background-color: white;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 pre{padding: 0;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-toggleable {background-color: white;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-item {z-index: 1;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-parallel-item:only-child::after {width: 0;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-container {display: inline-block;position: relative;}#sk-29917818-5e5f-4a31-ba17-b4603d39b5c9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-29917818-5e5f-4a31-ba17-b4603d39b5c9" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8bdd8a8-f94c-4b68-81d3-b4b06a309dd4" type="checkbox" ><label class="sk-toggleable__label" for="c8bdd8a8-f94c-4b68-81d3-b4b06a309dd4">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e15364d-74f1-4861-943a-6887825eb3e4" type="checkbox" ><label class="sk-toggleable__label" for="2e15364d-74f1-4861-943a-6887825eb3e4">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e86e8c11-66d5-42a1-9289-f0a036ad9d75" type="checkbox" ><label class="sk-toggleable__label" for="e86e8c11-66d5-42a1-9289-f0a036ad9d75">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c504ef3-300f-4d4d-b9fc-3d88bb6f3604" type="checkbox" ><label class="sk-toggleable__label" for="2c504ef3-300f-4d4d-b9fc-3d88bb6f3604">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f295869e-d5a2-41f4-90a3-16a2e4b39c2b" type="checkbox" ><label class="sk-toggleable__label" for="f295869e-d5a2-41f4-90a3-16a2e4b39c2b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ead19f3-e34f-4c2f-ac57-98f2d65d95f6" type="checkbox" ><label class="sk-toggleable__label" for="8ead19f3-e34f-4c2f-ac57-98f2d65d95f6">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3f67a0a-6e8c-433d-a07a-a9985c49b6b6" type="checkbox" ><label class="sk-toggleable__label" for="b3f67a0a-6e8c-433d-a07a-a9985c49b6b6">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6bd338a-babc-473b-a669-acb4c76e3123" type="checkbox" ><label class="sk-toggleable__label" for="e6bd338a-babc-473b-a669-acb4c76e3123">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdbd9865-9613-4fb0-b44a-43047cd1d677" type="checkbox" ><label class="sk-toggleable__label" for="cdbd9865-9613-4fb0-b44a-43047cd1d677">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
