
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f {color: black;background-color: white;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f pre{padding: 0;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-toggleable {background-color: white;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-estimator:hover {background-color: #d4ebff;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-item {z-index: 1;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-parallel-item:only-child::after {width: 0;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f div.sk-text-repr-fallback {display: none;}</style><div id="sk-5fd8b440-5ce3-4c64-a41d-939f0274d92f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8453f1cd-ee13-4ed5-88ec-5a5df20e9515" type="checkbox" ><label for="8453f1cd-ee13-4ed5-88ec-5a5df20e9515" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="695da04c-50e9-4a61-bede-dbfa4925678b" type="checkbox" ><label for="695da04c-50e9-4a61-bede-dbfa4925678b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fc97795-0860-4d2a-a5a1-0a7eb4eff343" type="checkbox" ><label for="2fc97795-0860-4d2a-a5a1-0a7eb4eff343" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d {color: black;background-color: white;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d pre{padding: 0;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-toggleable {background-color: white;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-estimator:hover {background-color: #d4ebff;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-item {z-index: 1;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-parallel-item:only-child::after {width: 0;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d div.sk-text-repr-fallback {display: none;}</style><div id="sk-30dfb1e7-dca3-4584-9da8-55fcc83c736d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fa9d9fb-e28b-4a84-afa3-9b183886aaeb" type="checkbox" ><label for="4fa9d9fb-e28b-4a84-afa3-9b183886aaeb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a9089e1-c9bc-4fd7-b3f6-2983a0d63a67" type="checkbox" ><label for="2a9089e1-c9bc-4fd7-b3f6-2983a0d63a67" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b82de1f-3289-4cec-86b6-31c01ceb2c9d" type="checkbox" ><label for="1b82de1f-3289-4cec-86b6-31c01ceb2c9d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fd7168d-72c1-4012-9f05-95344489dd91" type="checkbox" ><label for="9fd7168d-72c1-4012-9f05-95344489dd91" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec {color: black;background-color: white;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec pre{padding: 0;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-toggleable {background-color: white;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-estimator:hover {background-color: #d4ebff;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-item {z-index: 1;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-parallel-item:only-child::after {width: 0;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec div.sk-text-repr-fallback {display: none;}</style><div id="sk-a6e75ed5-511e-4fb9-a0ba-64f2333634ec" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd15219c-4dbc-43c3-b33e-008a91f22f9e" type="checkbox" ><label for="fd15219c-4dbc-43c3-b33e-008a91f22f9e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac22a7ef-765f-4735-85e2-547d50d04c89" type="checkbox" ><label for="ac22a7ef-765f-4735-85e2-547d50d04c89" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c6c5230-0207-4e1a-95c0-127bba57cf62" type="checkbox" ><label for="0c6c5230-0207-4e1a-95c0-127bba57cf62" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d {color: black;background-color: white;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d pre{padding: 0;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-toggleable {background-color: white;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-estimator:hover {background-color: #d4ebff;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-item {z-index: 1;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-parallel-item:only-child::after {width: 0;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d div.sk-text-repr-fallback {display: none;}</style><div id="sk-dd7ffafa-1f3e-40c8-935c-c377399cac8d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c92f888-51ad-4288-b75b-7496e9403617" type="checkbox" ><label for="3c92f888-51ad-4288-b75b-7496e9403617" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c5f0851-f54b-43ae-90dd-88189b595aa4" type="checkbox" ><label for="6c5f0851-f54b-43ae-90dd-88189b595aa4" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="142caed5-67f9-4b54-816c-986dc5b5fd7b" type="checkbox" ><label for="142caed5-67f9-4b54-816c-986dc5b5fd7b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b21a4a3-13db-4be3-8e1b-555cc7ce808e" type="checkbox" ><label for="5b21a4a3-13db-4be3-8e1b-555cc7ce808e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85cfb65d-ca32-4cd7-a753-675fceb0fc78" type="checkbox" ><label for="85cfb65d-ca32-4cd7-a753-675fceb0fc78" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="144bb4e1-f897-46a0-a299-6486be400232" type="checkbox" ><label for="144bb4e1-f897-46a0-a299-6486be400232" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b3f334b-7541-49cb-8437-63245423a659" type="checkbox" ><label for="1b3f334b-7541-49cb-8437-63245423a659" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6771e9fb-c4ae-4957-8afb-bdeb6951cbb4" type="checkbox" ><label for="6771e9fb-c4ae-4957-8afb-bdeb6951cbb4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acbcc772-2327-474b-8c97-09453cfd6f7d" type="checkbox" ><label for="acbcc772-2327-474b-8c97-09453cfd6f7d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b {color: black;background-color: white;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b pre{padding: 0;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-toggleable {background-color: white;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-estimator:hover {background-color: #d4ebff;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-item {z-index: 1;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-parallel-item:only-child::after {width: 0;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e822387c-2476-4df0-b95f-22b0a9efeb8b div.sk-text-repr-fallback {display: none;}</style><div id="sk-e822387c-2476-4df0-b95f-22b0a9efeb8b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c326aa1-211f-4a24-b450-de8d5e1b16a6" type="checkbox" ><label for="9c326aa1-211f-4a24-b450-de8d5e1b16a6" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5c21ba1-a96b-431e-9047-aac40e610b25" type="checkbox" ><label for="a5c21ba1-a96b-431e-9047-aac40e610b25" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22d93e78-154a-46cc-a34d-aafc720d1ab5" type="checkbox" ><label for="22d93e78-154a-46cc-a34d-aafc720d1ab5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d910ba81-eee6-43b5-b546-eefdf58cc764" type="checkbox" ><label for="d910ba81-eee6-43b5-b546-eefdf58cc764" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acadf439-62a0-4279-a955-306db8dfd332" type="checkbox" ><label for="acadf439-62a0-4279-a955-306db8dfd332" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa2e3e11-34b7-4bdd-9b2f-fae02e39d816" type="checkbox" ><label for="fa2e3e11-34b7-4bdd-9b2f-fae02e39d816" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10f464ba-d509-473d-9a84-49579bec0192" type="checkbox" ><label for="10f464ba-d509-473d-9a84-49579bec0192" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5112809c-939b-47bd-8a03-6b667b906d9d" type="checkbox" ><label for="5112809c-939b-47bd-8a03-6b667b906d9d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8731a6ad-93d6-492e-930e-49b805498526" type="checkbox" ><label for="8731a6ad-93d6-492e-930e-49b805498526" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.102 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
