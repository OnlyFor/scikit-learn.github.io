
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b {color: black;background-color: white;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b pre{padding: 0;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-toggleable {background-color: white;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-estimator:hover {background-color: #d4ebff;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-item {z-index: 1;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-parallel-item:only-child::after {width: 0;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b div.sk-text-repr-fallback {display: none;}</style><div id="sk-35dc8a0b-4566-4b83-8d83-60afc9fab88b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c37cf446-e8c9-4980-b546-c8e21c1e75a2" type="checkbox" ><label for="c37cf446-e8c9-4980-b546-c8e21c1e75a2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48eebf2b-cfcb-4225-8a73-6dd495b5da0b" type="checkbox" ><label for="48eebf2b-cfcb-4225-8a73-6dd495b5da0b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41a8edb7-0365-45ec-830f-c66f8448bb60" type="checkbox" ><label for="41a8edb7-0365-45ec-830f-c66f8448bb60" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7195382f-7e7c-478e-bf66-4562c1589d5f {color: black;background-color: white;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f pre{padding: 0;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-toggleable {background-color: white;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-estimator:hover {background-color: #d4ebff;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-item {z-index: 1;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-parallel-item:only-child::after {width: 0;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7195382f-7e7c-478e-bf66-4562c1589d5f div.sk-text-repr-fallback {display: none;}</style><div id="sk-7195382f-7e7c-478e-bf66-4562c1589d5f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d56750b-4c7e-47c6-9004-4a20991563de" type="checkbox" ><label for="3d56750b-4c7e-47c6-9004-4a20991563de" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73de0a36-e6d2-40f7-be18-dbd61bc94fa3" type="checkbox" ><label for="73de0a36-e6d2-40f7-be18-dbd61bc94fa3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a23f024b-5459-4923-81f1-166bbfec6b6c" type="checkbox" ><label for="a23f024b-5459-4923-81f1-166bbfec6b6c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abd3ceb0-f2c5-4973-868f-6c7b09712acd" type="checkbox" ><label for="abd3ceb0-f2c5-4973-868f-6c7b09712acd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b {color: black;background-color: white;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b pre{padding: 0;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-toggleable {background-color: white;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-estimator:hover {background-color: #d4ebff;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-item {z-index: 1;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-parallel-item:only-child::after {width: 0;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b div.sk-text-repr-fallback {display: none;}</style><div id="sk-8d450963-62e3-4793-8a2a-0ac7b2611a9b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="669184e0-d1fa-4965-ab21-b18815328275" type="checkbox" ><label for="669184e0-d1fa-4965-ab21-b18815328275" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06f359e4-e588-42cb-930f-b399ef435801" type="checkbox" ><label for="06f359e4-e588-42cb-930f-b399ef435801" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81f2ec7c-559f-42bb-aa1f-87a011bde1bb" type="checkbox" ><label for="81f2ec7c-559f-42bb-aa1f-87a011bde1bb" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 {color: black;background-color: white;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 pre{padding: 0;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-toggleable {background-color: white;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-item {z-index: 1;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-parallel-item:only-child::after {width: 0;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-86e8d74b-d3a1-408a-9c95-2ea077be7ec0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b8757be-c494-4fb7-b068-d36922373020" type="checkbox" ><label for="6b8757be-c494-4fb7-b068-d36922373020" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a59a32c-c4d8-48f2-9538-3242a2fcbaec" type="checkbox" ><label for="4a59a32c-c4d8-48f2-9538-3242a2fcbaec" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d44b335c-2d14-4c1e-9d14-7f6047c9edf6" type="checkbox" ><label for="d44b335c-2d14-4c1e-9d14-7f6047c9edf6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e911512-c7f0-40e3-8afe-d10132e887a6" type="checkbox" ><label for="2e911512-c7f0-40e3-8afe-d10132e887a6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1538d16-3d19-497f-8799-7ab1a183798d" type="checkbox" ><label for="a1538d16-3d19-497f-8799-7ab1a183798d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="473ab9d6-8445-4eeb-871f-2209c71f1f3b" type="checkbox" ><label for="473ab9d6-8445-4eeb-871f-2209c71f1f3b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3f51cdd-1d5a-4765-ad2e-35613542c230" type="checkbox" ><label for="b3f51cdd-1d5a-4765-ad2e-35613542c230" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd1230df-40b7-4cc8-9bcb-97753910929a" type="checkbox" ><label for="fd1230df-40b7-4cc8-9bcb-97753910929a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d719e171-faca-4dd7-ad03-8f3625dc533c" type="checkbox" ><label for="d719e171-faca-4dd7-ad03-8f3625dc533c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-345d6612-1248-41aa-abd5-3e7da659c92e {color: black;background-color: white;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e pre{padding: 0;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-toggleable {background-color: white;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-estimator:hover {background-color: #d4ebff;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-item {z-index: 1;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-parallel-item:only-child::after {width: 0;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-345d6612-1248-41aa-abd5-3e7da659c92e div.sk-text-repr-fallback {display: none;}</style><div id="sk-345d6612-1248-41aa-abd5-3e7da659c92e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e301d08b-049c-4930-b729-4b0a7a4a95ec" type="checkbox" ><label for="e301d08b-049c-4930-b729-4b0a7a4a95ec" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="720752db-0821-4100-99f1-4c1fe91b2ae1" type="checkbox" ><label for="720752db-0821-4100-99f1-4c1fe91b2ae1" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18262f08-f4d0-414d-a2fc-fcf76b1c945e" type="checkbox" ><label for="18262f08-f4d0-414d-a2fc-fcf76b1c945e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20691924-b85d-4de8-a2fe-ab723011959f" type="checkbox" ><label for="20691924-b85d-4de8-a2fe-ab723011959f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8aa4cc62-72f7-4517-b5c6-0fdd3e9e60c5" type="checkbox" ><label for="8aa4cc62-72f7-4517-b5c6-0fdd3e9e60c5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74bfa51f-6b54-4432-a805-7a46df84cebb" type="checkbox" ><label for="74bfa51f-6b54-4432-a805-7a46df84cebb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f93014d-1df9-464d-8a91-47c6c5ff6c9b" type="checkbox" ><label for="4f93014d-1df9-464d-8a91-47c6c5ff6c9b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1d3ce7b-410f-4e39-a97d-1521d036e479" type="checkbox" ><label for="d1d3ce7b-410f-4e39-a97d-1521d036e479" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6ce14f2-00b1-4786-9091-06c3aac83045" type="checkbox" ><label for="d6ce14f2-00b1-4786-9091-06c3aac83045" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
