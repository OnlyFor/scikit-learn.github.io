
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ad94806c-f4d6-4097-b327-f893c2360dbf {color: black;background-color: white;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf pre{padding: 0;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-toggleable {background-color: white;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-estimator:hover {background-color: #d4ebff;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-item {z-index: 1;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-parallel-item:only-child::after {width: 0;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ad94806c-f4d6-4097-b327-f893c2360dbf div.sk-text-repr-fallback {display: none;}</style><div id="sk-ad94806c-f4d6-4097-b327-f893c2360dbf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0458812-7c6f-4034-be54-d1552fc42cc1" type="checkbox" ><label for="c0458812-7c6f-4034-be54-d1552fc42cc1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36910e5d-368d-4562-a236-a0417503b504" type="checkbox" ><label for="36910e5d-368d-4562-a236-a0417503b504" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fbe15f8-488a-4415-b9ec-b0297fd23731" type="checkbox" ><label for="1fbe15f8-488a-4415-b9ec-b0297fd23731" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-37ca9352-db65-4a00-b890-bb94f5b11cad {color: black;background-color: white;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad pre{padding: 0;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-toggleable {background-color: white;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-estimator:hover {background-color: #d4ebff;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-item {z-index: 1;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-parallel-item:only-child::after {width: 0;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-37ca9352-db65-4a00-b890-bb94f5b11cad div.sk-text-repr-fallback {display: none;}</style><div id="sk-37ca9352-db65-4a00-b890-bb94f5b11cad" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d9dc435-a42c-4b72-a97d-0cff1c983472" type="checkbox" ><label for="2d9dc435-a42c-4b72-a97d-0cff1c983472" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bd45bc4-eed8-458c-b784-252a1abb4fbd" type="checkbox" ><label for="2bd45bc4-eed8-458c-b784-252a1abb4fbd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="623be3bc-950e-476b-baf1-6865f986b31a" type="checkbox" ><label for="623be3bc-950e-476b-baf1-6865f986b31a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cab44ff-8a98-4ec0-92c4-e6b612c1791e" type="checkbox" ><label for="0cab44ff-8a98-4ec0-92c4-e6b612c1791e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f33565da-6f0a-4f80-b798-53acaefd857c {color: black;background-color: white;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c pre{padding: 0;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-toggleable {background-color: white;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-estimator:hover {background-color: #d4ebff;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-item {z-index: 1;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-parallel-item:only-child::after {width: 0;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f33565da-6f0a-4f80-b798-53acaefd857c div.sk-text-repr-fallback {display: none;}</style><div id="sk-f33565da-6f0a-4f80-b798-53acaefd857c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="723968a2-7b4a-4f2d-acd6-f1d6ea3ec35f" type="checkbox" ><label for="723968a2-7b4a-4f2d-acd6-f1d6ea3ec35f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="597f6ff7-7daa-422c-8a55-0e2ccd7f9816" type="checkbox" ><label for="597f6ff7-7daa-422c-8a55-0e2ccd7f9816" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11d1ec83-e389-41b9-b683-87f9aa84ccc3" type="checkbox" ><label for="11d1ec83-e389-41b9-b683-87f9aa84ccc3" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 {color: black;background-color: white;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 pre{padding: 0;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-toggleable {background-color: white;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-item {z-index: 1;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-parallel-item:only-child::after {width: 0;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fd0785f4-d62d-4fca-ac5b-200636f0d5e0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf3b6f5f-b9d6-439c-ba66-3d8cc95e0ce6" type="checkbox" ><label for="bf3b6f5f-b9d6-439c-ba66-3d8cc95e0ce6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5ac5d8f-9afb-4d8d-aea5-3f18a44583b9" type="checkbox" ><label for="d5ac5d8f-9afb-4d8d-aea5-3f18a44583b9" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b1d4e58-bc89-443c-90cb-f506ecdfd0ba" type="checkbox" ><label for="0b1d4e58-bc89-443c-90cb-f506ecdfd0ba" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6760edae-ede1-4903-a48e-e6930b599188" type="checkbox" ><label for="6760edae-ede1-4903-a48e-e6930b599188" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dff27951-a451-419f-a306-42c743c7c7fb" type="checkbox" ><label for="dff27951-a451-419f-a306-42c743c7c7fb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4adea92e-d557-4631-bbe3-2cc65dee7a8f" type="checkbox" ><label for="4adea92e-d557-4631-bbe3-2cc65dee7a8f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfb8c235-a90c-477d-89e2-25c1d76e86ea" type="checkbox" ><label for="cfb8c235-a90c-477d-89e2-25c1d76e86ea" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c612452-94be-4f0d-a134-0fc2c8a77173" type="checkbox" ><label for="0c612452-94be-4f0d-a134-0fc2c8a77173" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56437407-0eef-40f8-82f8-212b7a55243d" type="checkbox" ><label for="56437407-0eef-40f8-82f8-212b7a55243d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 {color: black;background-color: white;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 pre{padding: 0;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-toggleable {background-color: white;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-item {z-index: 1;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-parallel-item:only-child::after {width: 0;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ae6dc653-d346-41de-ad28-898c4f2f9a33 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ae6dc653-d346-41de-ad28-898c4f2f9a33" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc8f6383-b490-4926-b3cf-b256a0470610" type="checkbox" ><label for="fc8f6383-b490-4926-b3cf-b256a0470610" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="561ae7d3-a3d4-4e55-9724-856e11b9c5fa" type="checkbox" ><label for="561ae7d3-a3d4-4e55-9724-856e11b9c5fa" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c0abbf2-df37-4155-b174-b0b518f54f2a" type="checkbox" ><label for="9c0abbf2-df37-4155-b174-b0b518f54f2a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17183739-cdef-4df0-bbf2-86ba79065fa7" type="checkbox" ><label for="17183739-cdef-4df0-bbf2-86ba79065fa7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd17331f-c33a-4134-9a7a-d9b0addb2b1c" type="checkbox" ><label for="fd17331f-c33a-4134-9a7a-d9b0addb2b1c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e46db471-e116-4699-b96a-e1eb6204ceef" type="checkbox" ><label for="e46db471-e116-4699-b96a-e1eb6204ceef" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dbff4c1-8ea1-4f50-a916-33172d9a3183" type="checkbox" ><label for="0dbff4c1-8ea1-4f50-a916-33172d9a3183" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d94eb69d-d348-44ba-9c26-dc54937f6bda" type="checkbox" ><label for="d94eb69d-d348-44ba-9c26-dc54937f6bda" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c4d572d-8194-46f1-8b3d-452dd76da803" type="checkbox" ><label for="0c4d572d-8194-46f1-8b3d-452dd76da803" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
