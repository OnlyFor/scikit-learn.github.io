
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 {color: black;background-color: white;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 pre{padding: 0;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-toggleable {background-color: white;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-item {z-index: 1;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-parallel-item:only-child::after {width: 0;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fcbd610d-6909-4be4-bfd3-f5e4abc26ef3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a28476bb-7140-4b3e-bfe5-c9de8fb9a225" type="checkbox" ><label for="a28476bb-7140-4b3e-bfe5-c9de8fb9a225" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbf2b0fd-ac91-43f1-94c0-9e106f063245" type="checkbox" ><label for="cbf2b0fd-ac91-43f1-94c0-9e106f063245" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad42bb18-b4c0-4b42-b0e1-e5b57d27efb4" type="checkbox" ><label for="ad42bb18-b4c0-4b42-b0e1-e5b57d27efb4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e {color: black;background-color: white;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e pre{padding: 0;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-toggleable {background-color: white;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-estimator:hover {background-color: #d4ebff;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-item {z-index: 1;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-parallel-item:only-child::after {width: 0;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e div.sk-text-repr-fallback {display: none;}</style><div id="sk-5b60157b-4c36-4013-87f2-f1b16dbc0a6e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80268813-33d4-4f4e-a413-634c5d466259" type="checkbox" ><label for="80268813-33d4-4f4e-a413-634c5d466259" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b0a6c09-c01b-4f36-b52c-be8449be104f" type="checkbox" ><label for="2b0a6c09-c01b-4f36-b52c-be8449be104f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="231a7740-5ddd-4c36-8987-39310766d325" type="checkbox" ><label for="231a7740-5ddd-4c36-8987-39310766d325" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6da72ea8-2c89-4c78-bbb9-b922630d3f3c" type="checkbox" ><label for="6da72ea8-2c89-4c78-bbb9-b922630d3f3c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 {color: black;background-color: white;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 pre{padding: 0;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-toggleable {background-color: white;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-estimator:hover {background-color: #d4ebff;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-item {z-index: 1;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-parallel-item:only-child::after {width: 0;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-970a5c6d-abe6-42c6-806f-329a7c7f4023 div.sk-text-repr-fallback {display: none;}</style><div id="sk-970a5c6d-abe6-42c6-806f-329a7c7f4023" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b9a0031-9625-4742-bfef-797b1961dd07" type="checkbox" ><label for="1b9a0031-9625-4742-bfef-797b1961dd07" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de999a81-8667-497c-a2bb-1e938a483a28" type="checkbox" ><label for="de999a81-8667-497c-a2bb-1e938a483a28" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc0fb1eb-9a6a-4d52-9929-da0d4eff0e53" type="checkbox" ><label for="dc0fb1eb-9a6a-4d52-9929-da0d4eff0e53" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 {color: black;background-color: white;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 pre{padding: 0;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-toggleable {background-color: white;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-item {z-index: 1;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-parallel-item:only-child::after {width: 0;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2e6390f1-dfc5-4ed0-a3b7-4cdd6e6cf3f6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd228fc3-1e0e-421f-93f6-a3388f7a7b14" type="checkbox" ><label for="dd228fc3-1e0e-421f-93f6-a3388f7a7b14" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83c45f7b-5647-4968-9c0d-cd542e640935" type="checkbox" ><label for="83c45f7b-5647-4968-9c0d-cd542e640935" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8239152-2bc2-479e-ba93-2d4e812ceb89" type="checkbox" ><label for="d8239152-2bc2-479e-ba93-2d4e812ceb89" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cbeb9a2-7935-4ad2-b424-9bfc189ba082" type="checkbox" ><label for="9cbeb9a2-7935-4ad2-b424-9bfc189ba082" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14c838f8-5a8c-4936-a5d4-067e71a74f45" type="checkbox" ><label for="14c838f8-5a8c-4936-a5d4-067e71a74f45" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73e4ec4d-b0af-4207-901e-c0770e358a65" type="checkbox" ><label for="73e4ec4d-b0af-4207-901e-c0770e358a65" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a439d07-4a8c-44f4-b13b-1b95acf9744c" type="checkbox" ><label for="6a439d07-4a8c-44f4-b13b-1b95acf9744c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="160e80f1-7233-480e-91d2-886d0e781915" type="checkbox" ><label for="160e80f1-7233-480e-91d2-886d0e781915" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3895f0e2-fe45-4b7b-823d-33964ed10281" type="checkbox" ><label for="3895f0e2-fe45-4b7b-823d-33964ed10281" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca {color: black;background-color: white;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca pre{padding: 0;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-toggleable {background-color: white;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-estimator:hover {background-color: #d4ebff;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-item {z-index: 1;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-parallel-item:only-child::after {width: 0;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca div.sk-text-repr-fallback {display: none;}</style><div id="sk-7c8d11ad-c2ea-4c0f-aa74-5693fd77fbca" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32668e2b-6634-4b16-897f-985eeaea45b9" type="checkbox" ><label for="32668e2b-6634-4b16-897f-985eeaea45b9" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3965589c-68c4-4854-ba10-6fa830d246fb" type="checkbox" ><label for="3965589c-68c4-4854-ba10-6fa830d246fb" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3eaeadb-0d53-4b05-b3c0-82112c4494fc" type="checkbox" ><label for="c3eaeadb-0d53-4b05-b3c0-82112c4494fc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e8870da-8067-4dd0-a37d-36ec6345259e" type="checkbox" ><label for="7e8870da-8067-4dd0-a37d-36ec6345259e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b68eddc0-dc74-4aee-b9e1-3ca020a80fe0" type="checkbox" ><label for="b68eddc0-dc74-4aee-b9e1-3ca020a80fe0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee518c82-ac3d-4d8a-9b1a-5b4359ebb8cd" type="checkbox" ><label for="ee518c82-ac3d-4d8a-9b1a-5b4359ebb8cd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="322b3be9-589b-4fe1-aaf2-796314beca23" type="checkbox" ><label for="322b3be9-589b-4fe1-aaf2-796314beca23" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f178c48-f87e-43d6-b2f2-bcf3876550cf" type="checkbox" ><label for="2f178c48-f87e-43d6-b2f2-bcf3876550cf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="418796c9-5434-4f51-b46c-7c44ec4bfa68" type="checkbox" ><label for="418796c9-5434-4f51-b46c-7c44ec4bfa68" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
