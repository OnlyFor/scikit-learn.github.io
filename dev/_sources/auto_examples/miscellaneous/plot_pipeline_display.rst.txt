
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-16264ad4-e7c1-456e-9f10-db19f4383031 {color: black;background-color: white;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 pre{padding: 0;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-toggleable {background-color: white;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-estimator:hover {background-color: #d4ebff;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-item {z-index: 1;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-parallel-item:only-child::after {width: 0;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-16264ad4-e7c1-456e-9f10-db19f4383031 div.sk-text-repr-fallback {display: none;}</style><div id="sk-16264ad4-e7c1-456e-9f10-db19f4383031" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65f063a6-dd6f-466b-a1f5-54a1b1ddc471" type="checkbox" ><label for="65f063a6-dd6f-466b-a1f5-54a1b1ddc471" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6051f1f-833f-4712-a59c-cd59a9b6b092" type="checkbox" ><label for="e6051f1f-833f-4712-a59c-cd59a9b6b092" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01e23f7b-344e-4b9e-bf8d-7ce3d859a25d" type="checkbox" ><label for="01e23f7b-344e-4b9e-bf8d-7ce3d859a25d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-11da2434-375b-4499-a3aa-4fce403d3dca {color: black;background-color: white;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca pre{padding: 0;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-toggleable {background-color: white;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-estimator:hover {background-color: #d4ebff;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-item {z-index: 1;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-parallel-item:only-child::after {width: 0;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-11da2434-375b-4499-a3aa-4fce403d3dca div.sk-text-repr-fallback {display: none;}</style><div id="sk-11da2434-375b-4499-a3aa-4fce403d3dca" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97c4e333-5a8c-4863-86e1-7c356a68f00c" type="checkbox" ><label for="97c4e333-5a8c-4863-86e1-7c356a68f00c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bca15be-a4b5-4426-8eeb-bbcec0381d5d" type="checkbox" ><label for="5bca15be-a4b5-4426-8eeb-bbcec0381d5d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be8e9927-cdda-42a1-b018-8474fa4b350b" type="checkbox" ><label for="be8e9927-cdda-42a1-b018-8474fa4b350b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78e7c884-258d-43c4-8f08-dc5a0792e705" type="checkbox" ><label for="78e7c884-258d-43c4-8f08-dc5a0792e705" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e {color: black;background-color: white;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e pre{padding: 0;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-toggleable {background-color: white;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-estimator:hover {background-color: #d4ebff;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-item {z-index: 1;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-parallel-item:only-child::after {width: 0;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e div.sk-text-repr-fallback {display: none;}</style><div id="sk-d38a5a38-9f0d-433d-9f47-3bee8afc542e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a06dc6e-5623-492b-8e14-f87dae9dd9c8" type="checkbox" ><label for="9a06dc6e-5623-492b-8e14-f87dae9dd9c8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e91d62c3-67dd-4d06-8424-8b7eb4b553ce" type="checkbox" ><label for="e91d62c3-67dd-4d06-8424-8b7eb4b553ce" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50f15d23-1111-48c7-ae23-3b48a2e100a5" type="checkbox" ><label for="50f15d23-1111-48c7-ae23-3b48a2e100a5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb {color: black;background-color: white;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb pre{padding: 0;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-toggleable {background-color: white;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-estimator:hover {background-color: #d4ebff;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-item {z-index: 1;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-parallel-item:only-child::after {width: 0;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb div.sk-text-repr-fallback {display: none;}</style><div id="sk-f75efeed-d0a3-4f49-8ad7-6c1098244cbb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2431791f-b40b-4a9e-82f6-57d4361e4ecc" type="checkbox" ><label for="2431791f-b40b-4a9e-82f6-57d4361e4ecc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5afdeba4-f83b-4041-bfb2-596686ea78c3" type="checkbox" ><label for="5afdeba4-f83b-4041-bfb2-596686ea78c3" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58a73059-5419-4a74-98b6-1c251ddff9b2" type="checkbox" ><label for="58a73059-5419-4a74-98b6-1c251ddff9b2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="589159f3-088b-480f-be6e-79919bf0ff3c" type="checkbox" ><label for="589159f3-088b-480f-be6e-79919bf0ff3c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b99acbf-3bcc-4645-a1f0-b0ab945c5c7a" type="checkbox" ><label for="8b99acbf-3bcc-4645-a1f0-b0ab945c5c7a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5ed95f4-c4cf-467c-9ab0-471562835b2e" type="checkbox" ><label for="e5ed95f4-c4cf-467c-9ab0-471562835b2e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ad93609-14fa-4d8f-8a5e-e714f0c18b4e" type="checkbox" ><label for="2ad93609-14fa-4d8f-8a5e-e714f0c18b4e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d97011f6-8ba2-4982-a469-6881cee3ac29" type="checkbox" ><label for="d97011f6-8ba2-4982-a469-6881cee3ac29" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="adab3e3b-ab28-4332-945c-0d747357a6ba" type="checkbox" ><label for="adab3e3b-ab28-4332-945c-0d747357a6ba" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b8cd9483-5402-465c-9d6d-50c835480d6e {color: black;background-color: white;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e pre{padding: 0;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-toggleable {background-color: white;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-estimator:hover {background-color: #d4ebff;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-item {z-index: 1;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-parallel-item:only-child::after {width: 0;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b8cd9483-5402-465c-9d6d-50c835480d6e div.sk-text-repr-fallback {display: none;}</style><div id="sk-b8cd9483-5402-465c-9d6d-50c835480d6e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57343488-9fa6-478d-a7e7-52cdadc216f2" type="checkbox" ><label for="57343488-9fa6-478d-a7e7-52cdadc216f2" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6003ad06-07f6-4c58-994f-a438db633f38" type="checkbox" ><label for="6003ad06-07f6-4c58-994f-a438db633f38" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdd0d9de-2a53-4310-ac52-4035cf539c20" type="checkbox" ><label for="fdd0d9de-2a53-4310-ac52-4035cf539c20" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63d5b10b-3c7a-4ffb-9341-7aa7b1e37f88" type="checkbox" ><label for="63d5b10b-3c7a-4ffb-9341-7aa7b1e37f88" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8487c288-d563-49b3-9be3-753b8d2d1b53" type="checkbox" ><label for="8487c288-d563-49b3-9be3-753b8d2d1b53" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ece308ca-7a0d-46c7-a1ec-5c28886b4809" type="checkbox" ><label for="ece308ca-7a0d-46c7-a1ec-5c28886b4809" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e154d35e-d021-47ac-acc1-8d7fd20f4d0d" type="checkbox" ><label for="e154d35e-d021-47ac-acc1-8d7fd20f4d0d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="412dd807-524b-4c75-a4b8-7df6c0213700" type="checkbox" ><label for="412dd807-524b-4c75-a4b8-7df6c0213700" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbddccb1-ac4e-454e-84d0-14eac6ca0bcd" type="checkbox" ><label for="dbddccb1-ac4e-454e-84d0-14eac6ca0bcd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b73b0c0-ff54-432d-9ac4-fb686fdbaee9" type="checkbox" ><label for="4b73b0c0-ff54-432d-9ac4-fb686fdbaee9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.097 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
