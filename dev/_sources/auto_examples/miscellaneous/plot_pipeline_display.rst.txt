
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 {color: black;background-color: white;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 pre{padding: 0;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-toggleable {background-color: white;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-item {z-index: 1;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-parallel-item:only-child::after {width: 0;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ff842b36-41e0-4c10-9cbd-798b7d346e35 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ff842b36-41e0-4c10-9cbd-798b7d346e35" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3a66ea2-5c1a-4a4e-bf56-6e49c99113b5" type="checkbox" ><label for="a3a66ea2-5c1a-4a4e-bf56-6e49c99113b5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da967610-ca6a-47ce-acbd-2520c1e1210d" type="checkbox" ><label for="da967610-ca6a-47ce-acbd-2520c1e1210d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ae50409-702a-45dd-8793-5179be2ead90" type="checkbox" ><label for="6ae50409-702a-45dd-8793-5179be2ead90" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 {color: black;background-color: white;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 pre{padding: 0;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-toggleable {background-color: white;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-item {z-index: 1;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-parallel-item:only-child::after {width: 0;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7f18b663-1473-407f-b2c9-cc2a64bd34e6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="694e8f58-f85c-4682-a816-9ab5d8d7f9e3" type="checkbox" ><label for="694e8f58-f85c-4682-a816-9ab5d8d7f9e3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="348df8ce-7359-4c49-8e70-231957d2900d" type="checkbox" ><label for="348df8ce-7359-4c49-8e70-231957d2900d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b98560fc-2242-4d28-954b-9aa05ec6a0d0" type="checkbox" ><label for="b98560fc-2242-4d28-954b-9aa05ec6a0d0" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73c0fab1-543c-4c2c-90ba-ad7f172aa874" type="checkbox" ><label for="73c0fab1-543c-4c2c-90ba-ad7f172aa874" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f {color: black;background-color: white;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f pre{padding: 0;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-toggleable {background-color: white;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-estimator:hover {background-color: #d4ebff;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-item {z-index: 1;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-parallel-item:only-child::after {width: 0;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f div.sk-text-repr-fallback {display: none;}</style><div id="sk-242d208b-cb60-4e2f-81e1-2d6e284c4a8f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40729e8e-3f9e-4623-8e1b-2bb50ac18311" type="checkbox" ><label for="40729e8e-3f9e-4623-8e1b-2bb50ac18311" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e1c55d4-6731-4b19-9bd0-5b268e86ac0d" type="checkbox" ><label for="6e1c55d4-6731-4b19-9bd0-5b268e86ac0d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="552df513-69dd-4913-a547-d6c977d6e541" type="checkbox" ><label for="552df513-69dd-4913-a547-d6c977d6e541" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d011ec86-dbb9-44e8-ad27-753094c583ae {color: black;background-color: white;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae pre{padding: 0;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-toggleable {background-color: white;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-estimator:hover {background-color: #d4ebff;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-item {z-index: 1;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-parallel-item:only-child::after {width: 0;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d011ec86-dbb9-44e8-ad27-753094c583ae div.sk-text-repr-fallback {display: none;}</style><div id="sk-d011ec86-dbb9-44e8-ad27-753094c583ae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67081a64-687e-4d06-9d87-16fed90ba245" type="checkbox" ><label for="67081a64-687e-4d06-9d87-16fed90ba245" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f093791-e018-409e-90b8-5fe3db4668df" type="checkbox" ><label for="3f093791-e018-409e-90b8-5fe3db4668df" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f90e2971-02cd-4330-807e-5f3e03fd9024" type="checkbox" ><label for="f90e2971-02cd-4330-807e-5f3e03fd9024" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de9f1faf-f579-4b68-96d5-0c6d22146aec" type="checkbox" ><label for="de9f1faf-f579-4b68-96d5-0c6d22146aec" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="117ddd2e-f33d-4154-9f4d-5f50ccdc8f68" type="checkbox" ><label for="117ddd2e-f33d-4154-9f4d-5f50ccdc8f68" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7c1f0a1-eb5a-4f5b-a45b-0c74f73bca7c" type="checkbox" ><label for="d7c1f0a1-eb5a-4f5b-a45b-0c74f73bca7c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b9f09bf-c3a7-45f5-b4a9-3146531690ae" type="checkbox" ><label for="4b9f09bf-c3a7-45f5-b4a9-3146531690ae" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abbd2c51-11f2-4984-a52d-8e3b22696092" type="checkbox" ><label for="abbd2c51-11f2-4984-a52d-8e3b22696092" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5507f56c-ff2d-434a-9af8-9bcb293c5f26" type="checkbox" ><label for="5507f56c-ff2d-434a-9af8-9bcb293c5f26" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 {color: black;background-color: white;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 pre{padding: 0;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-toggleable {background-color: white;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-item {z-index: 1;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-parallel-item:only-child::after {width: 0;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-321a8d42-852b-46f8-a4cd-9def52ff92e7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-321a8d42-852b-46f8-a4cd-9def52ff92e7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d0cfc65-c562-4221-bf85-1da8ab548fad" type="checkbox" ><label for="4d0cfc65-c562-4221-bf85-1da8ab548fad" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9596ee9-f267-4754-bd9e-ba8b48ed7adc" type="checkbox" ><label for="b9596ee9-f267-4754-bd9e-ba8b48ed7adc" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3175f0dc-d73c-431d-9199-ddf99ff17b4a" type="checkbox" ><label for="3175f0dc-d73c-431d-9199-ddf99ff17b4a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c3c2457-aa56-4ecf-b1ac-f2532230567d" type="checkbox" ><label for="9c3c2457-aa56-4ecf-b1ac-f2532230567d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe2c461b-b419-422f-80d6-d532f6bc202d" type="checkbox" ><label for="fe2c461b-b419-422f-80d6-d532f6bc202d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f83c2fac-ef40-482a-b4b1-5f9e69553e64" type="checkbox" ><label for="f83c2fac-ef40-482a-b4b1-5f9e69553e64" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d609dd70-f258-47ff-a658-3133baeca6b3" type="checkbox" ><label for="d609dd70-f258-47ff-a658-3133baeca6b3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4067c4f-074b-4336-b304-60a3c8fd9a28" type="checkbox" ><label for="a4067c4f-074b-4336-b304-60a3c8fd9a28" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52bad13b-6ca9-4eeb-b8af-7b3b055b3757" type="checkbox" ><label for="52bad13b-6ca9-4eeb-b8af-7b3b055b3757" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
