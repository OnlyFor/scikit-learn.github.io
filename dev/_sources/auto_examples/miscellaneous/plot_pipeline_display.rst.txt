
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 {color: black;background-color: white;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 pre{padding: 0;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-toggleable {background-color: white;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-item {z-index: 1;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-parallel-item:only-child::after {width: 0;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5c140ecf-bae0-402a-8497-bd239701bcf6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5c140ecf-bae0-402a-8497-bd239701bcf6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a4ed8ae-9d73-4e6d-8ce9-9b42bc153b4b" type="checkbox" ><label for="8a4ed8ae-9d73-4e6d-8ce9-9b42bc153b4b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="060be3a9-b193-44c5-8dcf-a014c521063a" type="checkbox" ><label for="060be3a9-b193-44c5-8dcf-a014c521063a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a9c388f-efeb-45cb-90a2-5237fcbeb8a7" type="checkbox" ><label for="1a9c388f-efeb-45cb-90a2-5237fcbeb8a7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 {color: black;background-color: white;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 pre{padding: 0;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-toggleable {background-color: white;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-item {z-index: 1;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-parallel-item:only-child::after {width: 0;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0fad9d20-7758-4ddf-b0d5-a6c075e331c8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f3c5b4e-325c-45df-bd9b-2bc56d938131" type="checkbox" ><label for="1f3c5b4e-325c-45df-bd9b-2bc56d938131" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd9d8ede-6860-406f-b3c0-b051be986725" type="checkbox" ><label for="cd9d8ede-6860-406f-b3c0-b051be986725" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d83173f-e184-4ea7-a0f3-1cf958e03e15" type="checkbox" ><label for="2d83173f-e184-4ea7-a0f3-1cf958e03e15" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a01dc2bd-c279-4f09-a781-43773d179f4a" type="checkbox" ><label for="a01dc2bd-c279-4f09-a781-43773d179f4a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-75787693-2c0a-4b73-8166-10317897c0c0 {color: black;background-color: white;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 pre{padding: 0;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-toggleable {background-color: white;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-item {z-index: 1;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-parallel-item:only-child::after {width: 0;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-75787693-2c0a-4b73-8166-10317897c0c0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-75787693-2c0a-4b73-8166-10317897c0c0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2656eb0-08df-4ff0-ab3b-1fb7006321aa" type="checkbox" ><label for="f2656eb0-08df-4ff0-ab3b-1fb7006321aa" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7508a0c4-7f04-454e-8558-e29cf332f8e8" type="checkbox" ><label for="7508a0c4-7f04-454e-8558-e29cf332f8e8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e977726-19b3-4c4f-a0c7-bb6e1d8c4c7d" type="checkbox" ><label for="1e977726-19b3-4c4f-a0c7-bb6e1d8c4c7d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 {color: black;background-color: white;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 pre{padding: 0;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-toggleable {background-color: white;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-item {z-index: 1;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-parallel-item:only-child::after {width: 0;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b0538fa6-08e1-4634-a88b-a1fd7f3b08e3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4077155-ee34-4c71-9ef1-515b32b26598" type="checkbox" ><label for="d4077155-ee34-4c71-9ef1-515b32b26598" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c67e2225-0506-46d9-9cb6-4204456a36fe" type="checkbox" ><label for="c67e2225-0506-46d9-9cb6-4204456a36fe" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f214bf9a-c9a8-4c6e-a38d-6bc44abf3455" type="checkbox" ><label for="f214bf9a-c9a8-4c6e-a38d-6bc44abf3455" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4f6f229-12f2-4f88-a63f-312825e4b12f" type="checkbox" ><label for="c4f6f229-12f2-4f88-a63f-312825e4b12f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96f34c3c-d24d-4ed1-a5f8-2e67a4f05328" type="checkbox" ><label for="96f34c3c-d24d-4ed1-a5f8-2e67a4f05328" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de1a19d3-016c-49e1-9c05-2bdf4ae69a29" type="checkbox" ><label for="de1a19d3-016c-49e1-9c05-2bdf4ae69a29" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b98fa59-dd83-4ddb-8c0d-73abe99ed1e5" type="checkbox" ><label for="9b98fa59-dd83-4ddb-8c0d-73abe99ed1e5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1edf801a-8581-452e-a30f-2f96ae7aa82e" type="checkbox" ><label for="1edf801a-8581-452e-a30f-2f96ae7aa82e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1eef7a99-87e8-4814-89ec-9f305e237b80" type="checkbox" ><label for="1eef7a99-87e8-4814-89ec-9f305e237b80" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0323d984-5d85-4930-8b40-4666d990121a {color: black;background-color: white;}#sk-0323d984-5d85-4930-8b40-4666d990121a pre{padding: 0;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-toggleable {background-color: white;}#sk-0323d984-5d85-4930-8b40-4666d990121a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0323d984-5d85-4930-8b40-4666d990121a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0323d984-5d85-4930-8b40-4666d990121a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0323d984-5d85-4930-8b40-4666d990121a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0323d984-5d85-4930-8b40-4666d990121a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0323d984-5d85-4930-8b40-4666d990121a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-estimator:hover {background-color: #d4ebff;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-item {z-index: 1;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-parallel-item:only-child::after {width: 0;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0323d984-5d85-4930-8b40-4666d990121a div.sk-text-repr-fallback {display: none;}</style><div id="sk-0323d984-5d85-4930-8b40-4666d990121a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13a3b155-1bfb-4efb-82fc-d0d02db7e0df" type="checkbox" ><label for="13a3b155-1bfb-4efb-82fc-d0d02db7e0df" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9efab832-eed4-4e7f-9b8d-c8aa2f581387" type="checkbox" ><label for="9efab832-eed4-4e7f-9b8d-c8aa2f581387" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="adceeaa1-627c-454b-a3be-419d268f7dd2" type="checkbox" ><label for="adceeaa1-627c-454b-a3be-419d268f7dd2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16b3fb88-01d1-4330-a525-32296cebcbbf" type="checkbox" ><label for="16b3fb88-01d1-4330-a525-32296cebcbbf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46eab500-4464-4f81-ad2c-0ffd5a81efb8" type="checkbox" ><label for="46eab500-4464-4f81-ad2c-0ffd5a81efb8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c329218b-431d-41a7-984b-01041323b01d" type="checkbox" ><label for="c329218b-431d-41a7-984b-01041323b01d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f94e9dfd-72f4-42be-8679-58695edcbafe" type="checkbox" ><label for="f94e9dfd-72f4-42be-8679-58695edcbafe" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="565d5eb3-e90c-492f-84d6-409dc5647a25" type="checkbox" ><label for="565d5eb3-e90c-492f-84d6-409dc5647a25" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47d59b96-5f5e-4e30-af0a-0b33089f4237" type="checkbox" ><label for="47d59b96-5f5e-4e30-af0a-0b33089f4237" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
