
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b3554529-60bf-4048-9485-426fddb03252 {color: black;background-color: white;}#sk-b3554529-60bf-4048-9485-426fddb03252 pre{padding: 0;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-toggleable {background-color: white;}#sk-b3554529-60bf-4048-9485-426fddb03252 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b3554529-60bf-4048-9485-426fddb03252 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3554529-60bf-4048-9485-426fddb03252 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-item {z-index: 1;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-parallel-item:only-child::after {width: 0;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-container {display: inline-block;position: relative;}#sk-b3554529-60bf-4048-9485-426fddb03252 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b3554529-60bf-4048-9485-426fddb03252" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29058358-169e-4b0f-9ef7-50613dec4b83" type="checkbox" ><label class="sk-toggleable__label" for="29058358-169e-4b0f-9ef7-50613dec4b83">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="010ab3ff-2656-40b6-ae23-b1f08fdba13a" type="checkbox" ><label class="sk-toggleable__label" for="010ab3ff-2656-40b6-ae23-b1f08fdba13a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3a3c08c-d578-4366-91c4-185af168e85e" type="checkbox" ><label class="sk-toggleable__label" for="d3a3c08c-d578-4366-91c4-185af168e85e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-38291109-b2fa-4b9d-aa67-364fc26818ce {color: black;background-color: white;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce pre{padding: 0;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-toggleable {background-color: white;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-estimator:hover {background-color: #d4ebff;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-item {z-index: 1;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-parallel-item:only-child::after {width: 0;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-container {display: inline-block;position: relative;}#sk-38291109-b2fa-4b9d-aa67-364fc26818ce div.sk-text-repr-fallback {display: none;}</style><div id="sk-38291109-b2fa-4b9d-aa67-364fc26818ce" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="012fabf1-9cff-4e3f-990d-b18eef3e97f9" type="checkbox" ><label class="sk-toggleable__label" for="012fabf1-9cff-4e3f-990d-b18eef3e97f9">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92a96d55-d2a5-4e06-9638-1d566bb0f01c" type="checkbox" ><label class="sk-toggleable__label" for="92a96d55-d2a5-4e06-9638-1d566bb0f01c">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbbb8c2a-f2fd-47c5-8df7-c53e67a2d794" type="checkbox" ><label class="sk-toggleable__label" for="cbbb8c2a-f2fd-47c5-8df7-c53e67a2d794">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eda730a4-e7cf-465f-a68f-67abf2c12a89" type="checkbox" ><label class="sk-toggleable__label" for="eda730a4-e7cf-465f-a68f-67abf2c12a89">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 {color: black;background-color: white;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 pre{padding: 0;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-toggleable {background-color: white;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-item {z-index: 1;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-parallel-item:only-child::after {width: 0;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-container {display: inline-block;position: relative;}#sk-a9cd540a-6297-4561-aabc-39f87ee72ba9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a9cd540a-6297-4561-aabc-39f87ee72ba9" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b340f5c-a455-418a-8365-b69f2017d46f" type="checkbox" ><label class="sk-toggleable__label" for="0b340f5c-a455-418a-8365-b69f2017d46f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26b4b3f9-5724-4920-892f-3479c16ebf60" type="checkbox" ><label class="sk-toggleable__label" for="26b4b3f9-5724-4920-892f-3479c16ebf60">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf84d323-9a8d-4bdc-b2da-638801182144" type="checkbox" ><label class="sk-toggleable__label" for="bf84d323-9a8d-4bdc-b2da-638801182144">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 {color: black;background-color: white;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 pre{padding: 0;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-toggleable {background-color: white;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-item {z-index: 1;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-parallel-item:only-child::after {width: 0;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-container {display: inline-block;position: relative;}#sk-14c3380c-17aa-40c7-8ead-940f46ebccf1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-14c3380c-17aa-40c7-8ead-940f46ebccf1" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="578cf76f-08b4-4aa2-9dcc-dfc5df5f8c19" type="checkbox" ><label class="sk-toggleable__label" for="578cf76f-08b4-4aa2-9dcc-dfc5df5f8c19">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="269ca62d-7518-49dd-957e-ca5a8c7eb4b7" type="checkbox" ><label class="sk-toggleable__label" for="269ca62d-7518-49dd-957e-ca5a8c7eb4b7">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f2d1ef4-9322-4526-8860-d718603c087b" type="checkbox" ><label class="sk-toggleable__label" for="5f2d1ef4-9322-4526-8860-d718603c087b">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30901c2f-c65b-4734-a7f1-1f645ed22487" type="checkbox" ><label class="sk-toggleable__label" for="30901c2f-c65b-4734-a7f1-1f645ed22487">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51dd9663-6605-4e3e-b1c7-7e03ba6f8c83" type="checkbox" ><label class="sk-toggleable__label" for="51dd9663-6605-4e3e-b1c7-7e03ba6f8c83">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb2c0eb0-07a7-4402-a554-b1959221ebaa" type="checkbox" ><label class="sk-toggleable__label" for="eb2c0eb0-07a7-4402-a554-b1959221ebaa">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f018d494-1aab-45fb-b5c5-d709046f4371" type="checkbox" ><label class="sk-toggleable__label" for="f018d494-1aab-45fb-b5c5-d709046f4371">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b160e485-3e6f-4dd0-917d-252d9b97ecfc" type="checkbox" ><label class="sk-toggleable__label" for="b160e485-3e6f-4dd0-917d-252d9b97ecfc">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de7233a9-c47e-4bf2-b009-90c446902e34" type="checkbox" ><label class="sk-toggleable__label" for="de7233a9-c47e-4bf2-b009-90c446902e34">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 {color: black;background-color: white;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 pre{padding: 0;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-toggleable {background-color: white;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-item {z-index: 1;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-parallel-item:only-child::after {width: 0;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-container {display: inline-block;position: relative;}#sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7db07efa-ec1b-462b-83d9-15d0c4f38c58" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41441c8c-8eff-4da9-b305-c82cc73cb394" type="checkbox" ><label class="sk-toggleable__label" for="41441c8c-8eff-4da9-b305-c82cc73cb394">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c9fad4a-422f-48a9-8a94-be81f4f146eb" type="checkbox" ><label class="sk-toggleable__label" for="5c9fad4a-422f-48a9-8a94-be81f4f146eb">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b6fe22a-dff0-45a7-b319-ab6b377d35b0" type="checkbox" ><label class="sk-toggleable__label" for="3b6fe22a-dff0-45a7-b319-ab6b377d35b0">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58cfeedd-ff09-4fc6-9e0d-6e1886ce2ce0" type="checkbox" ><label class="sk-toggleable__label" for="58cfeedd-ff09-4fc6-9e0d-6e1886ce2ce0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8999367-9240-40e5-93f5-8b766868b7a1" type="checkbox" ><label class="sk-toggleable__label" for="d8999367-9240-40e5-93f5-8b766868b7a1">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4606511-a5ae-496e-94d0-314fe8958398" type="checkbox" ><label class="sk-toggleable__label" for="b4606511-a5ae-496e-94d0-314fe8958398">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f786803-56fc-45e8-8c06-c80d3a5c9fe0" type="checkbox" ><label class="sk-toggleable__label" for="7f786803-56fc-45e8-8c06-c80d3a5c9fe0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e824642-c79a-4e0e-a5a8-13ffb4f0328a" type="checkbox" ><label class="sk-toggleable__label" for="4e824642-c79a-4e0e-a5a8-13ffb4f0328a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce79f13b-4665-4fd9-b019-0b7dfa4c8f82" type="checkbox" ><label class="sk-toggleable__label" for="ce79f13b-4665-4fd9-b019-0b7dfa4c8f82">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
