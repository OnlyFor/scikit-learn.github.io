
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 {color: black;background-color: white;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 pre{padding: 0;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-toggleable {background-color: white;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-estimator:hover {background-color: #d4ebff;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-item {z-index: 1;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-parallel-item:only-child::after {width: 0;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-293c5544-e1cc-40e2-8f36-747b192bbc87 div.sk-text-repr-fallback {display: none;}</style><div id="sk-293c5544-e1cc-40e2-8f36-747b192bbc87" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="385c2ea7-bd15-4bad-8423-c9bea2774c70" type="checkbox" ><label for="385c2ea7-bd15-4bad-8423-c9bea2774c70" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="662a24f9-3f35-4e7a-86df-a0554f0a175d" type="checkbox" ><label for="662a24f9-3f35-4e7a-86df-a0554f0a175d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61cab8b9-07fa-4bd2-b11e-158e89fbd861" type="checkbox" ><label for="61cab8b9-07fa-4bd2-b11e-158e89fbd861" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c {color: black;background-color: white;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c pre{padding: 0;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-toggleable {background-color: white;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-estimator:hover {background-color: #d4ebff;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-item {z-index: 1;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-parallel-item:only-child::after {width: 0;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d89ecd9e-273b-47bd-a15f-5aacf725901c div.sk-text-repr-fallback {display: none;}</style><div id="sk-d89ecd9e-273b-47bd-a15f-5aacf725901c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="069bf05e-af4f-4c60-9fc3-24a7ca0b97f2" type="checkbox" ><label for="069bf05e-af4f-4c60-9fc3-24a7ca0b97f2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a767ffea-bcb8-4a35-a210-f31da3a6443a" type="checkbox" ><label for="a767ffea-bcb8-4a35-a210-f31da3a6443a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4748c19-5213-491f-888f-ddd7825b5e14" type="checkbox" ><label for="d4748c19-5213-491f-888f-ddd7825b5e14" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74aaebf2-aa51-4c40-aea3-471f1dfcc758" type="checkbox" ><label for="74aaebf2-aa51-4c40-aea3-471f1dfcc758" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8a9057a4-0477-4700-ac3f-4342763d0268 {color: black;background-color: white;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 pre{padding: 0;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-toggleable {background-color: white;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-item {z-index: 1;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-parallel-item:only-child::after {width: 0;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8a9057a4-0477-4700-ac3f-4342763d0268 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8a9057a4-0477-4700-ac3f-4342763d0268" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97ba2d6a-b315-44f2-b017-24170cc8a92a" type="checkbox" ><label for="97ba2d6a-b315-44f2-b017-24170cc8a92a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdfcc124-5be8-44eb-b973-3c0a1d3ad3b7" type="checkbox" ><label for="cdfcc124-5be8-44eb-b973-3c0a1d3ad3b7" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57050840-f23b-48bd-b80a-bdb93a5f22b9" type="checkbox" ><label for="57050840-f23b-48bd-b80a-bdb93a5f22b9" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b {color: black;background-color: white;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b pre{padding: 0;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-toggleable {background-color: white;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-estimator:hover {background-color: #d4ebff;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-item {z-index: 1;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-parallel-item:only-child::after {width: 0;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b div.sk-text-repr-fallback {display: none;}</style><div id="sk-f2a1d87e-7f83-488a-b35e-37a2d51ebe0b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="255c603e-e643-4026-9e20-96a20c1909db" type="checkbox" ><label for="255c603e-e643-4026-9e20-96a20c1909db" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2d06c9f-6edc-4dae-9862-e3fa318890d4" type="checkbox" ><label for="d2d06c9f-6edc-4dae-9862-e3fa318890d4" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e28c9dad-ddee-47a2-8d23-2f24d0bef9b3" type="checkbox" ><label for="e28c9dad-ddee-47a2-8d23-2f24d0bef9b3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dbc73ab-c500-44ab-8438-1a5a68a55a19" type="checkbox" ><label for="0dbc73ab-c500-44ab-8438-1a5a68a55a19" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ad3d4b8-a82a-45d8-b1bf-f475c00a6dc5" type="checkbox" ><label for="3ad3d4b8-a82a-45d8-b1bf-f475c00a6dc5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f072a680-6b0a-41ce-8cb2-6fb4efb9bd71" type="checkbox" ><label for="f072a680-6b0a-41ce-8cb2-6fb4efb9bd71" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0e16604-801c-42b4-bb50-b62bfcd70b00" type="checkbox" ><label for="e0e16604-801c-42b4-bb50-b62bfcd70b00" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cde0bf5b-80d1-4ac3-898c-63e9a8e6a14f" type="checkbox" ><label for="cde0bf5b-80d1-4ac3-898c-63e9a8e6a14f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43115309-f25b-40a5-91d6-15698791c422" type="checkbox" ><label for="43115309-f25b-40a5-91d6-15698791c422" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 {color: black;background-color: white;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 pre{padding: 0;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-toggleable {background-color: white;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-item {z-index: 1;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-parallel-item:only-child::after {width: 0;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2f7936b0-d78b-4d5e-a382-f53b2a6b3195" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28df4b84-0ab3-40b5-8db6-c3394c8bc594" type="checkbox" ><label for="28df4b84-0ab3-40b5-8db6-c3394c8bc594" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75cc3fb0-51c3-4a55-8a5c-9d0eef803237" type="checkbox" ><label for="75cc3fb0-51c3-4a55-8a5c-9d0eef803237" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d613b69-f649-4212-b0cf-df7f25485c3e" type="checkbox" ><label for="1d613b69-f649-4212-b0cf-df7f25485c3e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8254d0fb-5f98-419d-ab04-2d073acd2a93" type="checkbox" ><label for="8254d0fb-5f98-419d-ab04-2d073acd2a93" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93faed37-1e82-4661-9910-bca22e468e5f" type="checkbox" ><label for="93faed37-1e82-4661-9910-bca22e468e5f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c6223ef-236e-4672-84dd-2790614d3ef3" type="checkbox" ><label for="0c6223ef-236e-4672-84dd-2790614d3ef3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39ecf4d9-5f6b-4e5e-b376-448f065768fa" type="checkbox" ><label for="39ecf4d9-5f6b-4e5e-b376-448f065768fa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8867d15e-6a43-43bd-92d3-c2eb2c1c730f" type="checkbox" ><label for="8867d15e-6a43-43bd-92d3-c2eb2c1c730f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6cab147b-ece8-4816-a4cb-82e8d770ceb4" type="checkbox" ><label for="6cab147b-ece8-4816-a4cb-82e8d770ceb4" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
