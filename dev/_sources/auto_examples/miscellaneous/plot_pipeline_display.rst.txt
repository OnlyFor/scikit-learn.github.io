
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 {color: black;background-color: white;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 pre{padding: 0;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-toggleable {background-color: white;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-item {z-index: 1;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-parallel-item:only-child::after {width: 0;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a3af4962-6a70-4410-b3a8-8608e7e65e41 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a3af4962-6a70-4410-b3a8-8608e7e65e41" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e779a45-b52f-4a19-a2cf-abaaa69cccb7" type="checkbox" ><label for="3e779a45-b52f-4a19-a2cf-abaaa69cccb7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db3ec353-d288-4a01-9516-870007a8f97a" type="checkbox" ><label for="db3ec353-d288-4a01-9516-870007a8f97a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07c0d2f2-958d-40bf-be0b-13493469faf7" type="checkbox" ><label for="07c0d2f2-958d-40bf-be0b-13493469faf7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b {color: black;background-color: white;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b pre{padding: 0;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-toggleable {background-color: white;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-item {z-index: 1;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-parallel-item:only-child::after {width: 0;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b1ae84b-c73c-4caa-bc0e-fcdc22593b4b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fefdf45b-80ef-4db0-b55f-931e7d8a932b" type="checkbox" ><label for="fefdf45b-80ef-4db0-b55f-931e7d8a932b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95f0bb32-a306-43fc-87d1-5b00bb923a3b" type="checkbox" ><label for="95f0bb32-a306-43fc-87d1-5b00bb923a3b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0601f3ac-dc05-4a6f-99e6-564d727ed888" type="checkbox" ><label for="0601f3ac-dc05-4a6f-99e6-564d727ed888" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05e4fa42-aa6f-4349-bf0e-2b994cec633d" type="checkbox" ><label for="05e4fa42-aa6f-4349-bf0e-2b994cec633d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-861e858f-c318-4206-9ba1-1de8553185a5 {color: black;background-color: white;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 pre{padding: 0;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-toggleable {background-color: white;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-item {z-index: 1;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-parallel-item:only-child::after {width: 0;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-861e858f-c318-4206-9ba1-1de8553185a5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-861e858f-c318-4206-9ba1-1de8553185a5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e941393-756c-4e80-a8bc-48db10760c2c" type="checkbox" ><label for="0e941393-756c-4e80-a8bc-48db10760c2c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f996e31-ef35-4875-9d65-34ce7ea5d8af" type="checkbox" ><label for="5f996e31-ef35-4875-9d65-34ce7ea5d8af" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40f3a7b0-fd2a-4325-881b-1d1942be05df" type="checkbox" ><label for="40f3a7b0-fd2a-4325-881b-1d1942be05df" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 {color: black;background-color: white;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 pre{padding: 0;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-toggleable {background-color: white;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-estimator:hover {background-color: #d4ebff;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-item {z-index: 1;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-parallel-item:only-child::after {width: 0;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752 div.sk-text-repr-fallback {display: none;}</style><div id="sk-baa51d05-1f7f-48e0-a5a6-5ded34af5752" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9461f26c-004c-4045-975d-8cadde402b03" type="checkbox" ><label for="9461f26c-004c-4045-975d-8cadde402b03" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bef53deb-e2a5-4757-8aab-759d8f2aad5f" type="checkbox" ><label for="bef53deb-e2a5-4757-8aab-759d8f2aad5f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6901316-acb5-4745-8a06-88f8eecaf3fa" type="checkbox" ><label for="d6901316-acb5-4745-8a06-88f8eecaf3fa" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b2139c6-d9bb-47e5-a5c9-9ab95f006fcc" type="checkbox" ><label for="7b2139c6-d9bb-47e5-a5c9-9ab95f006fcc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c8d9565-aaed-411e-9a65-d5c79d1f4d55" type="checkbox" ><label for="7c8d9565-aaed-411e-9a65-d5c79d1f4d55" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6be74a70-7bdb-4be1-bea1-fc6b057775dc" type="checkbox" ><label for="6be74a70-7bdb-4be1-bea1-fc6b057775dc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c6eae01-bf56-409d-8bba-7203ec36be06" type="checkbox" ><label for="7c6eae01-bf56-409d-8bba-7203ec36be06" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b973f872-54c1-4831-9796-8887eb2caf12" type="checkbox" ><label for="b973f872-54c1-4831-9796-8887eb2caf12" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b02e45b-967f-49e5-bf7d-ce04fdf12bb2" type="checkbox" ><label for="6b02e45b-967f-49e5-bf7d-ce04fdf12bb2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-77525802-9601-45a4-9433-f0804b14ddd1 {color: black;background-color: white;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 pre{padding: 0;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-toggleable {background-color: white;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-item {z-index: 1;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-parallel-item:only-child::after {width: 0;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-77525802-9601-45a4-9433-f0804b14ddd1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-77525802-9601-45a4-9433-f0804b14ddd1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a0448cd-86c3-4842-952b-64093039c903" type="checkbox" ><label for="6a0448cd-86c3-4842-952b-64093039c903" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e3a8a93-4331-4f5d-aa75-31599b75959a" type="checkbox" ><label for="4e3a8a93-4331-4f5d-aa75-31599b75959a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ceca3406-9eb6-4fd6-8b22-c41403f5accd" type="checkbox" ><label for="ceca3406-9eb6-4fd6-8b22-c41403f5accd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a3e7c70-c3bf-43e7-95a2-9658c0db0c4a" type="checkbox" ><label for="8a3e7c70-c3bf-43e7-95a2-9658c0db0c4a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f06aa07b-2ed9-46f1-bdcc-9664feb523d1" type="checkbox" ><label for="f06aa07b-2ed9-46f1-bdcc-9664feb523d1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aebf9e20-aeb4-4c54-8728-461204c0eb2e" type="checkbox" ><label for="aebf9e20-aeb4-4c54-8728-461204c0eb2e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5493b967-5f17-4c09-97e8-3e64914880db" type="checkbox" ><label for="5493b967-5f17-4c09-97e8-3e64914880db" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b3f84a2-586b-424a-a266-d971aeae79e2" type="checkbox" ><label for="0b3f84a2-586b-424a-a266-d971aeae79e2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13385065-48a1-43e0-bb1c-95d841b1e313" type="checkbox" ><label for="13385065-48a1-43e0-bb1c-95d841b1e313" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
