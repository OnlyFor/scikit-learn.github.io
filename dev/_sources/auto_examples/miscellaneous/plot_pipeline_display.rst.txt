
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8c61dd33-19a7-4876-9609-3dd0c113792d {color: black;background-color: white;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d pre{padding: 0;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-toggleable {background-color: white;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-estimator:hover {background-color: #d4ebff;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-item {z-index: 1;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-parallel-item:only-child::after {width: 0;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8c61dd33-19a7-4876-9609-3dd0c113792d div.sk-text-repr-fallback {display: none;}</style><div id="sk-8c61dd33-19a7-4876-9609-3dd0c113792d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="307de63b-65f4-4e3e-984c-c018972954d7" type="checkbox" ><label for="307de63b-65f4-4e3e-984c-c018972954d7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9fb99e3-9b14-48cb-b59b-f56439d8238e" type="checkbox" ><label for="e9fb99e3-9b14-48cb-b59b-f56439d8238e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20f5eb46-e30b-4cc6-95dc-0f00efd701ec" type="checkbox" ><label for="20f5eb46-e30b-4cc6-95dc-0f00efd701ec" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-115291ff-8791-44f1-9103-f03e595fe367 {color: black;background-color: white;}#sk-115291ff-8791-44f1-9103-f03e595fe367 pre{padding: 0;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-toggleable {background-color: white;}#sk-115291ff-8791-44f1-9103-f03e595fe367 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-115291ff-8791-44f1-9103-f03e595fe367 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-115291ff-8791-44f1-9103-f03e595fe367 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-115291ff-8791-44f1-9103-f03e595fe367 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-115291ff-8791-44f1-9103-f03e595fe367 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-115291ff-8791-44f1-9103-f03e595fe367 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-estimator:hover {background-color: #d4ebff;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-item {z-index: 1;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-parallel-item:only-child::after {width: 0;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-115291ff-8791-44f1-9103-f03e595fe367 div.sk-text-repr-fallback {display: none;}</style><div id="sk-115291ff-8791-44f1-9103-f03e595fe367" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="168f3e4e-f07c-43e0-99ef-1a6bfdf0c0c4" type="checkbox" ><label for="168f3e4e-f07c-43e0-99ef-1a6bfdf0c0c4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e1b1a18-35e4-49e7-a3a4-a1ec4b66303b" type="checkbox" ><label for="4e1b1a18-35e4-49e7-a3a4-a1ec4b66303b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb46f1ec-5fef-4436-898c-3a3f5e2a0474" type="checkbox" ><label for="cb46f1ec-5fef-4436-898c-3a3f5e2a0474" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e9908eb-a78f-4ab8-8ef4-97bba6fd5764" type="checkbox" ><label for="7e9908eb-a78f-4ab8-8ef4-97bba6fd5764" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c {color: black;background-color: white;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c pre{padding: 0;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-toggleable {background-color: white;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-estimator:hover {background-color: #d4ebff;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-item {z-index: 1;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-parallel-item:only-child::after {width: 0;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c div.sk-text-repr-fallback {display: none;}</style><div id="sk-dec8cf44-f4c6-44e8-b4ad-dd92e3456c5c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0f1e986-1424-4948-b044-d04367c25b19" type="checkbox" ><label for="e0f1e986-1424-4948-b044-d04367c25b19" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7f05cdf-0e44-4f52-aaa9-14d04a32a203" type="checkbox" ><label for="c7f05cdf-0e44-4f52-aaa9-14d04a32a203" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98d3565a-faf0-403e-82cd-ad26d6d6acd9" type="checkbox" ><label for="98d3565a-faf0-403e-82cd-ad26d6d6acd9" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-abcb6a7c-3214-4baa-85cc-546903f78432 {color: black;background-color: white;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 pre{padding: 0;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-toggleable {background-color: white;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-estimator:hover {background-color: #d4ebff;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-item {z-index: 1;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-parallel-item:only-child::after {width: 0;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-abcb6a7c-3214-4baa-85cc-546903f78432 div.sk-text-repr-fallback {display: none;}</style><div id="sk-abcb6a7c-3214-4baa-85cc-546903f78432" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3711f6c6-8b26-4c99-86cb-18d17b7e97fd" type="checkbox" ><label for="3711f6c6-8b26-4c99-86cb-18d17b7e97fd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b96dd7c8-8b57-4132-b4dd-5e73bc8fde9d" type="checkbox" ><label for="b96dd7c8-8b57-4132-b4dd-5e73bc8fde9d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="448e3a48-af67-46fe-9093-70130fb43703" type="checkbox" ><label for="448e3a48-af67-46fe-9093-70130fb43703" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c84ce62d-b47d-4ce7-bcfa-4d850d2e59df" type="checkbox" ><label for="c84ce62d-b47d-4ce7-bcfa-4d850d2e59df" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdd84e92-a944-4116-a99b-9cc8b4226ff9" type="checkbox" ><label for="bdd84e92-a944-4116-a99b-9cc8b4226ff9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a585932d-9814-44eb-9102-dc9ecfd8198b" type="checkbox" ><label for="a585932d-9814-44eb-9102-dc9ecfd8198b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0ba23a8-fdea-4456-a8be-cab5abf52b10" type="checkbox" ><label for="b0ba23a8-fdea-4456-a8be-cab5abf52b10" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64b7f570-c870-46ed-8b5b-ba16e4b181ee" type="checkbox" ><label for="64b7f570-c870-46ed-8b5b-ba16e4b181ee" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03258813-70fb-48c4-b736-e41e0a06eb2a" type="checkbox" ><label for="03258813-70fb-48c4-b736-e41e0a06eb2a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 {color: black;background-color: white;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 pre{padding: 0;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-toggleable {background-color: white;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-item {z-index: 1;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-parallel-item:only-child::after {width: 0;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9959eb52-9ae1-4154-b9a9-63dded9fd747 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9959eb52-9ae1-4154-b9a9-63dded9fd747" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fffd1562-f126-489c-a1f0-9d43c3299f65" type="checkbox" ><label for="fffd1562-f126-489c-a1f0-9d43c3299f65" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32350e7f-927e-41a4-9898-4a4fd9466764" type="checkbox" ><label for="32350e7f-927e-41a4-9898-4a4fd9466764" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58f3ae38-a1fe-4cc4-90ec-a9f3e838f901" type="checkbox" ><label for="58f3ae38-a1fe-4cc4-90ec-a9f3e838f901" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4578f59a-6611-4ae8-badd-e494e80891b6" type="checkbox" ><label for="4578f59a-6611-4ae8-badd-e494e80891b6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08f402d4-183e-4368-aaff-7e059b608167" type="checkbox" ><label for="08f402d4-183e-4368-aaff-7e059b608167" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ce40971-12ed-4cf6-8da3-8634a8ea062d" type="checkbox" ><label for="5ce40971-12ed-4cf6-8da3-8634a8ea062d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca0b079d-6c66-4981-8eb2-eb0b44640f89" type="checkbox" ><label for="ca0b079d-6c66-4981-8eb2-eb0b44640f89" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aefd02e6-4226-47a4-93de-1b77c5ed39c8" type="checkbox" ><label for="aefd02e6-4226-47a4-93de-1b77c5ed39c8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06ada23d-0745-4d34-898c-7753f6a93020" type="checkbox" ><label for="06ada23d-0745-4d34-898c-7753f6a93020" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.105 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
