
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e {color: black;background-color: white;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e pre{padding: 0;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-toggleable {background-color: white;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-estimator:hover {background-color: #d4ebff;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-item {z-index: 1;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-parallel-item:only-child::after {width: 0;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-10e1599d-b5da-4b50-b389-424f2b4aa40e div.sk-text-repr-fallback {display: none;}</style><div id="sk-10e1599d-b5da-4b50-b389-424f2b4aa40e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8705ea4-925f-4f24-a3b7-7cb5d664b59e" type="checkbox" ><label for="b8705ea4-925f-4f24-a3b7-7cb5d664b59e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="335eb206-3a0a-487a-a67e-debe04e8f6d1" type="checkbox" ><label for="335eb206-3a0a-487a-a67e-debe04e8f6d1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b610f2c-0fe9-4c7c-ab72-51617dca00e5" type="checkbox" ><label for="2b610f2c-0fe9-4c7c-ab72-51617dca00e5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 {color: black;background-color: white;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 pre{padding: 0;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-toggleable {background-color: white;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-estimator:hover {background-color: #d4ebff;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-item {z-index: 1;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-parallel-item:only-child::after {width: 0;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-66c40808-bee9-4ace-86f0-ce2fceef0454 div.sk-text-repr-fallback {display: none;}</style><div id="sk-66c40808-bee9-4ace-86f0-ce2fceef0454" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd505ce4-1c27-41cd-93f3-40e46f17b0dd" type="checkbox" ><label for="fd505ce4-1c27-41cd-93f3-40e46f17b0dd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59109ed4-de32-484f-b3ca-621db31c5324" type="checkbox" ><label for="59109ed4-de32-484f-b3ca-621db31c5324" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58a2279b-f57c-44d0-8dba-6d426f7049ed" type="checkbox" ><label for="58a2279b-f57c-44d0-8dba-6d426f7049ed" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94e764b4-8c29-4d9f-b512-a52ab7f2cab8" type="checkbox" ><label for="94e764b4-8c29-4d9f-b512-a52ab7f2cab8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 {color: black;background-color: white;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 pre{padding: 0;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-toggleable {background-color: white;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-item {z-index: 1;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-parallel-item:only-child::after {width: 0;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a44e5755-e5b2-48c6-afc4-e9add734fb44 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a44e5755-e5b2-48c6-afc4-e9add734fb44" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3285e719-02c4-4690-87c6-42ac113e2942" type="checkbox" ><label for="3285e719-02c4-4690-87c6-42ac113e2942" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b29703d1-494e-4fe7-b663-a5b2773a18b9" type="checkbox" ><label for="b29703d1-494e-4fe7-b663-a5b2773a18b9" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85f205b2-236b-4b59-a6b6-f21ab40dd92d" type="checkbox" ><label for="85f205b2-236b-4b59-a6b6-f21ab40dd92d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 {color: black;background-color: white;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 pre{padding: 0;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-toggleable {background-color: white;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-estimator:hover {background-color: #d4ebff;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-item {z-index: 1;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-parallel-item:only-child::after {width: 0;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-406cbaa0-a89a-40f5-bf6d-5297e695f820 div.sk-text-repr-fallback {display: none;}</style><div id="sk-406cbaa0-a89a-40f5-bf6d-5297e695f820" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="444feb84-2a1e-474b-8b68-26382e7e481f" type="checkbox" ><label for="444feb84-2a1e-474b-8b68-26382e7e481f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51dfde14-d5f4-4909-824a-0836799a2891" type="checkbox" ><label for="51dfde14-d5f4-4909-824a-0836799a2891" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa671625-c40e-4735-8c3d-3bf71617b7bd" type="checkbox" ><label for="fa671625-c40e-4735-8c3d-3bf71617b7bd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02f9eddb-a201-4253-9dcc-393823e1a201" type="checkbox" ><label for="02f9eddb-a201-4253-9dcc-393823e1a201" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73742d98-c5ab-4da3-a09f-e5a5d63673fc" type="checkbox" ><label for="73742d98-c5ab-4da3-a09f-e5a5d63673fc" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84854807-ecfd-4393-acbb-f035bc73764e" type="checkbox" ><label for="84854807-ecfd-4393-acbb-f035bc73764e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b909f221-be4b-4746-9f2c-391381e8779c" type="checkbox" ><label for="b909f221-be4b-4746-9f2c-391381e8779c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="372ecd76-44af-4ea4-9eda-699c7c0d60cd" type="checkbox" ><label for="372ecd76-44af-4ea4-9eda-699c7c0d60cd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="402f19b0-f6b4-42f5-ae33-5d35350ed3a6" type="checkbox" ><label for="402f19b0-f6b4-42f5-ae33-5d35350ed3a6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 {color: black;background-color: white;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 pre{padding: 0;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-toggleable {background-color: white;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-item {z-index: 1;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-parallel-item:only-child::after {width: 0;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-863ea951-a5df-4c8e-8771-1fc0ed610cc3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5ae8b0c-2e51-4c32-88b0-e95a569eced1" type="checkbox" ><label for="f5ae8b0c-2e51-4c32-88b0-e95a569eced1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8b62d26-7b02-4b6b-8b38-07b2ad8dbfc8" type="checkbox" ><label for="b8b62d26-7b02-4b6b-8b38-07b2ad8dbfc8" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d56c6ac-f6b7-4d61-8aff-7d01d84e555a" type="checkbox" ><label for="4d56c6ac-f6b7-4d61-8aff-7d01d84e555a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="882a2658-7b86-46bd-8784-557f77d3b82d" type="checkbox" ><label for="882a2658-7b86-46bd-8784-557f77d3b82d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93abaa0d-96f3-4221-8ea9-178c50824860" type="checkbox" ><label for="93abaa0d-96f3-4221-8ea9-178c50824860" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1921496-c92d-4cbc-a073-ac92d883eaf3" type="checkbox" ><label for="d1921496-c92d-4cbc-a073-ac92d883eaf3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="166a2bbc-187a-4860-9722-164d597c39cb" type="checkbox" ><label for="166a2bbc-187a-4860-9722-164d597c39cb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58888b90-e684-471b-99e7-bc48dc54d766" type="checkbox" ><label for="58888b90-e684-471b-99e7-bc48dc54d766" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb642e46-a841-4b49-bc14-ed9e21132dc3" type="checkbox" ><label for="eb642e46-a841-4b49-bc14-ed9e21132dc3" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
