
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 {color: black;background-color: white;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 pre{padding: 0;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-toggleable {background-color: white;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-item {z-index: 1;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-parallel-item:only-child::after {width: 0;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d3ede4d6-81b3-4a94-a873-5d4092abb335 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d3ede4d6-81b3-4a94-a873-5d4092abb335" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d31a57f-6aee-406a-be4b-346a19e80492" type="checkbox" ><label for="9d31a57f-6aee-406a-be4b-346a19e80492" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bca4c7a-6b8a-4cb6-aa6a-b7ee82e48b2a" type="checkbox" ><label for="3bca4c7a-6b8a-4cb6-aa6a-b7ee82e48b2a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88964fb2-7763-4b18-9b00-bd1f282b4daf" type="checkbox" ><label for="88964fb2-7763-4b18-9b00-bd1f282b4daf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 {color: black;background-color: white;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 pre{padding: 0;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-toggleable {background-color: white;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-item {z-index: 1;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-parallel-item:only-child::after {width: 0;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9575541e-811a-4cdc-87f8-30ef272f13d6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9575541e-811a-4cdc-87f8-30ef272f13d6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7378764-cded-47d5-a0c2-7c0baa8a8134" type="checkbox" ><label for="a7378764-cded-47d5-a0c2-7c0baa8a8134" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="318e2395-8d9f-4fe8-aea6-113f36fcc5e7" type="checkbox" ><label for="318e2395-8d9f-4fe8-aea6-113f36fcc5e7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bd2605c-6b1d-45be-bf27-d3d05f111408" type="checkbox" ><label for="4bd2605c-6b1d-45be-bf27-d3d05f111408" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="093ef6fc-eacd-4cad-950d-f80f359072e7" type="checkbox" ><label for="093ef6fc-eacd-4cad-950d-f80f359072e7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-23d7026c-cb55-411d-98af-0284a2e16502 {color: black;background-color: white;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 pre{padding: 0;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-toggleable {background-color: white;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-estimator:hover {background-color: #d4ebff;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-item {z-index: 1;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-parallel-item:only-child::after {width: 0;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-23d7026c-cb55-411d-98af-0284a2e16502 div.sk-text-repr-fallback {display: none;}</style><div id="sk-23d7026c-cb55-411d-98af-0284a2e16502" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07d37c49-92a0-4325-8f2b-423b1ba60c55" type="checkbox" ><label for="07d37c49-92a0-4325-8f2b-423b1ba60c55" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fb240aa-e456-413b-8eab-e971d1def953" type="checkbox" ><label for="5fb240aa-e456-413b-8eab-e971d1def953" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a452ce4-bbef-485d-8d36-2764553dbe23" type="checkbox" ><label for="6a452ce4-bbef-485d-8d36-2764553dbe23" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c {color: black;background-color: white;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c pre{padding: 0;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-toggleable {background-color: white;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-estimator:hover {background-color: #d4ebff;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-item {z-index: 1;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-parallel-item:only-child::after {width: 0;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c div.sk-text-repr-fallback {display: none;}</style><div id="sk-a2da2fbc-a74b-4ca7-acda-bfefa23b9c1c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b60db49-d7ca-4b73-bf46-d493e18f84e5" type="checkbox" ><label for="2b60db49-d7ca-4b73-bf46-d493e18f84e5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47dfb399-cdb2-4f85-8e41-0fd1d4be4bcf" type="checkbox" ><label for="47dfb399-cdb2-4f85-8e41-0fd1d4be4bcf" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="424aafbf-005b-4b9b-a733-4e7274e953d5" type="checkbox" ><label for="424aafbf-005b-4b9b-a733-4e7274e953d5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d11f123-d188-40dc-87c3-9fdee27570c4" type="checkbox" ><label for="7d11f123-d188-40dc-87c3-9fdee27570c4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ee82164-50af-409e-84e9-719f960af187" type="checkbox" ><label for="5ee82164-50af-409e-84e9-719f960af187" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e23bdc3b-5175-410b-bdef-6b7d66a2ee81" type="checkbox" ><label for="e23bdc3b-5175-410b-bdef-6b7d66a2ee81" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ca53b31-9067-4ee5-bf76-1239d31cd02b" type="checkbox" ><label for="7ca53b31-9067-4ee5-bf76-1239d31cd02b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5f4c41e-f14b-4840-b21c-4ce34e1c2912" type="checkbox" ><label for="f5f4c41e-f14b-4840-b21c-4ce34e1c2912" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2120406c-dc5c-4dbf-b718-ea6f700c2055" type="checkbox" ><label for="2120406c-dc5c-4dbf-b718-ea6f700c2055" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 {color: black;background-color: white;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 pre{padding: 0;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-toggleable {background-color: white;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-estimator:hover {background-color: #d4ebff;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-item {z-index: 1;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-parallel-item:only-child::after {width: 0;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-add2d226-35fe-49e5-a81e-1a692f2a3f96 div.sk-text-repr-fallback {display: none;}</style><div id="sk-add2d226-35fe-49e5-a81e-1a692f2a3f96" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d738461-8638-4fde-b550-42e3a2cb8238" type="checkbox" ><label for="9d738461-8638-4fde-b550-42e3a2cb8238" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6238f158-6ad5-4ba9-9389-bfad2a0b9022" type="checkbox" ><label for="6238f158-6ad5-4ba9-9389-bfad2a0b9022" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff17770e-2fed-4406-8915-4fc8f9276efb" type="checkbox" ><label for="ff17770e-2fed-4406-8915-4fc8f9276efb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59f36197-2f36-406e-86cc-ec33884edbeb" type="checkbox" ><label for="59f36197-2f36-406e-86cc-ec33884edbeb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6614507-46c1-4720-bdcd-cb1b69ec19a4" type="checkbox" ><label for="b6614507-46c1-4720-bdcd-cb1b69ec19a4" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7846226-532d-4662-9e66-68f331fa05dc" type="checkbox" ><label for="b7846226-532d-4662-9e66-68f331fa05dc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b014c69-52bb-4a4b-9b24-b74165b84c19" type="checkbox" ><label for="5b014c69-52bb-4a4b-9b24-b74165b84c19" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92f90bd5-13cc-4241-afd8-5249c842b11b" type="checkbox" ><label for="92f90bd5-13cc-4241-afd8-5249c842b11b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9ebe393-767b-43d9-beed-c10681189493" type="checkbox" ><label for="b9ebe393-767b-43d9-beed-c10681189493" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.102 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
