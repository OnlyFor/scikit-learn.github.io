
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ca115f99-0826-49f6-a97c-823891ce3103 {color: black;background-color: white;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 pre{padding: 0;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-toggleable {background-color: white;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-item {z-index: 1;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-parallel-item:only-child::after {width: 0;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ca115f99-0826-49f6-a97c-823891ce3103 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ca115f99-0826-49f6-a97c-823891ce3103" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9b54710-0776-4cba-801d-81ca7d64f7d9" type="checkbox" ><label for="b9b54710-0776-4cba-801d-81ca7d64f7d9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="997c6d96-94dd-42b5-a49f-b001d32ae309" type="checkbox" ><label for="997c6d96-94dd-42b5-a49f-b001d32ae309" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1edb9ee2-a940-4cc8-b9fc-e51fa6cf7569" type="checkbox" ><label for="1edb9ee2-a940-4cc8-b9fc-e51fa6cf7569" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda {color: black;background-color: white;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda pre{padding: 0;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-toggleable {background-color: white;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-estimator:hover {background-color: #d4ebff;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-item {z-index: 1;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-parallel-item:only-child::after {width: 0;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7bc91e14-3210-4109-bb1e-99a8538c0bda div.sk-text-repr-fallback {display: none;}</style><div id="sk-7bc91e14-3210-4109-bb1e-99a8538c0bda" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="813a34ff-0e85-4421-89bc-7810064ec773" type="checkbox" ><label for="813a34ff-0e85-4421-89bc-7810064ec773" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0a1f023-1542-4713-9332-d51b0e688402" type="checkbox" ><label for="f0a1f023-1542-4713-9332-d51b0e688402" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="826339fb-85f6-4d9e-823d-a173407e7feb" type="checkbox" ><label for="826339fb-85f6-4d9e-823d-a173407e7feb" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a27489db-b73e-477d-ba83-2336d8cd55a0" type="checkbox" ><label for="a27489db-b73e-477d-ba83-2336d8cd55a0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa {color: black;background-color: white;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa pre{padding: 0;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-toggleable {background-color: white;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-estimator:hover {background-color: #d4ebff;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-item {z-index: 1;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-parallel-item:only-child::after {width: 0;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa div.sk-text-repr-fallback {display: none;}</style><div id="sk-91babd2f-adcc-47d4-a7ea-ec7170da3caa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c318326f-ba0d-4d35-b429-c5820955344d" type="checkbox" ><label for="c318326f-ba0d-4d35-b429-c5820955344d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65717176-b56f-42e7-b085-a879b30e32a1" type="checkbox" ><label for="65717176-b56f-42e7-b085-a879b30e32a1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7496778-b2c9-486f-a3b4-4ccdb987a3fb" type="checkbox" ><label for="a7496778-b2c9-486f-a3b4-4ccdb987a3fb" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 {color: black;background-color: white;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 pre{padding: 0;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-toggleable {background-color: white;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-item {z-index: 1;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-parallel-item:only-child::after {width: 0;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-75f3f8d0-d4f4-4c6c-8aa0-dbba27a72cd8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="303f2e0f-6251-49ba-9b15-ed91a1419ba6" type="checkbox" ><label for="303f2e0f-6251-49ba-9b15-ed91a1419ba6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a9ab0dc-656e-4d87-9b17-426afc6b299d" type="checkbox" ><label for="0a9ab0dc-656e-4d87-9b17-426afc6b299d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2971fe02-efcf-440d-a98e-d5dd5d6635db" type="checkbox" ><label for="2971fe02-efcf-440d-a98e-d5dd5d6635db" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71ade9f0-33f6-436d-99ea-ff33ca0ffab3" type="checkbox" ><label for="71ade9f0-33f6-436d-99ea-ff33ca0ffab3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdd9821e-1090-48e2-ae0d-3b0daea898f0" type="checkbox" ><label for="fdd9821e-1090-48e2-ae0d-3b0daea898f0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f1cc9a0-3a76-4284-8a64-742ff53fcb21" type="checkbox" ><label for="0f1cc9a0-3a76-4284-8a64-742ff53fcb21" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90319c39-f694-495f-9a1b-6105e7d3a5f4" type="checkbox" ><label for="90319c39-f694-495f-9a1b-6105e7d3a5f4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8787cf7c-c51b-471b-bb60-67dc496547dd" type="checkbox" ><label for="8787cf7c-c51b-471b-bb60-67dc496547dd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28a84604-77ea-4dc4-bdfe-9691a4a8bdcf" type="checkbox" ><label for="28a84604-77ea-4dc4-bdfe-9691a4a8bdcf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd {color: black;background-color: white;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd pre{padding: 0;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-toggleable {background-color: white;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-estimator:hover {background-color: #d4ebff;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-item {z-index: 1;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-parallel-item:only-child::after {width: 0;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd div.sk-text-repr-fallback {display: none;}</style><div id="sk-699ec51d-73ca-4514-b4da-a09cdb8e29bd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abc0dd2e-8988-4bca-9b39-0898d331b1ff" type="checkbox" ><label for="abc0dd2e-8988-4bca-9b39-0898d331b1ff" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee28fad1-f9fb-4216-a6c8-43f3265fcf39" type="checkbox" ><label for="ee28fad1-f9fb-4216-a6c8-43f3265fcf39" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2c311e2-4743-4424-8b18-ae10da82aa22" type="checkbox" ><label for="a2c311e2-4743-4424-8b18-ae10da82aa22" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f82ff27f-e586-4b93-aac3-c9c59853a844" type="checkbox" ><label for="f82ff27f-e586-4b93-aac3-c9c59853a844" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d5bb787-48e9-4169-85eb-91d999dd62a3" type="checkbox" ><label for="4d5bb787-48e9-4169-85eb-91d999dd62a3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="246b1a85-02d5-402b-88fd-cb3a4aaa94b8" type="checkbox" ><label for="246b1a85-02d5-402b-88fd-cb3a4aaa94b8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0b13621-bfda-4296-bb22-18ec6a708e49" type="checkbox" ><label for="f0b13621-bfda-4296-bb22-18ec6a708e49" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5035b48-3cbd-4d8d-9517-1245ca5c416c" type="checkbox" ><label for="e5035b48-3cbd-4d8d-9517-1245ca5c416c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31e8357b-ae6d-4988-8c27-8c8fd4541a61" type="checkbox" ><label for="31e8357b-ae6d-4988-8c27-8c8fd4541a61" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.082 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
