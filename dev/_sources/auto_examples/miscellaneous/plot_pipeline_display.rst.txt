
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9c9ae741-1606-4514-bff5-40e10edcf077 {color: black;background-color: white;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 pre{padding: 0;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-toggleable {background-color: white;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-item {z-index: 1;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-parallel-item:only-child::after {width: 0;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9c9ae741-1606-4514-bff5-40e10edcf077 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9c9ae741-1606-4514-bff5-40e10edcf077" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f55afa1-ea82-4c74-8c8a-2a3551aaa21b" type="checkbox" ><label for="9f55afa1-ea82-4c74-8c8a-2a3551aaa21b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea1690e5-c692-40e4-877f-4abee41ec53c" type="checkbox" ><label for="ea1690e5-c692-40e4-877f-4abee41ec53c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="400d4400-59fc-484a-8cf2-8934da2cd092" type="checkbox" ><label for="400d4400-59fc-484a-8cf2-8934da2cd092" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce {color: black;background-color: white;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce pre{padding: 0;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-toggleable {background-color: white;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-item {z-index: 1;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-parallel-item:only-child::after {width: 0;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce div.sk-text-repr-fallback {display: none;}</style><div id="sk-fa743f4b-2d59-4f28-80d3-7c82f8027bce" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d23c67a4-5cdf-4f49-ae3c-faa5ccac1843" type="checkbox" ><label for="d23c67a4-5cdf-4f49-ae3c-faa5ccac1843" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ae39716-553f-4f23-ae91-08a82be76ee9" type="checkbox" ><label for="3ae39716-553f-4f23-ae91-08a82be76ee9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cde9262e-eade-4b8b-b882-1dec77b14362" type="checkbox" ><label for="cde9262e-eade-4b8b-b882-1dec77b14362" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1715b63-26f0-42b5-a100-0230e579bf80" type="checkbox" ><label for="d1715b63-26f0-42b5-a100-0230e579bf80" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea {color: black;background-color: white;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea pre{padding: 0;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-toggleable {background-color: white;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-estimator:hover {background-color: #d4ebff;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-item {z-index: 1;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-parallel-item:only-child::after {width: 0;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea div.sk-text-repr-fallback {display: none;}</style><div id="sk-8b99f3fb-05c3-4aaa-9d09-a07ebf3f2aea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="658cb70f-4737-48f4-8f30-468b04f9b973" type="checkbox" ><label for="658cb70f-4737-48f4-8f30-468b04f9b973" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19863cba-1545-4595-8764-7cadd4e13f5d" type="checkbox" ><label for="19863cba-1545-4595-8764-7cadd4e13f5d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67671c8b-9124-497a-bcf6-5eda8439d843" type="checkbox" ><label for="67671c8b-9124-497a-bcf6-5eda8439d843" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 {color: black;background-color: white;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 pre{padding: 0;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-toggleable {background-color: white;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-estimator:hover {background-color: #d4ebff;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-item {z-index: 1;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-parallel-item:only-child::after {width: 0;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777 div.sk-text-repr-fallback {display: none;}</style><div id="sk-18e9cf5d-dac8-4b4e-b973-eca21ac68777" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99a4fa1d-68ed-45dd-a42b-763793f289cd" type="checkbox" ><label for="99a4fa1d-68ed-45dd-a42b-763793f289cd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e1ef5f3-c827-4e6f-a5a1-3c61697cd754" type="checkbox" ><label for="2e1ef5f3-c827-4e6f-a5a1-3c61697cd754" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b97ae478-1bbc-45cd-92f6-d112fe6bbe4f" type="checkbox" ><label for="b97ae478-1bbc-45cd-92f6-d112fe6bbe4f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff616f06-e2f2-469e-a00c-025292a4cf92" type="checkbox" ><label for="ff616f06-e2f2-469e-a00c-025292a4cf92" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5777c414-5eea-4836-9196-fa1e4ed629ee" type="checkbox" ><label for="5777c414-5eea-4836-9196-fa1e4ed629ee" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb0ff14a-7c67-4dda-ac34-07bce1a7ae3d" type="checkbox" ><label for="fb0ff14a-7c67-4dda-ac34-07bce1a7ae3d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3e22fa2-92ff-4bb0-9527-98eb2e6266b1" type="checkbox" ><label for="e3e22fa2-92ff-4bb0-9527-98eb2e6266b1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9084ba5-29d7-482b-842e-2ad2b4d3e0c7" type="checkbox" ><label for="f9084ba5-29d7-482b-842e-2ad2b4d3e0c7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa5cdb4c-1144-4213-89e3-a06ce812fd32" type="checkbox" ><label for="fa5cdb4c-1144-4213-89e3-a06ce812fd32" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b {color: black;background-color: white;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b pre{padding: 0;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-toggleable {background-color: white;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-estimator:hover {background-color: #d4ebff;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-item {z-index: 1;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-parallel-item:only-child::after {width: 0;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-31b82859-9d4d-4ead-9b39-9f7179153d7b div.sk-text-repr-fallback {display: none;}</style><div id="sk-31b82859-9d4d-4ead-9b39-9f7179153d7b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddbc4404-3e5d-4b9b-934a-459909de5c93" type="checkbox" ><label for="ddbc4404-3e5d-4b9b-934a-459909de5c93" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8961eb7d-c5c5-449e-89e5-bfccdaf2eba4" type="checkbox" ><label for="8961eb7d-c5c5-449e-89e5-bfccdaf2eba4" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48629302-f90e-4dac-83a7-e0fe6ea0512b" type="checkbox" ><label for="48629302-f90e-4dac-83a7-e0fe6ea0512b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2edb9e30-c9eb-412e-9f77-077688bd5fe6" type="checkbox" ><label for="2edb9e30-c9eb-412e-9f77-077688bd5fe6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fef0a4fd-c1fc-41fc-9c76-14d568542065" type="checkbox" ><label for="fef0a4fd-c1fc-41fc-9c76-14d568542065" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29b6c5e7-394c-449c-b373-1001407e1780" type="checkbox" ><label for="29b6c5e7-394c-449c-b373-1001407e1780" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10fccf29-5a06-469d-ac65-e36b1baa3a6d" type="checkbox" ><label for="10fccf29-5a06-469d-ac65-e36b1baa3a6d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef96c457-5bee-493f-b145-4278cfa33405" type="checkbox" ><label for="ef96c457-5bee-493f-b145-4278cfa33405" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6968325-1e47-46f7-8014-44e48cbcb462" type="checkbox" ><label for="a6968325-1e47-46f7-8014-44e48cbcb462" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.078 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
