
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 {color: black;background-color: white;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 pre{padding: 0;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-toggleable {background-color: white;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-item {z-index: 1;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-parallel-item:only-child::after {width: 0;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0d67b003-8b00-4e79-ba1c-ab7cdbbfbc42" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a2ebacd-6a04-474c-acca-69c728000654" type="checkbox" ><label for="7a2ebacd-6a04-474c-acca-69c728000654" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f66f594-bde9-4454-b20f-c966f3c2db6b" type="checkbox" ><label for="4f66f594-bde9-4454-b20f-c966f3c2db6b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52f7d51d-e899-4edb-a1a0-414691cfd482" type="checkbox" ><label for="52f7d51d-e899-4edb-a1a0-414691cfd482" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 {color: black;background-color: white;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 pre{padding: 0;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-toggleable {background-color: white;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-item {z-index: 1;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-parallel-item:only-child::after {width: 0;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c24d3f4f-7b73-4fc6-b1ae-e9386b52a0b2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49683fd4-0d5c-45c2-9770-38eaabb74a91" type="checkbox" ><label for="49683fd4-0d5c-45c2-9770-38eaabb74a91" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e75fa42d-537a-43b6-848e-893a2a0e3aaa" type="checkbox" ><label for="e75fa42d-537a-43b6-848e-893a2a0e3aaa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c5f4381-6d27-4172-829a-39d262965b83" type="checkbox" ><label for="4c5f4381-6d27-4172-829a-39d262965b83" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce10d9ee-a5a5-4275-9488-14dddafb617c" type="checkbox" ><label for="ce10d9ee-a5a5-4275-9488-14dddafb617c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 {color: black;background-color: white;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 pre{padding: 0;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-toggleable {background-color: white;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-item {z-index: 1;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-parallel-item:only-child::after {width: 0;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ea734f71-6171-4ff6-8fb3-84a26c14e7f5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0668982-c6b9-4a1c-94bf-d7afcfdef9b8" type="checkbox" ><label for="b0668982-c6b9-4a1c-94bf-d7afcfdef9b8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="473d0063-bac1-451e-887c-a7bae820810a" type="checkbox" ><label for="473d0063-bac1-451e-887c-a7bae820810a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6355330-84cc-4a59-8fb3-2af0b2d74899" type="checkbox" ><label for="d6355330-84cc-4a59-8fb3-2af0b2d74899" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d583b78b-6cb8-4a59-8642-294dee161576 {color: black;background-color: white;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 pre{padding: 0;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-toggleable {background-color: white;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-item {z-index: 1;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-parallel-item:only-child::after {width: 0;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d583b78b-6cb8-4a59-8642-294dee161576 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d583b78b-6cb8-4a59-8642-294dee161576" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="352e8523-44ce-4ef8-98fb-17c52152842a" type="checkbox" ><label for="352e8523-44ce-4ef8-98fb-17c52152842a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1721a701-eb7f-4aef-a061-6fce09072a4b" type="checkbox" ><label for="1721a701-eb7f-4aef-a061-6fce09072a4b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="079db308-4436-4751-ac49-98f9a2c119be" type="checkbox" ><label for="079db308-4436-4751-ac49-98f9a2c119be" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b12b2a56-bab4-4660-bb4a-5bc90be581d7" type="checkbox" ><label for="b12b2a56-bab4-4660-bb4a-5bc90be581d7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cac50641-78e3-4f3a-b3c3-f68eff83b4ed" type="checkbox" ><label for="cac50641-78e3-4f3a-b3c3-f68eff83b4ed" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da640df5-d0d2-4a55-bc51-051d36b348a7" type="checkbox" ><label for="da640df5-d0d2-4a55-bc51-051d36b348a7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="545afaac-f196-4b66-8db2-45a903d52a0d" type="checkbox" ><label for="545afaac-f196-4b66-8db2-45a903d52a0d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dba278ad-f12b-4dd5-aa66-d732199293c3" type="checkbox" ><label for="dba278ad-f12b-4dd5-aa66-d732199293c3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7f19c32-c7a2-4845-8617-013aa40b7e3f" type="checkbox" ><label for="d7f19c32-c7a2-4845-8617-013aa40b7e3f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 {color: black;background-color: white;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 pre{padding: 0;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-toggleable {background-color: white;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-item {z-index: 1;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-parallel-item:only-child::after {width: 0;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2bad2f97-a684-4b5a-b239-8acac3ab5188 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2bad2f97-a684-4b5a-b239-8acac3ab5188" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="216e9b3c-3a37-4796-a1a6-d972910c5a90" type="checkbox" ><label for="216e9b3c-3a37-4796-a1a6-d972910c5a90" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c97442b-08de-42e0-b26f-edd0b5c6797e" type="checkbox" ><label for="0c97442b-08de-42e0-b26f-edd0b5c6797e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c42132a1-b7a1-44bc-9dbf-10d814a5f33a" type="checkbox" ><label for="c42132a1-b7a1-44bc-9dbf-10d814a5f33a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eeab373d-fb88-4b2a-98a2-ba3f0632e172" type="checkbox" ><label for="eeab373d-fb88-4b2a-98a2-ba3f0632e172" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38f75edb-7ecf-4d69-a3ad-6987a340e4b3" type="checkbox" ><label for="38f75edb-7ecf-4d69-a3ad-6987a340e4b3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f88a714-0b23-484a-ab30-2d92c26f6e6a" type="checkbox" ><label for="4f88a714-0b23-484a-ab30-2d92c26f6e6a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1676508-bb37-44ac-aaec-91d8e5592897" type="checkbox" ><label for="d1676508-bb37-44ac-aaec-91d8e5592897" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5d38be6-0752-439b-833e-02d9da3db1b2" type="checkbox" ><label for="e5d38be6-0752-439b-833e-02d9da3db1b2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93ae7244-5128-40c4-a43b-c67e8f51c81d" type="checkbox" ><label for="93ae7244-5128-40c4-a43b-c67e8f51c81d" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.077 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
