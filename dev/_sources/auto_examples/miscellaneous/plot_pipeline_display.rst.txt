
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa {color: black;background-color: white;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa pre{padding: 0;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-toggleable {background-color: white;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-estimator:hover {background-color: #d4ebff;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-item {z-index: 1;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-parallel-item:only-child::after {width: 0;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa div.sk-text-repr-fallback {display: none;}</style><div id="sk-8cd41c5d-519f-43fa-83b9-bb7ca6b9aaaa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5601e768-40c4-4263-a1cc-e4a01ae842d4" type="checkbox" ><label for="5601e768-40c4-4263-a1cc-e4a01ae842d4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5f3ecb9-4047-4a2f-9950-57b1b1523735" type="checkbox" ><label for="d5f3ecb9-4047-4a2f-9950-57b1b1523735" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1dc3aaa8-501a-4e98-a296-30f6f2a9ade4" type="checkbox" ><label for="1dc3aaa8-501a-4e98-a296-30f6f2a9ade4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-52517016-3f13-489f-909e-9d16df432fe9 {color: black;background-color: white;}#sk-52517016-3f13-489f-909e-9d16df432fe9 pre{padding: 0;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-toggleable {background-color: white;}#sk-52517016-3f13-489f-909e-9d16df432fe9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-52517016-3f13-489f-909e-9d16df432fe9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-52517016-3f13-489f-909e-9d16df432fe9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-52517016-3f13-489f-909e-9d16df432fe9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-52517016-3f13-489f-909e-9d16df432fe9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-52517016-3f13-489f-909e-9d16df432fe9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-item {z-index: 1;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-parallel-item:only-child::after {width: 0;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-52517016-3f13-489f-909e-9d16df432fe9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-52517016-3f13-489f-909e-9d16df432fe9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d82a4e3c-0142-4f15-aae7-71aea1a97757" type="checkbox" ><label for="d82a4e3c-0142-4f15-aae7-71aea1a97757" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="398e3ba9-c190-47df-83cb-fa91356f7b0e" type="checkbox" ><label for="398e3ba9-c190-47df-83cb-fa91356f7b0e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d465b6ae-41b1-4a9b-b016-184d3f84f39c" type="checkbox" ><label for="d465b6ae-41b1-4a9b-b016-184d3f84f39c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="807f3ec5-8f57-47fb-a127-c1c6d27a7686" type="checkbox" ><label for="807f3ec5-8f57-47fb-a127-c1c6d27a7686" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bfc321f5-3f01-4e11-8d0b-963153f839df {color: black;background-color: white;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df pre{padding: 0;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-toggleable {background-color: white;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-estimator:hover {background-color: #d4ebff;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-item {z-index: 1;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-parallel-item:only-child::after {width: 0;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bfc321f5-3f01-4e11-8d0b-963153f839df div.sk-text-repr-fallback {display: none;}</style><div id="sk-bfc321f5-3f01-4e11-8d0b-963153f839df" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48cda542-8465-4a92-a14f-c9eb264468d5" type="checkbox" ><label for="48cda542-8465-4a92-a14f-c9eb264468d5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b93c614-9f4a-4ddd-bd29-ea582b98ffe1" type="checkbox" ><label for="8b93c614-9f4a-4ddd-bd29-ea582b98ffe1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39c0cf10-a954-4f68-941b-19cbb78c9530" type="checkbox" ><label for="39c0cf10-a954-4f68-941b-19cbb78c9530" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 {color: black;background-color: white;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 pre{padding: 0;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-toggleable {background-color: white;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-item {z-index: 1;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-parallel-item:only-child::after {width: 0;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-74e9d4fc-d4ad-4919-850a-4f0cbacc46f2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47cd23aa-57c3-4f4a-9a30-a523d8c99beb" type="checkbox" ><label for="47cd23aa-57c3-4f4a-9a30-a523d8c99beb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14a2912b-9057-4e38-8249-d1b861664b71" type="checkbox" ><label for="14a2912b-9057-4e38-8249-d1b861664b71" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="499b259e-1546-4b41-a313-09a1fb3b289a" type="checkbox" ><label for="499b259e-1546-4b41-a313-09a1fb3b289a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b401c83-db36-4a44-bf07-4fd5abbe2bb7" type="checkbox" ><label for="2b401c83-db36-4a44-bf07-4fd5abbe2bb7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e4b7b9d-6f52-4f46-9c7d-2901299099c3" type="checkbox" ><label for="0e4b7b9d-6f52-4f46-9c7d-2901299099c3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30df3e03-a168-4ff7-b4ff-234e04b0ddf4" type="checkbox" ><label for="30df3e03-a168-4ff7-b4ff-234e04b0ddf4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2eba44cb-e695-4f14-8e6f-c9a037fe9b38" type="checkbox" ><label for="2eba44cb-e695-4f14-8e6f-c9a037fe9b38" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df550225-c413-4df4-a81b-50f69a106c5b" type="checkbox" ><label for="df550225-c413-4df4-a81b-50f69a106c5b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e798fd9f-a178-422b-b1e6-1a9567dd3069" type="checkbox" ><label for="e798fd9f-a178-422b-b1e6-1a9567dd3069" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 {color: black;background-color: white;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 pre{padding: 0;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-toggleable {background-color: white;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-item {z-index: 1;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-parallel-item:only-child::after {width: 0;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6a95fb89-8843-4cdf-aea0-3b5741d4abf9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b14b14c-59d9-48ed-8e52-71bb703efc7f" type="checkbox" ><label for="1b14b14c-59d9-48ed-8e52-71bb703efc7f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2700523-916b-4694-ab7f-3b613e650408" type="checkbox" ><label for="b2700523-916b-4694-ab7f-3b613e650408" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0b01d5f-3900-457c-af5b-1cbf788cc375" type="checkbox" ><label for="e0b01d5f-3900-457c-af5b-1cbf788cc375" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3594601e-4518-4eed-bfc8-45fd7071132f" type="checkbox" ><label for="3594601e-4518-4eed-bfc8-45fd7071132f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce5317f6-954d-4174-93a1-8bde2cbbbc0a" type="checkbox" ><label for="ce5317f6-954d-4174-93a1-8bde2cbbbc0a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="828ebb0e-d37c-4d43-b991-64afc5480522" type="checkbox" ><label for="828ebb0e-d37c-4d43-b991-64afc5480522" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83546049-604c-4874-a786-1b275a1f3752" type="checkbox" ><label for="83546049-604c-4874-a786-1b275a1f3752" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59f527dd-327a-4505-b939-ffca11f54886" type="checkbox" ><label for="59f527dd-327a-4505-b939-ffca11f54886" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acfcb68f-57c2-45b4-8734-c07339bb3b4e" type="checkbox" ><label for="acfcb68f-57c2-45b4-8734-c07339bb3b4e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
