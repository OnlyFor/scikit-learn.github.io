
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a {color: black;background-color: white;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a pre{padding: 0;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-toggleable {background-color: white;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-estimator:hover {background-color: #d4ebff;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-item {z-index: 1;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-parallel-item:only-child::after {width: 0;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-863e7bc9-0d5f-4663-96aa-5607f51d231a div.sk-text-repr-fallback {display: none;}</style><div id="sk-863e7bc9-0d5f-4663-96aa-5607f51d231a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04cfce74-a90c-4bb9-898b-093f7feeb3a6" type="checkbox" ><label for="04cfce74-a90c-4bb9-898b-093f7feeb3a6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a7a63dc-2b43-4baf-9495-63c4987310dd" type="checkbox" ><label for="1a7a63dc-2b43-4baf-9495-63c4987310dd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1fb9421-66d6-4612-b0e9-5846399472d0" type="checkbox" ><label for="c1fb9421-66d6-4612-b0e9-5846399472d0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-76462d48-56fe-45e9-ab92-a12104efdec2 {color: black;background-color: white;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 pre{padding: 0;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-toggleable {background-color: white;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-item {z-index: 1;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-parallel-item:only-child::after {width: 0;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-76462d48-56fe-45e9-ab92-a12104efdec2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-76462d48-56fe-45e9-ab92-a12104efdec2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b11f905-28ff-4b64-802d-d8c85b148467" type="checkbox" ><label for="1b11f905-28ff-4b64-802d-d8c85b148467" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79d55664-4212-473c-8ef7-6a2685f7a93c" type="checkbox" ><label for="79d55664-4212-473c-8ef7-6a2685f7a93c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35991fd7-027c-40f6-b621-55dad96c8fa7" type="checkbox" ><label for="35991fd7-027c-40f6-b621-55dad96c8fa7" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="787c0207-f487-433b-b547-768079ff4e9a" type="checkbox" ><label for="787c0207-f487-433b-b547-768079ff4e9a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 {color: black;background-color: white;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 pre{padding: 0;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-toggleable {background-color: white;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-item {z-index: 1;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-parallel-item:only-child::after {width: 0;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8d187ab0-759c-427e-a475-dcedebd3cb52 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8d187ab0-759c-427e-a475-dcedebd3cb52" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea49683a-63c8-4a93-a4f8-46fa4e9db033" type="checkbox" ><label for="ea49683a-63c8-4a93-a4f8-46fa4e9db033" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62971a2e-7b76-4950-bdb4-7db0013660ab" type="checkbox" ><label for="62971a2e-7b76-4950-bdb4-7db0013660ab" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb637a32-4fd7-4f26-926f-d11fca90429f" type="checkbox" ><label for="bb637a32-4fd7-4f26-926f-d11fca90429f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c {color: black;background-color: white;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c pre{padding: 0;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-toggleable {background-color: white;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-estimator:hover {background-color: #d4ebff;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-item {z-index: 1;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-parallel-item:only-child::after {width: 0;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-52033ae3-0666-4b83-a92f-8fcafee1a97c div.sk-text-repr-fallback {display: none;}</style><div id="sk-52033ae3-0666-4b83-a92f-8fcafee1a97c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18317c66-9164-44bf-a04f-73a2b5cb49c4" type="checkbox" ><label for="18317c66-9164-44bf-a04f-73a2b5cb49c4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb8bf951-5f42-4c59-bc7e-443c304562cc" type="checkbox" ><label for="fb8bf951-5f42-4c59-bc7e-443c304562cc" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="624ec987-8d8c-46dd-bb8e-cd2f82b3abda" type="checkbox" ><label for="624ec987-8d8c-46dd-bb8e-cd2f82b3abda" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec2388c0-386a-4163-bc88-30232caccee5" type="checkbox" ><label for="ec2388c0-386a-4163-bc88-30232caccee5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21156cac-0d99-47fe-9e9c-76ba77533516" type="checkbox" ><label for="21156cac-0d99-47fe-9e9c-76ba77533516" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a0322ec-48d4-418a-8076-0ff384a8738d" type="checkbox" ><label for="8a0322ec-48d4-418a-8076-0ff384a8738d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb6b39d5-d71b-4b15-a85c-2ade1fafafc7" type="checkbox" ><label for="fb6b39d5-d71b-4b15-a85c-2ade1fafafc7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68ff9967-df2b-4a76-993c-ac388f9948d4" type="checkbox" ><label for="68ff9967-df2b-4a76-993c-ac388f9948d4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a5c2170-07d8-4d52-8cf8-efb802d44dd1" type="checkbox" ><label for="4a5c2170-07d8-4d52-8cf8-efb802d44dd1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 {color: black;background-color: white;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 pre{padding: 0;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-toggleable {background-color: white;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-item {z-index: 1;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-parallel-item:only-child::after {width: 0;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1203f76e-4a1f-4893-ac3b-118cc024b532 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1203f76e-4a1f-4893-ac3b-118cc024b532" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e00627c-15ab-4b79-997b-97c49d1a6125" type="checkbox" ><label for="3e00627c-15ab-4b79-997b-97c49d1a6125" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf0116f3-b3b7-41b0-8cfb-a84b25d913e4" type="checkbox" ><label for="cf0116f3-b3b7-41b0-8cfb-a84b25d913e4" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ae431a7-6f10-4bf2-a07c-1347cd2c6e0b" type="checkbox" ><label for="8ae431a7-6f10-4bf2-a07c-1347cd2c6e0b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f8220ad-ebbc-42cd-aeff-d8ea4f9ae030" type="checkbox" ><label for="5f8220ad-ebbc-42cd-aeff-d8ea4f9ae030" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58cc9df1-af73-4c4c-8757-fdbb267ee85a" type="checkbox" ><label for="58cc9df1-af73-4c4c-8757-fdbb267ee85a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="148de578-412c-44e7-8332-d0426f3caea3" type="checkbox" ><label for="148de578-412c-44e7-8332-d0426f3caea3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="785f6f6b-4477-47af-af0e-46d02e15774f" type="checkbox" ><label for="785f6f6b-4477-47af-af0e-46d02e15774f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9733dd2-d475-4231-ae34-7c987bd37b39" type="checkbox" ><label for="e9733dd2-d475-4231-ae34-7c987bd37b39" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c7868ad-0399-4aa7-a98f-b935287618dc" type="checkbox" ><label for="1c7868ad-0399-4aa7-a98f-b935287618dc" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
