
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 {color: black;background-color: white;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 pre{padding: 0;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-toggleable {background-color: white;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-estimator:hover {background-color: #d4ebff;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-item {z-index: 1;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-parallel-item:only-child::after {width: 0;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-344f02f9-50a5-40e7-b367-2bc67ba86a77 div.sk-text-repr-fallback {display: none;}</style><div id="sk-344f02f9-50a5-40e7-b367-2bc67ba86a77" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a572aa98-bb82-4d01-9480-24dcf24666b2" type="checkbox" ><label for="a572aa98-bb82-4d01-9480-24dcf24666b2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="688ad3a8-2a14-465f-ad91-c132dd4b6a12" type="checkbox" ><label for="688ad3a8-2a14-465f-ad91-c132dd4b6a12" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2d3d3ab-78ea-448e-bc08-309534f96c9b" type="checkbox" ><label for="f2d3d3ab-78ea-448e-bc08-309534f96c9b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f {color: black;background-color: white;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f pre{padding: 0;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-toggleable {background-color: white;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-estimator:hover {background-color: #d4ebff;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-item {z-index: 1;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-parallel-item:only-child::after {width: 0;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f div.sk-text-repr-fallback {display: none;}</style><div id="sk-37852cc7-e34f-4f7a-8b0e-56b8be8d3d0f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e93fa937-ff36-4fc5-8fa5-e4981dd4d8be" type="checkbox" ><label for="e93fa937-ff36-4fc5-8fa5-e4981dd4d8be" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f11bb71-0681-4124-8f27-40df538f2d19" type="checkbox" ><label for="1f11bb71-0681-4124-8f27-40df538f2d19" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d8c2df5-2a3d-4e14-850e-05d71d515151" type="checkbox" ><label for="3d8c2df5-2a3d-4e14-850e-05d71d515151" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83b8c2da-b776-40f8-b3f6-f1d295450c58" type="checkbox" ><label for="83b8c2da-b776-40f8-b3f6-f1d295450c58" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 {color: black;background-color: white;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 pre{padding: 0;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-toggleable {background-color: white;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-estimator:hover {background-color: #d4ebff;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-item {z-index: 1;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-parallel-item:only-child::after {width: 0;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49 div.sk-text-repr-fallback {display: none;}</style><div id="sk-95cd7ca7-3d18-4235-9f69-6d00ddb16d49" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1c78257-4346-4a84-9dd6-121a2d58c350" type="checkbox" ><label for="a1c78257-4346-4a84-9dd6-121a2d58c350" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47c55463-6018-4642-96e1-89990db2c04a" type="checkbox" ><label for="47c55463-6018-4642-96e1-89990db2c04a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b7c4df2-b1af-4c2f-a688-7ed0ad1cd117" type="checkbox" ><label for="2b7c4df2-b1af-4c2f-a688-7ed0ad1cd117" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 {color: black;background-color: white;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 pre{padding: 0;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-toggleable {background-color: white;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-item {z-index: 1;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-parallel-item:only-child::after {width: 0;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0cf1594e-8aef-410b-b2c1-18f8c56e6b65" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c4d07be-d540-4daf-9bd2-5625214cc5bd" type="checkbox" ><label for="5c4d07be-d540-4daf-9bd2-5625214cc5bd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49515ab7-0676-47f6-830d-c4f39437eb92" type="checkbox" ><label for="49515ab7-0676-47f6-830d-c4f39437eb92" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a9c0fad-23f1-445b-8fe6-1c9aea5c3050" type="checkbox" ><label for="7a9c0fad-23f1-445b-8fe6-1c9aea5c3050" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc541a1e-a54f-49a5-9a1c-8fd5a51ef1e7" type="checkbox" ><label for="dc541a1e-a54f-49a5-9a1c-8fd5a51ef1e7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b666689-dae1-4b6c-9817-1481f7ecaa20" type="checkbox" ><label for="1b666689-dae1-4b6c-9817-1481f7ecaa20" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1cbcc3b-333b-4f4d-8ed8-cb4696967b09" type="checkbox" ><label for="f1cbcc3b-333b-4f4d-8ed8-cb4696967b09" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e66c8f8-66d3-48b5-b3e8-29cb4a2048af" type="checkbox" ><label for="0e66c8f8-66d3-48b5-b3e8-29cb4a2048af" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80f6dea9-adca-4317-a099-c89768d266d6" type="checkbox" ><label for="80f6dea9-adca-4317-a099-c89768d266d6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb30613a-7d4c-4bc9-80c4-8fbef05ef914" type="checkbox" ><label for="fb30613a-7d4c-4bc9-80c4-8fbef05ef914" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d869061c-8384-4572-b47f-247113b711ff {color: black;background-color: white;}#sk-d869061c-8384-4572-b47f-247113b711ff pre{padding: 0;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-toggleable {background-color: white;}#sk-d869061c-8384-4572-b47f-247113b711ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d869061c-8384-4572-b47f-247113b711ff label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d869061c-8384-4572-b47f-247113b711ff label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d869061c-8384-4572-b47f-247113b711ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d869061c-8384-4572-b47f-247113b711ff input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d869061c-8384-4572-b47f-247113b711ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-item {z-index: 1;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-parallel-item:only-child::after {width: 0;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d869061c-8384-4572-b47f-247113b711ff div.sk-text-repr-fallback {display: none;}</style><div id="sk-d869061c-8384-4572-b47f-247113b711ff" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1c07228-e1d9-4608-b6bb-c3d7db289542" type="checkbox" ><label for="d1c07228-e1d9-4608-b6bb-c3d7db289542" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a53a2626-3036-4091-a462-52f4154c4ea3" type="checkbox" ><label for="a53a2626-3036-4091-a462-52f4154c4ea3" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50e53e01-f690-44bb-a096-d705af9bae16" type="checkbox" ><label for="50e53e01-f690-44bb-a096-d705af9bae16" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a33b4730-6a3c-42db-896d-3d51945d7d55" type="checkbox" ><label for="a33b4730-6a3c-42db-896d-3d51945d7d55" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d6b4292-0e5d-4e5c-9a7b-0ebef8c8c965" type="checkbox" ><label for="6d6b4292-0e5d-4e5c-9a7b-0ebef8c8c965" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ec15bab-18d1-446a-8631-1bfea118b8a1" type="checkbox" ><label for="3ec15bab-18d1-446a-8631-1bfea118b8a1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="145340ad-7ddf-4844-af52-4aab041a0352" type="checkbox" ><label for="145340ad-7ddf-4844-af52-4aab041a0352" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cadcccc-0654-4c11-938d-fb9bf9bdebd6" type="checkbox" ><label for="9cadcccc-0654-4c11-938d-fb9bf9bdebd6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d46a7448-d647-4c78-91aa-3d44f665c2be" type="checkbox" ><label for="d46a7448-d647-4c78-91aa-3d44f665c2be" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.077 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
