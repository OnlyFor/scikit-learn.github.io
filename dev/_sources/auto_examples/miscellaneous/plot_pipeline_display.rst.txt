
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 {color: black;background-color: white;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 pre{padding: 0;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-toggleable {background-color: white;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-item {z-index: 1;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-parallel-item:only-child::after {width: 0;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eb4dd04b-3e37-464d-a08e-0a3b658b0bd7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="765f895f-de41-4899-aedc-e6a38c1bb559" type="checkbox" ><label for="765f895f-de41-4899-aedc-e6a38c1bb559" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ee48657-5a87-4b53-b105-59de20aeb131" type="checkbox" ><label for="2ee48657-5a87-4b53-b105-59de20aeb131" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9796c6a4-673f-46e7-8059-cc990b5cdce1" type="checkbox" ><label for="9796c6a4-673f-46e7-8059-cc990b5cdce1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d {color: black;background-color: white;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d pre{padding: 0;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-toggleable {background-color: white;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-estimator:hover {background-color: #d4ebff;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-item {z-index: 1;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-parallel-item:only-child::after {width: 0;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d div.sk-text-repr-fallback {display: none;}</style><div id="sk-8a3e8e5f-cb4f-4ad2-b1cf-f403198ac73d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f81263a-9f90-453e-99e8-9459b85494d9" type="checkbox" ><label for="6f81263a-9f90-453e-99e8-9459b85494d9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68b87d46-b144-4a2d-a73c-04ca7f9d6d78" type="checkbox" ><label for="68b87d46-b144-4a2d-a73c-04ca7f9d6d78" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="244f6d8f-a092-4bba-806d-447e770b841c" type="checkbox" ><label for="244f6d8f-a092-4bba-806d-447e770b841c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d8fd323-1aa1-485d-a6a8-144dc6289975" type="checkbox" ><label for="0d8fd323-1aa1-485d-a6a8-144dc6289975" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-49a21e80-9e1b-493c-972c-9683b10ede2c {color: black;background-color: white;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c pre{padding: 0;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-toggleable {background-color: white;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-estimator:hover {background-color: #d4ebff;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-item {z-index: 1;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-parallel-item:only-child::after {width: 0;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-49a21e80-9e1b-493c-972c-9683b10ede2c div.sk-text-repr-fallback {display: none;}</style><div id="sk-49a21e80-9e1b-493c-972c-9683b10ede2c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4d01024-c99b-4b09-a383-003b4f130271" type="checkbox" ><label for="f4d01024-c99b-4b09-a383-003b4f130271" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fcbebb7-f0db-4abd-9200-31782b7001bd" type="checkbox" ><label for="1fcbebb7-f0db-4abd-9200-31782b7001bd" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b29aa240-5790-4497-b656-575fcc080f6a" type="checkbox" ><label for="b29aa240-5790-4497-b656-575fcc080f6a" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 {color: black;background-color: white;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 pre{padding: 0;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-toggleable {background-color: white;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-item {z-index: 1;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-parallel-item:only-child::after {width: 0;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6339c0cf-5354-4ea2-988c-d114b6a400c3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6339c0cf-5354-4ea2-988c-d114b6a400c3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45e6e11d-37ae-4c89-81fe-0cfe11ee61ab" type="checkbox" ><label for="45e6e11d-37ae-4c89-81fe-0cfe11ee61ab" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4e9be4e-76ce-44b8-97fe-6710504fe545" type="checkbox" ><label for="c4e9be4e-76ce-44b8-97fe-6710504fe545" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de73c8d2-90f0-486d-8086-6556a8aee40d" type="checkbox" ><label for="de73c8d2-90f0-486d-8086-6556a8aee40d" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f78661b-cb9a-4102-bfac-81a2873a26ec" type="checkbox" ><label for="2f78661b-cb9a-4102-bfac-81a2873a26ec" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="375f308a-0a36-449d-b91a-a4b6056080e0" type="checkbox" ><label for="375f308a-0a36-449d-b91a-a4b6056080e0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d53a819d-9a3e-4e9a-82fb-8510016d24cd" type="checkbox" ><label for="d53a819d-9a3e-4e9a-82fb-8510016d24cd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5deedf6-9557-4501-86c0-2213361bc494" type="checkbox" ><label for="c5deedf6-9557-4501-86c0-2213361bc494" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54c2d93d-f622-4de7-8af1-b852ddc4f56a" type="checkbox" ><label for="54c2d93d-f622-4de7-8af1-b852ddc4f56a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb3cd630-2048-4cc3-aeae-c880221dd71f" type="checkbox" ><label for="fb3cd630-2048-4cc3-aeae-c880221dd71f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7925b373-61f2-408c-8b06-4a82f239d07b {color: black;background-color: white;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b pre{padding: 0;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-toggleable {background-color: white;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-estimator:hover {background-color: #d4ebff;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-item {z-index: 1;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-parallel-item:only-child::after {width: 0;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7925b373-61f2-408c-8b06-4a82f239d07b div.sk-text-repr-fallback {display: none;}</style><div id="sk-7925b373-61f2-408c-8b06-4a82f239d07b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bca3dfb5-a856-4255-89e7-68835a6a510d" type="checkbox" ><label for="bca3dfb5-a856-4255-89e7-68835a6a510d" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cab4842-24b5-47bf-b8af-9314fa14af0d" type="checkbox" ><label for="8cab4842-24b5-47bf-b8af-9314fa14af0d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc8f43e3-7436-434f-86fd-b8540670bbbb" type="checkbox" ><label for="dc8f43e3-7436-434f-86fd-b8540670bbbb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a68570ba-9e4a-4668-9796-e685a6fc4830" type="checkbox" ><label for="a68570ba-9e4a-4668-9796-e685a6fc4830" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b11e8a4b-e0eb-47cb-9cd4-beb51ff23a99" type="checkbox" ><label for="b11e8a4b-e0eb-47cb-9cd4-beb51ff23a99" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19c27126-1040-4ba3-8620-8453c888c70e" type="checkbox" ><label for="19c27126-1040-4ba3-8620-8453c888c70e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f479d0d9-584f-4e4b-aa3e-171c4443b9a7" type="checkbox" ><label for="f479d0d9-584f-4e4b-aa3e-171c4443b9a7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d38087f-9fa6-4579-b2e2-a9a4e4d7c071" type="checkbox" ><label for="7d38087f-9fa6-4579-b2e2-a9a4e4d7c071" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f335f27-44c4-4e32-971d-b2de8e4897a2" type="checkbox" ><label for="7f335f27-44c4-4e32-971d-b2de8e4897a2" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
