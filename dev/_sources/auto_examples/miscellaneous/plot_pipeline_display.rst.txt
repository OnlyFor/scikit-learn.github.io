
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 {color: black;background-color: white;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 pre{padding: 0;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-toggleable {background-color: white;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-item {z-index: 1;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-parallel-item:only-child::after {width: 0;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-da3c4eab-1b2c-4510-9656-c1f4296fc6c5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61971caf-f86c-4332-98f0-eff079ab8925" type="checkbox" ><label for="61971caf-f86c-4332-98f0-eff079ab8925" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="663bc080-143c-4bf0-88be-4f00a2773b16" type="checkbox" ><label for="663bc080-143c-4bf0-88be-4f00a2773b16" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d6b1632-7437-4625-a1b9-052311639f48" type="checkbox" ><label for="1d6b1632-7437-4625-a1b9-052311639f48" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6d423927-6096-454d-8337-c8873dea8473 {color: black;background-color: white;}#sk-6d423927-6096-454d-8337-c8873dea8473 pre{padding: 0;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-toggleable {background-color: white;}#sk-6d423927-6096-454d-8337-c8873dea8473 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6d423927-6096-454d-8337-c8873dea8473 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6d423927-6096-454d-8337-c8873dea8473 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6d423927-6096-454d-8337-c8873dea8473 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6d423927-6096-454d-8337-c8873dea8473 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d423927-6096-454d-8337-c8873dea8473 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-item {z-index: 1;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-parallel-item:only-child::after {width: 0;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6d423927-6096-454d-8337-c8873dea8473 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6d423927-6096-454d-8337-c8873dea8473" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c925a1d3-fc6a-4139-8599-699d585674bd" type="checkbox" ><label for="c925a1d3-fc6a-4139-8599-699d585674bd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e43d763-a3dc-45c8-9e3c-9d857b6fab96" type="checkbox" ><label for="0e43d763-a3dc-45c8-9e3c-9d857b6fab96" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9f2177d-3545-4847-8003-4b333c1dc0c3" type="checkbox" ><label for="c9f2177d-3545-4847-8003-4b333c1dc0c3" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e74a306-a11a-4697-a17b-267809fd8f05" type="checkbox" ><label for="3e74a306-a11a-4697-a17b-267809fd8f05" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 {color: black;background-color: white;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 pre{padding: 0;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-toggleable {background-color: white;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-estimator:hover {background-color: #d4ebff;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-item {z-index: 1;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-parallel-item:only-child::after {width: 0;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45 div.sk-text-repr-fallback {display: none;}</style><div id="sk-00dc7eca-54fd-47c9-9ca3-20a70748bc45" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a2aedca-2deb-4f51-a00c-8621509da68c" type="checkbox" ><label for="8a2aedca-2deb-4f51-a00c-8621509da68c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="663f00d5-5ca9-44a0-9b00-6c0b7c6de79d" type="checkbox" ><label for="663f00d5-5ca9-44a0-9b00-6c0b7c6de79d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efd47b37-6d35-435e-96e3-af91d3af5ede" type="checkbox" ><label for="efd47b37-6d35-435e-96e3-af91d3af5ede" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-94741697-7976-4164-9d8a-06f734f6a4be {color: black;background-color: white;}#sk-94741697-7976-4164-9d8a-06f734f6a4be pre{padding: 0;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-toggleable {background-color: white;}#sk-94741697-7976-4164-9d8a-06f734f6a4be label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-94741697-7976-4164-9d8a-06f734f6a4be label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-94741697-7976-4164-9d8a-06f734f6a4be label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-94741697-7976-4164-9d8a-06f734f6a4be input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-94741697-7976-4164-9d8a-06f734f6a4be input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-94741697-7976-4164-9d8a-06f734f6a4be input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-estimator:hover {background-color: #d4ebff;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-item {z-index: 1;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-parallel-item:only-child::after {width: 0;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-94741697-7976-4164-9d8a-06f734f6a4be div.sk-text-repr-fallback {display: none;}</style><div id="sk-94741697-7976-4164-9d8a-06f734f6a4be" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e362d40-63d8-4b3e-bf97-825b28461706" type="checkbox" ><label for="6e362d40-63d8-4b3e-bf97-825b28461706" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac6ec1e0-c0b9-4596-a30f-a6b653aa2a8c" type="checkbox" ><label for="ac6ec1e0-c0b9-4596-a30f-a6b653aa2a8c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d35b32a-f986-426f-9b32-9e783d918e25" type="checkbox" ><label for="6d35b32a-f986-426f-9b32-9e783d918e25" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c838243-1f68-4eba-8b8f-14b2d1df0e6e" type="checkbox" ><label for="4c838243-1f68-4eba-8b8f-14b2d1df0e6e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d719ddf-fdf1-4135-bc86-3f277486be31" type="checkbox" ><label for="5d719ddf-fdf1-4135-bc86-3f277486be31" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c7dc41e-733c-4602-a251-60014c26207d" type="checkbox" ><label for="7c7dc41e-733c-4602-a251-60014c26207d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7da69d4-26c3-4025-b830-1bca410af63e" type="checkbox" ><label for="d7da69d4-26c3-4025-b830-1bca410af63e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e520b6e-95b7-4f4d-b25c-c814aec08448" type="checkbox" ><label for="7e520b6e-95b7-4f4d-b25c-c814aec08448" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5dbef4a8-4cf7-469f-a906-25bd7f848b43" type="checkbox" ><label for="5dbef4a8-4cf7-469f-a906-25bd7f848b43" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 {color: black;background-color: white;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 pre{padding: 0;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-toggleable {background-color: white;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-item {z-index: 1;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-parallel-item:only-child::after {width: 0;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eb4a7bfc-51e7-4840-b4b6-127212c7f4a4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82817a2f-9e5c-4145-89cd-42857432845b" type="checkbox" ><label for="82817a2f-9e5c-4145-89cd-42857432845b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b0ee69e-ca5e-4fc1-91c1-b1a320c0d4c8" type="checkbox" ><label for="1b0ee69e-ca5e-4fc1-91c1-b1a320c0d4c8" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50e8f078-f47d-464b-aefe-18e59f6dbe74" type="checkbox" ><label for="50e8f078-f47d-464b-aefe-18e59f6dbe74" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7c7759e-5942-405c-98b7-863cae225909" type="checkbox" ><label for="a7c7759e-5942-405c-98b7-863cae225909" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85736109-b5ab-40f5-84bc-6cce51a8479d" type="checkbox" ><label for="85736109-b5ab-40f5-84bc-6cce51a8479d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f6e4aa0-19dd-4e83-95aa-ac79961b97e2" type="checkbox" ><label for="1f6e4aa0-19dd-4e83-95aa-ac79961b97e2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2acdc856-5af2-4ac7-b41a-50c9d8c4c9d9" type="checkbox" ><label for="2acdc856-5af2-4ac7-b41a-50c9d8c4c9d9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08bae8a7-8ea5-4aa3-a70a-cf3ac7d8cc67" type="checkbox" ><label for="08bae8a7-8ea5-4aa3-a70a-cf3ac7d8cc67" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27225f3e-e1c8-42e6-98bf-063a1faa4da8" type="checkbox" ><label for="27225f3e-e1c8-42e6-98bf-063a1faa4da8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
