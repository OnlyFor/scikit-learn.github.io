
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef {color: black;background-color: white;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef pre{padding: 0;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-toggleable {background-color: white;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-estimator:hover {background-color: #d4ebff;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-item {z-index: 1;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-parallel-item:only-child::after {width: 0;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef div.sk-text-repr-fallback {display: none;}</style><div id="sk-d3a67ba9-bbf2-4c12-adef-a175b8ded0ef" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45a7141e-7bd8-467a-bf3f-ba7e24b9380b" type="checkbox" ><label for="45a7141e-7bd8-467a-bf3f-ba7e24b9380b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0f95f76-2d80-4b24-8dfc-96aab90a1b14" type="checkbox" ><label for="a0f95f76-2d80-4b24-8dfc-96aab90a1b14" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d99f4174-2393-4000-be09-c80a235dc4a3" type="checkbox" ><label for="d99f4174-2393-4000-be09-c80a235dc4a3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 {color: black;background-color: white;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 pre{padding: 0;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-toggleable {background-color: white;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-item {z-index: 1;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-parallel-item:only-child::after {width: 0;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3fdce5ab-0a08-4bb4-8c80-d3ea3ec84656" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88b4690c-eaf8-4494-9f2e-d7026cdfd1f9" type="checkbox" ><label for="88b4690c-eaf8-4494-9f2e-d7026cdfd1f9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5727f297-f44f-4f2a-964b-d6a3870ad053" type="checkbox" ><label for="5727f297-f44f-4f2a-964b-d6a3870ad053" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2c61547-542a-4c3c-8b02-18f494024221" type="checkbox" ><label for="c2c61547-542a-4c3c-8b02-18f494024221" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12a0efff-22ed-4800-9028-e5520e40ead6" type="checkbox" ><label for="12a0efff-22ed-4800-9028-e5520e40ead6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 {color: black;background-color: white;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 pre{padding: 0;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-toggleable {background-color: white;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-estimator:hover {background-color: #d4ebff;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-item {z-index: 1;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-parallel-item:only-child::after {width: 0;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-248fbe2d-c42f-4d25-bcd3-d3185969f498 div.sk-text-repr-fallback {display: none;}</style><div id="sk-248fbe2d-c42f-4d25-bcd3-d3185969f498" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba426529-8baa-46f8-ba5f-194059674f84" type="checkbox" ><label for="ba426529-8baa-46f8-ba5f-194059674f84" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c460612-7904-422d-9b01-729fc1a03501" type="checkbox" ><label for="4c460612-7904-422d-9b01-729fc1a03501" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62139633-22e5-4d0a-9412-eccacd29c460" type="checkbox" ><label for="62139633-22e5-4d0a-9412-eccacd29c460" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 {color: black;background-color: white;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 pre{padding: 0;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-toggleable {background-color: white;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-estimator:hover {background-color: #d4ebff;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-item {z-index: 1;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-parallel-item:only-child::after {width: 0;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-949ff070-82ca-46eb-a9e6-91d8a8c68824 div.sk-text-repr-fallback {display: none;}</style><div id="sk-949ff070-82ca-46eb-a9e6-91d8a8c68824" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38ceab3a-12ef-4999-95cc-14ee32cfd4b5" type="checkbox" ><label for="38ceab3a-12ef-4999-95cc-14ee32cfd4b5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7908df8e-db17-47a5-9f53-9f2a7a6ed378" type="checkbox" ><label for="7908df8e-db17-47a5-9f53-9f2a7a6ed378" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96bb7573-9c36-41e6-a300-8cfb3cab3e45" type="checkbox" ><label for="96bb7573-9c36-41e6-a300-8cfb3cab3e45" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="966865ce-4abd-48c3-9430-eabfac4760bc" type="checkbox" ><label for="966865ce-4abd-48c3-9430-eabfac4760bc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="faac0fe0-3cad-4cf0-992b-3239c4ae6215" type="checkbox" ><label for="faac0fe0-3cad-4cf0-992b-3239c4ae6215" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="528e41d8-6bfc-4810-b10d-ef4b370c107d" type="checkbox" ><label for="528e41d8-6bfc-4810-b10d-ef4b370c107d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56db8dbd-fbec-4ca4-b5d4-d9d2413a49e7" type="checkbox" ><label for="56db8dbd-fbec-4ca4-b5d4-d9d2413a49e7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9616b73-5724-4f0a-b9a5-e90cdc4caa8e" type="checkbox" ><label for="e9616b73-5724-4f0a-b9a5-e90cdc4caa8e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="113849d3-d563-41a2-99a0-69c639b625f0" type="checkbox" ><label for="113849d3-d563-41a2-99a0-69c639b625f0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bb59ceff-780f-4525-ab5e-6fc699094645 {color: black;background-color: white;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 pre{padding: 0;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-toggleable {background-color: white;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-item {z-index: 1;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-parallel-item:only-child::after {width: 0;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bb59ceff-780f-4525-ab5e-6fc699094645 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bb59ceff-780f-4525-ab5e-6fc699094645" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4427bab8-fe6f-458f-9b49-6c662186d6c6" type="checkbox" ><label for="4427bab8-fe6f-458f-9b49-6c662186d6c6" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8624de0-8bfe-4290-875a-3f335832a6a0" type="checkbox" ><label for="f8624de0-8bfe-4290-875a-3f335832a6a0" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a45c1fd2-4c5c-4fe9-9fa9-23ebd58bfcbd" type="checkbox" ><label for="a45c1fd2-4c5c-4fe9-9fa9-23ebd58bfcbd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47c4e2d6-cea4-4f40-93cb-86036b878f99" type="checkbox" ><label for="47c4e2d6-cea4-4f40-93cb-86036b878f99" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0aaf61d-d23e-46f8-96b8-373bd6939548" type="checkbox" ><label for="b0aaf61d-d23e-46f8-96b8-373bd6939548" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c0340c4-d1c0-4fb8-8ac5-fdf125d6bf38" type="checkbox" ><label for="7c0340c4-d1c0-4fb8-8ac5-fdf125d6bf38" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5ead21f-9218-4c7d-9c57-02c93a359145" type="checkbox" ><label for="d5ead21f-9218-4c7d-9c57-02c93a359145" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e88c1ae-0c25-412a-9c82-1c4c11b527a3" type="checkbox" ><label for="5e88c1ae-0c25-412a-9c82-1c4c11b527a3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="611008ef-002a-4428-bcc9-c9d24636d18c" type="checkbox" ><label for="611008ef-002a-4428-bcc9-c9d24636d18c" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
