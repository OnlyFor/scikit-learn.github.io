
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0434e166-92a7-40df-bf67-d6bfd58899af {color: black;background-color: white;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af pre{padding: 0;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-toggleable {background-color: white;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-estimator:hover {background-color: #d4ebff;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-item {z-index: 1;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-parallel-item:only-child::after {width: 0;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0434e166-92a7-40df-bf67-d6bfd58899af div.sk-text-repr-fallback {display: none;}</style><div id="sk-0434e166-92a7-40df-bf67-d6bfd58899af" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c12092c0-b8b4-4ba9-a8a0-8536e1c26a89" type="checkbox" ><label for="c12092c0-b8b4-4ba9-a8a0-8536e1c26a89" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29fc561e-72ec-457f-b7a5-f558053dc762" type="checkbox" ><label for="29fc561e-72ec-457f-b7a5-f558053dc762" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4b1b615-93ac-46f9-86dc-faef5b9046bc" type="checkbox" ><label for="c4b1b615-93ac-46f9-86dc-faef5b9046bc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d387057c-4c49-44df-ab42-57bae7062566 {color: black;background-color: white;}#sk-d387057c-4c49-44df-ab42-57bae7062566 pre{padding: 0;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-toggleable {background-color: white;}#sk-d387057c-4c49-44df-ab42-57bae7062566 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d387057c-4c49-44df-ab42-57bae7062566 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d387057c-4c49-44df-ab42-57bae7062566 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d387057c-4c49-44df-ab42-57bae7062566 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d387057c-4c49-44df-ab42-57bae7062566 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d387057c-4c49-44df-ab42-57bae7062566 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-item {z-index: 1;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-parallel-item:only-child::after {width: 0;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d387057c-4c49-44df-ab42-57bae7062566 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d387057c-4c49-44df-ab42-57bae7062566" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0644217c-1535-4646-9d77-18af6fdcdd3c" type="checkbox" ><label for="0644217c-1535-4646-9d77-18af6fdcdd3c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d963653-3315-4dca-bfb6-5edd07567e37" type="checkbox" ><label for="6d963653-3315-4dca-bfb6-5edd07567e37" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ee19088-3de9-4e42-af42-9eb623a038ef" type="checkbox" ><label for="9ee19088-3de9-4e42-af42-9eb623a038ef" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c800998e-4d2e-4c34-8ed3-be42c3401e78" type="checkbox" ><label for="c800998e-4d2e-4c34-8ed3-be42c3401e78" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 {color: black;background-color: white;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 pre{padding: 0;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-toggleable {background-color: white;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-item {z-index: 1;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-parallel-item:only-child::after {width: 0;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e4442df2-1cc7-4fb5-83f3-f82b0359e525" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e059bb54-b806-4360-972b-1bf82226edf8" type="checkbox" ><label for="e059bb54-b806-4360-972b-1bf82226edf8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0264813-de40-4bcf-a83a-b381547d6d2c" type="checkbox" ><label for="c0264813-de40-4bcf-a83a-b381547d6d2c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5945aab7-4e6b-4b82-8dc9-1278912047b6" type="checkbox" ><label for="5945aab7-4e6b-4b82-8dc9-1278912047b6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-979368c8-2e7a-4615-8087-8e2d430894f9 {color: black;background-color: white;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 pre{padding: 0;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-toggleable {background-color: white;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-item {z-index: 1;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-parallel-item:only-child::after {width: 0;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-979368c8-2e7a-4615-8087-8e2d430894f9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-979368c8-2e7a-4615-8087-8e2d430894f9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67d3f128-c07e-4aa2-8565-d11829d8505f" type="checkbox" ><label for="67d3f128-c07e-4aa2-8565-d11829d8505f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5985701-731e-47ee-a237-43bb4dd90a08" type="checkbox" ><label for="f5985701-731e-47ee-a237-43bb4dd90a08" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fddef40-74ea-4d1f-b45b-d46ed5457f9c" type="checkbox" ><label for="6fddef40-74ea-4d1f-b45b-d46ed5457f9c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdd0bca5-78ad-490a-9f6c-29b72efc2a34" type="checkbox" ><label for="bdd0bca5-78ad-490a-9f6c-29b72efc2a34" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fabba3a-cb82-4267-a608-244aa45ee1f7" type="checkbox" ><label for="3fabba3a-cb82-4267-a608-244aa45ee1f7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7a0741a-5d27-4e53-854a-9f3aa0915057" type="checkbox" ><label for="f7a0741a-5d27-4e53-854a-9f3aa0915057" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc0455be-3e90-41ac-8ac2-0f70297bf2b4" type="checkbox" ><label for="fc0455be-3e90-41ac-8ac2-0f70297bf2b4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c992e6e4-7d10-4426-b6fb-40d5daee2ed7" type="checkbox" ><label for="c992e6e4-7d10-4426-b6fb-40d5daee2ed7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="216e264d-8678-4930-ae15-8f8e115779b4" type="checkbox" ><label for="216e264d-8678-4930-ae15-8f8e115779b4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab {color: black;background-color: white;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab pre{padding: 0;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-toggleable {background-color: white;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-estimator:hover {background-color: #d4ebff;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-item {z-index: 1;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-parallel-item:only-child::after {width: 0;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2f5e5a42-8493-4253-9ea0-80a52770fbab div.sk-text-repr-fallback {display: none;}</style><div id="sk-2f5e5a42-8493-4253-9ea0-80a52770fbab" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f37685bf-64ff-40b6-b425-6efd15f919a1" type="checkbox" ><label for="f37685bf-64ff-40b6-b425-6efd15f919a1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11a0adf4-010a-480e-acdf-7f39686866da" type="checkbox" ><label for="11a0adf4-010a-480e-acdf-7f39686866da" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93348b04-4a08-4235-8b62-39cdf9c32f95" type="checkbox" ><label for="93348b04-4a08-4235-8b62-39cdf9c32f95" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd425082-2e40-48ad-a84f-f268150311bd" type="checkbox" ><label for="bd425082-2e40-48ad-a84f-f268150311bd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07742567-26a3-472a-a6bd-03357998959d" type="checkbox" ><label for="07742567-26a3-472a-a6bd-03357998959d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a08b2db2-ac18-4269-ab42-6b9ea689c4df" type="checkbox" ><label for="a08b2db2-ac18-4269-ab42-6b9ea689c4df" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bd05494-76d4-45c3-b265-860078fb48c8" type="checkbox" ><label for="8bd05494-76d4-45c3-b265-860078fb48c8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1a2b8af-d37b-4504-b2a2-ad3434adb0e7" type="checkbox" ><label for="b1a2b8af-d37b-4504-b2a2-ad3434adb0e7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91e38f19-6c1d-4f0a-b5ef-141dd3c678a9" type="checkbox" ><label for="91e38f19-6c1d-4f0a-b5ef-141dd3c678a9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
