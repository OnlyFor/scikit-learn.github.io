
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 {color: black;background-color: white;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 pre{padding: 0;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-toggleable {background-color: white;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-item {z-index: 1;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-parallel-item:only-child::after {width: 0;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3b79b7a3-5c28-4344-a115-ac4aacdeb466" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6cd894fb-ba01-4f15-8e0d-a1c286a766da" type="checkbox" ><label for="6cd894fb-ba01-4f15-8e0d-a1c286a766da" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6499e557-9841-4c1a-a7dd-18cd3f30fab3" type="checkbox" ><label for="6499e557-9841-4c1a-a7dd-18cd3f30fab3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e599480e-010e-42f7-a7cf-c8ba805ebe94" type="checkbox" ><label for="e599480e-010e-42f7-a7cf-c8ba805ebe94" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5c983c36-afd0-417d-8c80-d1c72078593c {color: black;background-color: white;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c pre{padding: 0;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-toggleable {background-color: white;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-estimator:hover {background-color: #d4ebff;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-item {z-index: 1;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-parallel-item:only-child::after {width: 0;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5c983c36-afd0-417d-8c80-d1c72078593c div.sk-text-repr-fallback {display: none;}</style><div id="sk-5c983c36-afd0-417d-8c80-d1c72078593c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50a1c28e-1204-4d9f-96cd-50a71698cfbb" type="checkbox" ><label for="50a1c28e-1204-4d9f-96cd-50a71698cfbb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a05ce7a-34d1-4692-b486-1d22e08c9ba0" type="checkbox" ><label for="9a05ce7a-34d1-4692-b486-1d22e08c9ba0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b7500be-6f94-4755-a4ed-4e1d49b72b32" type="checkbox" ><label for="4b7500be-6f94-4755-a4ed-4e1d49b72b32" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dad8ce04-2752-44eb-9dee-df932b67a487" type="checkbox" ><label for="dad8ce04-2752-44eb-9dee-df932b67a487" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b768db68-fd0f-48a2-951c-406770161a89 {color: black;background-color: white;}#sk-b768db68-fd0f-48a2-951c-406770161a89 pre{padding: 0;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-toggleable {background-color: white;}#sk-b768db68-fd0f-48a2-951c-406770161a89 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b768db68-fd0f-48a2-951c-406770161a89 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b768db68-fd0f-48a2-951c-406770161a89 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b768db68-fd0f-48a2-951c-406770161a89 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b768db68-fd0f-48a2-951c-406770161a89 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b768db68-fd0f-48a2-951c-406770161a89 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-item {z-index: 1;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-parallel-item:only-child::after {width: 0;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b768db68-fd0f-48a2-951c-406770161a89 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b768db68-fd0f-48a2-951c-406770161a89" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5e36544-ab47-49b9-a078-3b0b1985933e" type="checkbox" ><label for="b5e36544-ab47-49b9-a078-3b0b1985933e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d249dc2-0516-4be5-81db-22b92f6a8fad" type="checkbox" ><label for="3d249dc2-0516-4be5-81db-22b92f6a8fad" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1aea359-c0d5-456c-8537-aa84a5a72431" type="checkbox" ><label for="e1aea359-c0d5-456c-8537-aa84a5a72431" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 {color: black;background-color: white;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 pre{padding: 0;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-toggleable {background-color: white;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-item {z-index: 1;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-parallel-item:only-child::after {width: 0;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6acad57f-6f3e-4f86-b275-e362d0c51d10 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6acad57f-6f3e-4f86-b275-e362d0c51d10" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afadb3b5-56d2-4221-8d80-3b4fef8637d6" type="checkbox" ><label for="afadb3b5-56d2-4221-8d80-3b4fef8637d6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17c99853-154a-4bbb-ad3c-2cbf5f5e1fc7" type="checkbox" ><label for="17c99853-154a-4bbb-ad3c-2cbf5f5e1fc7" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="205d7722-987d-4890-9abc-9bf90bb30bab" type="checkbox" ><label for="205d7722-987d-4890-9abc-9bf90bb30bab" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04279234-2911-4ab9-8e90-92fe3b26268b" type="checkbox" ><label for="04279234-2911-4ab9-8e90-92fe3b26268b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1e63a53-f892-4c8d-80a1-367a890aea78" type="checkbox" ><label for="c1e63a53-f892-4c8d-80a1-367a890aea78" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc8e4a92-8a4f-4cd9-90c0-c3de1495cc8a" type="checkbox" ><label for="bc8e4a92-8a4f-4cd9-90c0-c3de1495cc8a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="683b7d27-2e26-4f71-a32d-c448b0d712c0" type="checkbox" ><label for="683b7d27-2e26-4f71-a32d-c448b0d712c0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1999a4e5-58ff-4021-8838-4535a4c6f4e2" type="checkbox" ><label for="1999a4e5-58ff-4021-8838-4535a4c6f4e2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a65d4759-6c24-46de-83d0-ce89ff93594e" type="checkbox" ><label for="a65d4759-6c24-46de-83d0-ce89ff93594e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 {color: black;background-color: white;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 pre{padding: 0;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-toggleable {background-color: white;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-item {z-index: 1;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-parallel-item:only-child::after {width: 0;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5f85c8bf-44f8-4fb4-91b8-1d42b87e29b8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0f448db-68df-4e06-af04-af61e21f5f6e" type="checkbox" ><label for="d0f448db-68df-4e06-af04-af61e21f5f6e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be8af4ce-f7c8-4351-a8d9-79d76a0fb4d7" type="checkbox" ><label for="be8af4ce-f7c8-4351-a8d9-79d76a0fb4d7" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68d7fc4b-10e7-4abb-8225-c1d62cd55ba2" type="checkbox" ><label for="68d7fc4b-10e7-4abb-8225-c1d62cd55ba2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92649a2f-d8fd-4285-93af-129204810d24" type="checkbox" ><label for="92649a2f-d8fd-4285-93af-129204810d24" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b656b9d-2b33-487c-9e25-58dc371f6d80" type="checkbox" ><label for="6b656b9d-2b33-487c-9e25-58dc371f6d80" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0309c5f-c527-4446-9aae-42e334aad72f" type="checkbox" ><label for="e0309c5f-c527-4446-9aae-42e334aad72f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb300bb6-cbf6-423c-bf62-32841961ac99" type="checkbox" ><label for="cb300bb6-cbf6-423c-bf62-32841961ac99" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6097abf0-eb15-4a74-aee7-f40041325281" type="checkbox" ><label for="6097abf0-eb15-4a74-aee7-f40041325281" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="846aebd7-179f-4722-b2a5-ae3bc798e071" type="checkbox" ><label for="846aebd7-179f-4722-b2a5-ae3bc798e071" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
