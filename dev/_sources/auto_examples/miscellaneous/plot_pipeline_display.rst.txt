
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c8629517-8956-4850-8e59-58f6c913eb71 {color: black;background-color: white;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 pre{padding: 0;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-toggleable {background-color: white;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-item {z-index: 1;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-parallel-item:only-child::after {width: 0;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c8629517-8956-4850-8e59-58f6c913eb71 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c8629517-8956-4850-8e59-58f6c913eb71" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="205953dd-246a-40a9-8321-894fd8956002" type="checkbox" ><label for="205953dd-246a-40a9-8321-894fd8956002" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54e0ed46-bdc4-41a7-aded-6e4bc073db60" type="checkbox" ><label for="54e0ed46-bdc4-41a7-aded-6e4bc073db60" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e050189-f2f6-4e5c-ae8f-e3a225664861" type="checkbox" ><label for="7e050189-f2f6-4e5c-ae8f-e3a225664861" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce {color: black;background-color: white;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce pre{padding: 0;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-toggleable {background-color: white;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-estimator:hover {background-color: #d4ebff;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-item {z-index: 1;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-parallel-item:only-child::after {width: 0;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-11824a08-bbee-40c3-b982-e409aa3fe8ce div.sk-text-repr-fallback {display: none;}</style><div id="sk-11824a08-bbee-40c3-b982-e409aa3fe8ce" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16f92a40-1b2d-4907-bc9c-a564a048c61b" type="checkbox" ><label for="16f92a40-1b2d-4907-bc9c-a564a048c61b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="912a37ba-6825-40b7-b563-67fc62241efb" type="checkbox" ><label for="912a37ba-6825-40b7-b563-67fc62241efb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3988d52b-358b-4fcf-b816-8a95b78ce23a" type="checkbox" ><label for="3988d52b-358b-4fcf-b816-8a95b78ce23a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9633b122-5988-4506-bae4-4588ede79c78" type="checkbox" ><label for="9633b122-5988-4506-bae4-4588ede79c78" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a {color: black;background-color: white;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a pre{padding: 0;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-toggleable {background-color: white;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-estimator:hover {background-color: #d4ebff;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-item {z-index: 1;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-parallel-item:only-child::after {width: 0;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7166a78e-c9ba-4b12-95fe-cd53788a341a div.sk-text-repr-fallback {display: none;}</style><div id="sk-7166a78e-c9ba-4b12-95fe-cd53788a341a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f59c7d1-30e4-453b-bd51-8f41d264ef77" type="checkbox" ><label for="1f59c7d1-30e4-453b-bd51-8f41d264ef77" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9ba8580-4b51-420d-ae85-daa0b4053797" type="checkbox" ><label for="d9ba8580-4b51-420d-ae85-daa0b4053797" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="393d50ce-1ac3-45bc-a938-3dacddb4fc1d" type="checkbox" ><label for="393d50ce-1ac3-45bc-a938-3dacddb4fc1d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-58213db1-a2ca-45fa-9625-f4eabb235659 {color: black;background-color: white;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 pre{padding: 0;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-toggleable {background-color: white;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-estimator:hover {background-color: #d4ebff;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-item {z-index: 1;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-parallel-item:only-child::after {width: 0;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-58213db1-a2ca-45fa-9625-f4eabb235659 div.sk-text-repr-fallback {display: none;}</style><div id="sk-58213db1-a2ca-45fa-9625-f4eabb235659" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22fcc9bd-9089-4f4a-a7ca-2f74ee4bdba4" type="checkbox" ><label for="22fcc9bd-9089-4f4a-a7ca-2f74ee4bdba4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a94dc68-38da-4031-b087-8834fb443e0a" type="checkbox" ><label for="6a94dc68-38da-4031-b087-8834fb443e0a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d27e1663-1185-47da-8487-cd7dc6bc79b2" type="checkbox" ><label for="d27e1663-1185-47da-8487-cd7dc6bc79b2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88c35b9c-4aa9-44df-b659-c328ecafdb21" type="checkbox" ><label for="88c35b9c-4aa9-44df-b659-c328ecafdb21" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb4facaf-e746-4e68-8464-a6b5dca711a3" type="checkbox" ><label for="eb4facaf-e746-4e68-8464-a6b5dca711a3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b260a38-e21c-40a5-88e6-d145af05f640" type="checkbox" ><label for="4b260a38-e21c-40a5-88e6-d145af05f640" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11daf915-1326-47a9-9613-d5be7d333afa" type="checkbox" ><label for="11daf915-1326-47a9-9613-d5be7d333afa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12186e76-4715-4bb2-86d3-181192467bab" type="checkbox" ><label for="12186e76-4715-4bb2-86d3-181192467bab" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df6e23b9-9906-4fd0-bc1c-30ca014e6348" type="checkbox" ><label for="df6e23b9-9906-4fd0-bc1c-30ca014e6348" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d {color: black;background-color: white;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d pre{padding: 0;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-toggleable {background-color: white;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-estimator:hover {background-color: #d4ebff;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-item {z-index: 1;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-parallel-item:only-child::after {width: 0;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d div.sk-text-repr-fallback {display: none;}</style><div id="sk-cb3bdc82-3bcb-4d8e-9ab7-5cdb8fb2d18d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dde6dbd9-d140-412f-9b5d-184f65571364" type="checkbox" ><label for="dde6dbd9-d140-412f-9b5d-184f65571364" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcd663fa-d4e3-4c62-8a49-b48f4c25a81a" type="checkbox" ><label for="fcd663fa-d4e3-4c62-8a49-b48f4c25a81a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0f61896-3d21-4c17-a887-d9cee6d1de4a" type="checkbox" ><label for="a0f61896-3d21-4c17-a887-d9cee6d1de4a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ab63eba-8ef6-4820-9419-cfc8506a8153" type="checkbox" ><label for="2ab63eba-8ef6-4820-9419-cfc8506a8153" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49091115-c09c-4be0-a5b1-9f2e76649cb1" type="checkbox" ><label for="49091115-c09c-4be0-a5b1-9f2e76649cb1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbfd29c6-d4aa-4e23-b9d1-a0d251bbc30f" type="checkbox" ><label for="dbfd29c6-d4aa-4e23-b9d1-a0d251bbc30f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef0e36fd-7948-4fe9-8319-c30136120898" type="checkbox" ><label for="ef0e36fd-7948-4fe9-8319-c30136120898" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b1bdddf-4d45-4730-a652-9cab58387e13" type="checkbox" ><label for="2b1bdddf-4d45-4730-a652-9cab58387e13" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69f4c6e5-7544-4047-8cb3-21438cffafd7" type="checkbox" ><label for="69f4c6e5-7544-4047-8cb3-21438cffafd7" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
