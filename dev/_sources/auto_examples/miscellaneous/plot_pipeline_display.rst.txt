
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d9cdf227-d051-44ca-9851-e69928089d30 {color: black;background-color: white;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 pre{padding: 0;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-toggleable {background-color: white;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-item {z-index: 1;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-parallel-item:only-child::after {width: 0;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d9cdf227-d051-44ca-9851-e69928089d30 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d9cdf227-d051-44ca-9851-e69928089d30" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="607f05a9-7d0b-4ae9-a0f6-5a4305401ff8" type="checkbox" ><label for="607f05a9-7d0b-4ae9-a0f6-5a4305401ff8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43ca065f-8238-4d5a-9d60-c8ffa70a84e4" type="checkbox" ><label for="43ca065f-8238-4d5a-9d60-c8ffa70a84e4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15107095-a35d-4bfd-bf50-e4beaeda3a6a" type="checkbox" ><label for="15107095-a35d-4bfd-bf50-e4beaeda3a6a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c {color: black;background-color: white;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c pre{padding: 0;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-toggleable {background-color: white;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-estimator:hover {background-color: #d4ebff;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-item {z-index: 1;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-parallel-item:only-child::after {width: 0;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c div.sk-text-repr-fallback {display: none;}</style><div id="sk-19f4e32b-9bbb-41ae-8e01-b804121cb90c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fb6ad7a-2f3b-44d6-8737-252579937de4" type="checkbox" ><label for="4fb6ad7a-2f3b-44d6-8737-252579937de4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5934e217-4c1e-42a5-839b-2e986caeb081" type="checkbox" ><label for="5934e217-4c1e-42a5-839b-2e986caeb081" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e375099-744a-493b-b008-29f03da2609d" type="checkbox" ><label for="4e375099-744a-493b-b008-29f03da2609d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06847e07-9ade-4b44-bfe8-92887684592a" type="checkbox" ><label for="06847e07-9ade-4b44-bfe8-92887684592a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-702543d0-e125-43b2-ad61-a03bf24ed278 {color: black;background-color: white;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 pre{padding: 0;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-toggleable {background-color: white;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-estimator:hover {background-color: #d4ebff;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-item {z-index: 1;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-parallel-item:only-child::after {width: 0;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-702543d0-e125-43b2-ad61-a03bf24ed278 div.sk-text-repr-fallback {display: none;}</style><div id="sk-702543d0-e125-43b2-ad61-a03bf24ed278" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="047f1a55-6d94-4b51-99b0-124a1e27f1a0" type="checkbox" ><label for="047f1a55-6d94-4b51-99b0-124a1e27f1a0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3470098b-8e82-4e23-aa89-ad30fb7c8237" type="checkbox" ><label for="3470098b-8e82-4e23-aa89-ad30fb7c8237" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52665a20-2ad8-436c-ba74-f720c8135f5f" type="checkbox" ><label for="52665a20-2ad8-436c-ba74-f720c8135f5f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a {color: black;background-color: white;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a pre{padding: 0;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-toggleable {background-color: white;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-estimator:hover {background-color: #d4ebff;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-item {z-index: 1;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-parallel-item:only-child::after {width: 0;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a div.sk-text-repr-fallback {display: none;}</style><div id="sk-9412bd04-cab3-44b4-8d07-7cab481e7c2a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5115c878-c7db-4ad3-a4ba-1e35003a8976" type="checkbox" ><label for="5115c878-c7db-4ad3-a4ba-1e35003a8976" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="565b2cc0-fe08-4175-a2e4-a705c50b5db7" type="checkbox" ><label for="565b2cc0-fe08-4175-a2e4-a705c50b5db7" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbba140a-fce2-4254-b773-f975fbc54a21" type="checkbox" ><label for="fbba140a-fce2-4254-b773-f975fbc54a21" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96b70697-0ff3-495f-bbf4-415f0d7d266a" type="checkbox" ><label for="96b70697-0ff3-495f-bbf4-415f0d7d266a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b010c82a-f22f-47e8-a63f-297c93f3caab" type="checkbox" ><label for="b010c82a-f22f-47e8-a63f-297c93f3caab" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b693a0de-17af-4737-a396-821c040f8923" type="checkbox" ><label for="b693a0de-17af-4737-a396-821c040f8923" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95dc510f-ead9-4b96-838d-b76843b73fa8" type="checkbox" ><label for="95dc510f-ead9-4b96-838d-b76843b73fa8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27663cee-74b7-4b0c-8aed-24c9e1818d2d" type="checkbox" ><label for="27663cee-74b7-4b0c-8aed-24c9e1818d2d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40572710-9570-4135-a138-c06f4c0f5f4e" type="checkbox" ><label for="40572710-9570-4135-a138-c06f4c0f5f4e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a33a105c-fce7-4402-aea1-73f0653fc3df {color: black;background-color: white;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df pre{padding: 0;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-toggleable {background-color: white;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-estimator:hover {background-color: #d4ebff;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-item {z-index: 1;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-parallel-item:only-child::after {width: 0;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a33a105c-fce7-4402-aea1-73f0653fc3df div.sk-text-repr-fallback {display: none;}</style><div id="sk-a33a105c-fce7-4402-aea1-73f0653fc3df" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e3b0d8a-f41c-428c-b479-d0ad967b4008" type="checkbox" ><label for="8e3b0d8a-f41c-428c-b479-d0ad967b4008" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb733904-4c60-4731-99a8-29e3960cc602" type="checkbox" ><label for="cb733904-4c60-4731-99a8-29e3960cc602" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45acaa74-f142-426d-817f-8f2671c55f6f" type="checkbox" ><label for="45acaa74-f142-426d-817f-8f2671c55f6f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c637537d-aa30-4dee-b51a-79a12bebb0fa" type="checkbox" ><label for="c637537d-aa30-4dee-b51a-79a12bebb0fa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f89f49b6-3d0e-485d-b88e-d3fc43bdc3ef" type="checkbox" ><label for="f89f49b6-3d0e-485d-b88e-d3fc43bdc3ef" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c75bc93-aa1f-4066-9627-fadde86ff4f9" type="checkbox" ><label for="0c75bc93-aa1f-4066-9627-fadde86ff4f9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="573f9750-641b-47b2-ba9c-c82a00d10eaf" type="checkbox" ><label for="573f9750-641b-47b2-ba9c-c82a00d10eaf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c7c3d18-242a-426b-80c4-74a6d1fa5a8b" type="checkbox" ><label for="1c7c3d18-242a-426b-80c4-74a6d1fa5a8b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02ed5dc3-5f81-4ec5-a46e-55ec57d4f117" type="checkbox" ><label for="02ed5dc3-5f81-4ec5-a46e-55ec57d4f117" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.113 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
