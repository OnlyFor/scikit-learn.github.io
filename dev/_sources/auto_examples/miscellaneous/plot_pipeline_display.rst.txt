
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 {color: black;background-color: white;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 pre{padding: 0;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-toggleable {background-color: white;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-item {z-index: 1;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-parallel-item:only-child::after {width: 0;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-container {display: inline-block;position: relative;}#sk-b3e375e8-2cba-4f20-a35e-4f029163d465 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b3e375e8-2cba-4f20-a35e-4f029163d465" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84404144-cba7-45bd-baac-53d6a15bc25a" type="checkbox" ><label class="sk-toggleable__label" for="84404144-cba7-45bd-baac-53d6a15bc25a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db4aa48c-15e1-4838-ac88-86e82218f392" type="checkbox" ><label class="sk-toggleable__label" for="db4aa48c-15e1-4838-ac88-86e82218f392">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca25386d-2b4f-4b1c-ab21-e8126c2b0054" type="checkbox" ><label class="sk-toggleable__label" for="ca25386d-2b4f-4b1c-ab21-e8126c2b0054">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e {color: black;background-color: white;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e pre{padding: 0;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-toggleable {background-color: white;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-estimator:hover {background-color: #d4ebff;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-item {z-index: 1;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-parallel-item:only-child::after {width: 0;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-container {display: inline-block;position: relative;}#sk-9a2f9b80-98da-427e-84ed-e25ddc94557e div.sk-text-repr-fallback {display: none;}</style><div id="sk-9a2f9b80-98da-427e-84ed-e25ddc94557e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1df56f6b-63b3-403a-b549-1d8620126a2a" type="checkbox" ><label class="sk-toggleable__label" for="1df56f6b-63b3-403a-b549-1d8620126a2a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7d26d67-db42-4df6-a366-5f54ac945bb9" type="checkbox" ><label class="sk-toggleable__label" for="c7d26d67-db42-4df6-a366-5f54ac945bb9">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b621e6b9-e1c6-4286-8b5a-3835a906dbd0" type="checkbox" ><label class="sk-toggleable__label" for="b621e6b9-e1c6-4286-8b5a-3835a906dbd0">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3afbbe2f-50d3-4bc2-9f3e-9d00c1ae0662" type="checkbox" ><label class="sk-toggleable__label" for="3afbbe2f-50d3-4bc2-9f3e-9d00c1ae0662">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 {color: black;background-color: white;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 pre{padding: 0;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-toggleable {background-color: white;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-estimator:hover {background-color: #d4ebff;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-item {z-index: 1;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-parallel-item:only-child::after {width: 0;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-container {display: inline-block;position: relative;}#sk-56fa7d48-3757-48cc-b540-2cf2d34c9989 div.sk-text-repr-fallback {display: none;}</style><div id="sk-56fa7d48-3757-48cc-b540-2cf2d34c9989" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4137d712-c08a-4563-8b2b-d49edcd8257d" type="checkbox" ><label class="sk-toggleable__label" for="4137d712-c08a-4563-8b2b-d49edcd8257d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a85b93a-e397-4110-a868-5f9671657390" type="checkbox" ><label class="sk-toggleable__label" for="3a85b93a-e397-4110-a868-5f9671657390">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a33802d-1b6f-4c5a-9a9a-b0541fa9477e" type="checkbox" ><label class="sk-toggleable__label" for="5a33802d-1b6f-4c5a-9a9a-b0541fa9477e">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 {color: black;background-color: white;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 pre{padding: 0;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-toggleable {background-color: white;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-item {z-index: 1;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-parallel-item:only-child::after {width: 0;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-container {display: inline-block;position: relative;}#sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2c46c9f5-84ee-4683-9af3-f3a02b21e837" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae8c4dd0-02a5-4f30-b89b-0516498da201" type="checkbox" ><label class="sk-toggleable__label" for="ae8c4dd0-02a5-4f30-b89b-0516498da201">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0591447f-a256-46c2-9bfd-d04ea8042198" type="checkbox" ><label class="sk-toggleable__label" for="0591447f-a256-46c2-9bfd-d04ea8042198">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea6aa393-664c-4cbf-94a9-e131fb456aa8" type="checkbox" ><label class="sk-toggleable__label" for="ea6aa393-664c-4cbf-94a9-e131fb456aa8">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8a7420b-113e-4f08-a954-589bb7ca9bfe" type="checkbox" ><label class="sk-toggleable__label" for="c8a7420b-113e-4f08-a954-589bb7ca9bfe">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7207f8e-ed3c-48a7-ac0e-12a183c09275" type="checkbox" ><label class="sk-toggleable__label" for="a7207f8e-ed3c-48a7-ac0e-12a183c09275">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f4be6f4-9b34-4c8b-8903-0e570c271b35" type="checkbox" ><label class="sk-toggleable__label" for="9f4be6f4-9b34-4c8b-8903-0e570c271b35">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85013fdd-336e-4c24-a956-3a89c21c63c1" type="checkbox" ><label class="sk-toggleable__label" for="85013fdd-336e-4c24-a956-3a89c21c63c1">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abbff516-2da9-4e25-934b-c256a19b0aec" type="checkbox" ><label class="sk-toggleable__label" for="abbff516-2da9-4e25-934b-c256a19b0aec">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb9fa664-3ec8-4a63-b1e3-4d2e3da9c245" type="checkbox" ><label class="sk-toggleable__label" for="fb9fa664-3ec8-4a63-b1e3-4d2e3da9c245">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-731c6d49-9870-440d-adae-d1bdf0745543 {color: black;background-color: white;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 pre{padding: 0;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-toggleable {background-color: white;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-estimator:hover {background-color: #d4ebff;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-item {z-index: 1;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-parallel-item:only-child::after {width: 0;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-container {display: inline-block;position: relative;}#sk-731c6d49-9870-440d-adae-d1bdf0745543 div.sk-text-repr-fallback {display: none;}</style><div id="sk-731c6d49-9870-440d-adae-d1bdf0745543" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77297163-50c0-4c09-9670-2c07be6a3e92" type="checkbox" ><label class="sk-toggleable__label" for="77297163-50c0-4c09-9670-2c07be6a3e92">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87004ff3-8978-404f-bb5b-00f012df81ea" type="checkbox" ><label class="sk-toggleable__label" for="87004ff3-8978-404f-bb5b-00f012df81ea">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="245f1349-b794-42c8-a24e-13a0aa955886" type="checkbox" ><label class="sk-toggleable__label" for="245f1349-b794-42c8-a24e-13a0aa955886">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="571f374b-d650-4514-8908-25d01e615d09" type="checkbox" ><label class="sk-toggleable__label" for="571f374b-d650-4514-8908-25d01e615d09">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cca6540-e30f-4329-a890-90242baea8c5" type="checkbox" ><label class="sk-toggleable__label" for="0cca6540-e30f-4329-a890-90242baea8c5">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be59776d-b24c-46c0-979b-54ad575a8f97" type="checkbox" ><label class="sk-toggleable__label" for="be59776d-b24c-46c0-979b-54ad575a8f97">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="373a1aa1-6a0a-4473-94cc-810097d6840e" type="checkbox" ><label class="sk-toggleable__label" for="373a1aa1-6a0a-4473-94cc-810097d6840e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bfa67e5-7a1a-4a66-9e21-c94c28465096" type="checkbox" ><label class="sk-toggleable__label" for="9bfa67e5-7a1a-4a66-9e21-c94c28465096">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1da31dfe-a093-4199-9042-de3e7266a76a" type="checkbox" ><label class="sk-toggleable__label" for="1da31dfe-a093-4199-9042-de3e7266a76a">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.158 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
