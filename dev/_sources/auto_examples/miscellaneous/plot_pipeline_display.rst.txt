
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ebe13c72-6717-4956-a86d-c36411fa1018 {color: black;background-color: white;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 pre{padding: 0;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-toggleable {background-color: white;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-item {z-index: 1;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-parallel-item:only-child::after {width: 0;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ebe13c72-6717-4956-a86d-c36411fa1018 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ebe13c72-6717-4956-a86d-c36411fa1018" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c230e32-2379-4185-9680-133be3598da4" type="checkbox" ><label for="7c230e32-2379-4185-9680-133be3598da4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c959af0-3b60-4c48-881f-ab3f9f6bee67" type="checkbox" ><label for="8c959af0-3b60-4c48-881f-ab3f9f6bee67" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73cb8523-0e10-4cc5-b3f0-0927cf3c07c3" type="checkbox" ><label for="73cb8523-0e10-4cc5-b3f0-0927cf3c07c3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 {color: black;background-color: white;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 pre{padding: 0;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-toggleable {background-color: white;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-estimator:hover {background-color: #d4ebff;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-item {z-index: 1;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-parallel-item:only-child::after {width: 0;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-60666184-b1d1-4697-8e6f-bb11f82e2979 div.sk-text-repr-fallback {display: none;}</style><div id="sk-60666184-b1d1-4697-8e6f-bb11f82e2979" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85af3fe3-1842-4d97-8fd5-24ba824af66c" type="checkbox" ><label for="85af3fe3-1842-4d97-8fd5-24ba824af66c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="506cd5af-9666-43d6-a902-3089f2f73099" type="checkbox" ><label for="506cd5af-9666-43d6-a902-3089f2f73099" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c80c39f-d414-4e2e-a63b-b46fdf8b449c" type="checkbox" ><label for="0c80c39f-d414-4e2e-a63b-b46fdf8b449c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d012cc76-0e38-4023-bf9b-64a7ccce6b0a" type="checkbox" ><label for="d012cc76-0e38-4023-bf9b-64a7ccce6b0a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-80830d47-ac6e-465b-8d56-b661e642f734 {color: black;background-color: white;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 pre{padding: 0;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-toggleable {background-color: white;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-estimator:hover {background-color: #d4ebff;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-item {z-index: 1;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-parallel-item:only-child::after {width: 0;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-80830d47-ac6e-465b-8d56-b661e642f734 div.sk-text-repr-fallback {display: none;}</style><div id="sk-80830d47-ac6e-465b-8d56-b661e642f734" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bb5d158-ab79-44f2-91c4-29258af51ad1" type="checkbox" ><label for="9bb5d158-ab79-44f2-91c4-29258af51ad1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c287975-f5c8-4227-a096-80a6f20b844c" type="checkbox" ><label for="3c287975-f5c8-4227-a096-80a6f20b844c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="675f5876-85f5-43b6-9d75-1493d5443c38" type="checkbox" ><label for="675f5876-85f5-43b6-9d75-1493d5443c38" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 {color: black;background-color: white;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 pre{padding: 0;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-toggleable {background-color: white;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-item {z-index: 1;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-parallel-item:only-child::after {width: 0;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d9da6d46-1ec9-41bb-a766-a65e9b4bd406" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a093a99-c9b7-4121-9a4a-017bab4c7713" type="checkbox" ><label for="6a093a99-c9b7-4121-9a4a-017bab4c7713" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fc0c3ea-68c9-47f7-95e2-2b562cec9900" type="checkbox" ><label for="2fc0c3ea-68c9-47f7-95e2-2b562cec9900" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92838f00-d3e9-4bd0-9963-16423ae88aec" type="checkbox" ><label for="92838f00-d3e9-4bd0-9963-16423ae88aec" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8abfcc3d-5edd-43d7-a3ad-fd9fd6f4768c" type="checkbox" ><label for="8abfcc3d-5edd-43d7-a3ad-fd9fd6f4768c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="469f4d28-4bda-4460-ae4a-2882de2b5629" type="checkbox" ><label for="469f4d28-4bda-4460-ae4a-2882de2b5629" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52727933-df1c-41a3-a22e-616714e2a102" type="checkbox" ><label for="52727933-df1c-41a3-a22e-616714e2a102" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e70c6c8-521e-4cb4-9b3f-5c57d4406fa2" type="checkbox" ><label for="1e70c6c8-521e-4cb4-9b3f-5c57d4406fa2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e90f0f89-b047-4de2-adb3-acc13433eaed" type="checkbox" ><label for="e90f0f89-b047-4de2-adb3-acc13433eaed" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f03008a-2161-4cb8-ad16-f0ab1b238c20" type="checkbox" ><label for="3f03008a-2161-4cb8-ad16-f0ab1b238c20" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 {color: black;background-color: white;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 pre{padding: 0;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-toggleable {background-color: white;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-item {z-index: 1;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-parallel-item:only-child::after {width: 0;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2e9d41a3-d5a5-4006-a107-4c375fee7457 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2e9d41a3-d5a5-4006-a107-4c375fee7457" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccb8e9d5-28e1-4c5a-964e-ba97f3486e09" type="checkbox" ><label for="ccb8e9d5-28e1-4c5a-964e-ba97f3486e09" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="203679a5-1f4d-47ba-83a8-30aca817b003" type="checkbox" ><label for="203679a5-1f4d-47ba-83a8-30aca817b003" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8c123a4-c671-4425-a8c8-63dd98a284d8" type="checkbox" ><label for="e8c123a4-c671-4425-a8c8-63dd98a284d8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5922c62-ddc2-48f6-a0e6-e6554361e887" type="checkbox" ><label for="c5922c62-ddc2-48f6-a0e6-e6554361e887" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d35103f2-ae0a-48dc-8842-5e66092e9595" type="checkbox" ><label for="d35103f2-ae0a-48dc-8842-5e66092e9595" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40468c9f-de8b-45ee-aeac-4afa69cff682" type="checkbox" ><label for="40468c9f-de8b-45ee-aeac-4afa69cff682" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f78c16a4-561a-4383-8ab7-5172ffda9d10" type="checkbox" ><label for="f78c16a4-561a-4383-8ab7-5172ffda9d10" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b7fe62a-14a7-4056-b44b-35093dada2a7" type="checkbox" ><label for="3b7fe62a-14a7-4056-b44b-35093dada2a7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95086ccf-a959-4065-98b2-98da6ae1b634" type="checkbox" ><label for="95086ccf-a959-4065-98b2-98da6ae1b634" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.077 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
