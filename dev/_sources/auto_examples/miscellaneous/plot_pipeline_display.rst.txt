
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 {color: black;background-color: white;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 pre{padding: 0;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-toggleable {background-color: white;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-item {z-index: 1;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-parallel-item:only-child::after {width: 0;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4f6a2bfe-136b-4780-825b-e66d32c0f0c3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4182df9e-5a06-4955-ada1-b49be0a4ca93" type="checkbox" ><label for="4182df9e-5a06-4955-ada1-b49be0a4ca93" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b92a6d46-2cd9-4988-a1a8-a8b1116b120e" type="checkbox" ><label for="b92a6d46-2cd9-4988-a1a8-a8b1116b120e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44dea836-b118-4674-a586-ea2d5edd0960" type="checkbox" ><label for="44dea836-b118-4674-a586-ea2d5edd0960" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-535324ba-5ee0-4268-a070-1043f0312622 {color: black;background-color: white;}#sk-535324ba-5ee0-4268-a070-1043f0312622 pre{padding: 0;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-toggleable {background-color: white;}#sk-535324ba-5ee0-4268-a070-1043f0312622 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-535324ba-5ee0-4268-a070-1043f0312622 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-535324ba-5ee0-4268-a070-1043f0312622 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-535324ba-5ee0-4268-a070-1043f0312622 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-535324ba-5ee0-4268-a070-1043f0312622 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-535324ba-5ee0-4268-a070-1043f0312622 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-estimator:hover {background-color: #d4ebff;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-item {z-index: 1;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-parallel-item:only-child::after {width: 0;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-535324ba-5ee0-4268-a070-1043f0312622 div.sk-text-repr-fallback {display: none;}</style><div id="sk-535324ba-5ee0-4268-a070-1043f0312622" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c065fa1e-c93d-415e-ac72-ab3faab4adad" type="checkbox" ><label for="c065fa1e-c93d-415e-ac72-ab3faab4adad" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d6df476-87b6-4736-9ee2-3a9cd3e774b3" type="checkbox" ><label for="3d6df476-87b6-4736-9ee2-3a9cd3e774b3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4aebcb73-c395-41eb-a3f7-7201ce3852b3" type="checkbox" ><label for="4aebcb73-c395-41eb-a3f7-7201ce3852b3" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00cdf79c-5d55-4956-a784-74c7db5353f3" type="checkbox" ><label for="00cdf79c-5d55-4956-a784-74c7db5353f3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 {color: black;background-color: white;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 pre{padding: 0;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-toggleable {background-color: white;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-estimator:hover {background-color: #d4ebff;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-item {z-index: 1;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-parallel-item:only-child::after {width: 0;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77 div.sk-text-repr-fallback {display: none;}</style><div id="sk-25fd3cce-4fbb-4403-ba51-0c7080e50e77" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e2bfc4a-91c0-41eb-be9d-9308f4d2a3b8" type="checkbox" ><label for="7e2bfc4a-91c0-41eb-be9d-9308f4d2a3b8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="479ee237-40f9-422e-bef2-3532c3371f02" type="checkbox" ><label for="479ee237-40f9-422e-bef2-3532c3371f02" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7cd3d4d-945e-489c-8d0e-b98f0879af2f" type="checkbox" ><label for="c7cd3d4d-945e-489c-8d0e-b98f0879af2f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b8c86021-a0f9-4852-940d-345045b03bcb {color: black;background-color: white;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb pre{padding: 0;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-toggleable {background-color: white;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-estimator:hover {background-color: #d4ebff;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-item {z-index: 1;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-parallel-item:only-child::after {width: 0;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b8c86021-a0f9-4852-940d-345045b03bcb div.sk-text-repr-fallback {display: none;}</style><div id="sk-b8c86021-a0f9-4852-940d-345045b03bcb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9213a37-053a-4d79-9f28-94429f48823b" type="checkbox" ><label for="a9213a37-053a-4d79-9f28-94429f48823b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ebe39647-78ca-467f-8eca-1328a34eb010" type="checkbox" ><label for="ebe39647-78ca-467f-8eca-1328a34eb010" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29f3a617-3dd1-4ca6-8b8d-7ec6bee60ccc" type="checkbox" ><label for="29f3a617-3dd1-4ca6-8b8d-7ec6bee60ccc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="220d632a-77e2-4423-88d4-f76c92161136" type="checkbox" ><label for="220d632a-77e2-4423-88d4-f76c92161136" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88db1d73-7187-47a3-a545-84eb0b97b3c1" type="checkbox" ><label for="88db1d73-7187-47a3-a545-84eb0b97b3c1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1560ab6-80b8-4ab6-ad06-a3e338be2fe1" type="checkbox" ><label for="d1560ab6-80b8-4ab6-ad06-a3e338be2fe1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="374b72a8-c597-4e14-bef5-3b6ec8b46fb5" type="checkbox" ><label for="374b72a8-c597-4e14-bef5-3b6ec8b46fb5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb2a7ef8-be2a-4680-b869-348d015d6069" type="checkbox" ><label for="eb2a7ef8-be2a-4680-b869-348d015d6069" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c03d83b4-0c54-4cd7-a67f-99e33ec82700" type="checkbox" ><label for="c03d83b4-0c54-4cd7-a67f-99e33ec82700" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea {color: black;background-color: white;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea pre{padding: 0;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-toggleable {background-color: white;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-item {z-index: 1;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-parallel-item:only-child::after {width: 0;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-8461eaf1-06a2-44b8-a662-d7e4362f72ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2f0d978-dc89-4a28-ae1d-f359569074af" type="checkbox" ><label for="f2f0d978-dc89-4a28-ae1d-f359569074af" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e2142c4-b125-4f70-802a-448143fd4e95" type="checkbox" ><label for="4e2142c4-b125-4f70-802a-448143fd4e95" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc8dd4a7-8a0a-45a3-91ac-cd3bee66f03f" type="checkbox" ><label for="dc8dd4a7-8a0a-45a3-91ac-cd3bee66f03f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7e3eb03-1164-47ee-9910-8ffcbbc44241" type="checkbox" ><label for="c7e3eb03-1164-47ee-9910-8ffcbbc44241" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c7b5947-96d7-47c3-821e-cf05ca71f244" type="checkbox" ><label for="2c7b5947-96d7-47c3-821e-cf05ca71f244" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f737ac51-7f8f-4ad6-8a2d-2573daa679fe" type="checkbox" ><label for="f737ac51-7f8f-4ad6-8a2d-2573daa679fe" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7099f7f8-1bbb-421e-be9b-d1b49336372d" type="checkbox" ><label for="7099f7f8-1bbb-421e-be9b-d1b49336372d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38d6c001-35f9-4043-a85b-9cfc91bd4012" type="checkbox" ><label for="38d6c001-35f9-4043-a85b-9cfc91bd4012" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="197a764b-c8be-4027-b2ae-0cfb5fe1aaa4" type="checkbox" ><label for="197a764b-c8be-4027-b2ae-0cfb5fe1aaa4" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
