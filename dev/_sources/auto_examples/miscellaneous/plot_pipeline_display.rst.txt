
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a {color: black;background-color: white;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a pre{padding: 0;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-toggleable {background-color: white;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-estimator:hover {background-color: #d4ebff;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-item {z-index: 1;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-parallel-item:only-child::after {width: 0;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a div.sk-text-repr-fallback {display: none;}</style><div id="sk-fb78ae09-a833-4bd9-a6ef-18608e18e83a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f398345a-f699-4807-8b21-a0a61abbdd34" type="checkbox" ><label for="f398345a-f699-4807-8b21-a0a61abbdd34" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d9b519b-38e0-4d10-86c2-cdc69237aa81" type="checkbox" ><label for="3d9b519b-38e0-4d10-86c2-cdc69237aa81" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61dd956b-e378-4343-a538-67801dbb991a" type="checkbox" ><label for="61dd956b-e378-4343-a538-67801dbb991a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 {color: black;background-color: white;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 pre{padding: 0;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-toggleable {background-color: white;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-item {z-index: 1;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-parallel-item:only-child::after {width: 0;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ce83c5ec-a01e-4d69-bc27-150f2a962554 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ce83c5ec-a01e-4d69-bc27-150f2a962554" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11e898b2-3c4d-4cc4-a4a7-e7bdcaf421c2" type="checkbox" ><label for="11e898b2-3c4d-4cc4-a4a7-e7bdcaf421c2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58627164-bbcd-4f98-b9fb-d482a6559db0" type="checkbox" ><label for="58627164-bbcd-4f98-b9fb-d482a6559db0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04915f62-4a83-41b4-8446-c6e7f6c3cc54" type="checkbox" ><label for="04915f62-4a83-41b4-8446-c6e7f6c3cc54" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f21aa11-83ae-4b92-988d-e5cdc8c63692" type="checkbox" ><label for="8f21aa11-83ae-4b92-988d-e5cdc8c63692" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 {color: black;background-color: white;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 pre{padding: 0;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-toggleable {background-color: white;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-item {z-index: 1;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-parallel-item:only-child::after {width: 0;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-67191878-ad9c-49d4-be6c-23972a4ce1e5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-67191878-ad9c-49d4-be6c-23972a4ce1e5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09db41a6-93f5-452f-bbfd-b4139f86f51c" type="checkbox" ><label for="09db41a6-93f5-452f-bbfd-b4139f86f51c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04778ba3-843e-417e-86a1-5fd81ccaccaa" type="checkbox" ><label for="04778ba3-843e-417e-86a1-5fd81ccaccaa" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6a0c06c-8bd1-476f-bc24-6632562111e7" type="checkbox" ><label for="d6a0c06c-8bd1-476f-bc24-6632562111e7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 {color: black;background-color: white;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 pre{padding: 0;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-toggleable {background-color: white;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-item {z-index: 1;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-parallel-item:only-child::after {width: 0;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c996536c-fa68-437e-948f-97cd7cf03eb8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c996536c-fa68-437e-948f-97cd7cf03eb8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2d02acd-c9cb-496b-a943-b63052f582c5" type="checkbox" ><label for="d2d02acd-c9cb-496b-a943-b63052f582c5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99ecccc4-9f24-4d92-b068-5dc87699a03b" type="checkbox" ><label for="99ecccc4-9f24-4d92-b068-5dc87699a03b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6de6198-8178-4385-8052-3397d3241246" type="checkbox" ><label for="d6de6198-8178-4385-8052-3397d3241246" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27a39a36-518c-4806-8adf-45c407326637" type="checkbox" ><label for="27a39a36-518c-4806-8adf-45c407326637" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9600fd93-30f7-4f58-9c39-8d1838626fc8" type="checkbox" ><label for="9600fd93-30f7-4f58-9c39-8d1838626fc8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ac6478d-95ec-4566-9d1c-4b070b7b7c6e" type="checkbox" ><label for="9ac6478d-95ec-4566-9d1c-4b070b7b7c6e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99466284-2c42-4e6b-94f0-b0a6d0187389" type="checkbox" ><label for="99466284-2c42-4e6b-94f0-b0a6d0187389" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e88b3ea-c1bf-43b9-8648-98ecefc43355" type="checkbox" ><label for="8e88b3ea-c1bf-43b9-8648-98ecefc43355" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f15a9e47-4bac-4cdc-87be-40abc674e61e" type="checkbox" ><label for="f15a9e47-4bac-4cdc-87be-40abc674e61e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 {color: black;background-color: white;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 pre{padding: 0;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-toggleable {background-color: white;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-item {z-index: 1;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-parallel-item:only-child::after {width: 0;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-85196249-7df9-47e6-82bf-5e7b2b0300a1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-85196249-7df9-47e6-82bf-5e7b2b0300a1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16e2760b-bc7e-4ec5-906c-a46082b4c94f" type="checkbox" ><label for="16e2760b-bc7e-4ec5-906c-a46082b4c94f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e6551db-7707-4c57-85cc-9f3b513fc42e" type="checkbox" ><label for="9e6551db-7707-4c57-85cc-9f3b513fc42e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b5ce364-b512-4ab6-b039-2fb8027137eb" type="checkbox" ><label for="7b5ce364-b512-4ab6-b039-2fb8027137eb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9bad07b-7481-459f-853a-889fb03abdf9" type="checkbox" ><label for="c9bad07b-7481-459f-853a-889fb03abdf9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85f79e56-4502-4b9a-8368-98051c0baaea" type="checkbox" ><label for="85f79e56-4502-4b9a-8368-98051c0baaea" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3833eaa0-bb04-46e0-9c2b-48f7df66841a" type="checkbox" ><label for="3833eaa0-bb04-46e0-9c2b-48f7df66841a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09ed28be-cc1a-409f-af49-3296fac0bf7e" type="checkbox" ><label for="09ed28be-cc1a-409f-af49-3296fac0bf7e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11389688-185f-48b0-a19f-7c1bdf8cfec9" type="checkbox" ><label for="11389688-185f-48b0-a19f-7c1bdf8cfec9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf1a0522-7780-4386-8c51-ca3b0a354b14" type="checkbox" ><label for="bf1a0522-7780-4386-8c51-ca3b0a354b14" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
