
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 {color: black;background-color: white;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 pre{padding: 0;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-toggleable {background-color: white;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-item {z-index: 1;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-parallel-item:only-child::after {width: 0;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8db4370b-1c52-4309-9a09-7b13a142bed6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8db4370b-1c52-4309-9a09-7b13a142bed6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b76d0e19-0c1f-415e-96d5-7e28da469ff3" type="checkbox" ><label for="b76d0e19-0c1f-415e-96d5-7e28da469ff3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="117b0de6-35ef-40a0-8745-b5e1ba2119cb" type="checkbox" ><label for="117b0de6-35ef-40a0-8745-b5e1ba2119cb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55129e12-40b8-4c1e-bda2-67db17d156c9" type="checkbox" ><label for="55129e12-40b8-4c1e-bda2-67db17d156c9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 {color: black;background-color: white;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 pre{padding: 0;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-toggleable {background-color: white;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-item {z-index: 1;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-parallel-item:only-child::after {width: 0;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dec2dddd-5fd1-4358-81e7-b82b9cc9c434" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="618bd653-bcbb-4d59-8f8b-2d4c41ff4261" type="checkbox" ><label for="618bd653-bcbb-4d59-8f8b-2d4c41ff4261" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99c3ef1b-aaaa-487c-8d62-7b77163ce91f" type="checkbox" ><label for="99c3ef1b-aaaa-487c-8d62-7b77163ce91f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdeb4ade-f34f-46e6-8f7b-2c18d10cc575" type="checkbox" ><label for="cdeb4ade-f34f-46e6-8f7b-2c18d10cc575" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a51be1b-95dd-4b9b-bbf5-aa4dd40ef260" type="checkbox" ><label for="8a51be1b-95dd-4b9b-bbf5-aa4dd40ef260" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1b71c78b-d345-4464-acd7-2ba0714c397a {color: black;background-color: white;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a pre{padding: 0;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-toggleable {background-color: white;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-estimator:hover {background-color: #d4ebff;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-item {z-index: 1;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-parallel-item:only-child::after {width: 0;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1b71c78b-d345-4464-acd7-2ba0714c397a div.sk-text-repr-fallback {display: none;}</style><div id="sk-1b71c78b-d345-4464-acd7-2ba0714c397a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ac1b9c6-91cf-4e36-b27d-d626d2dac658" type="checkbox" ><label for="3ac1b9c6-91cf-4e36-b27d-d626d2dac658" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ab22eda-f543-4463-b18d-82c8278d8955" type="checkbox" ><label for="5ab22eda-f543-4463-b18d-82c8278d8955" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="718ba7e4-3a01-4e95-b54f-9d56238a0fbb" type="checkbox" ><label for="718ba7e4-3a01-4e95-b54f-9d56238a0fbb" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 {color: black;background-color: white;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 pre{padding: 0;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-toggleable {background-color: white;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-item {z-index: 1;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-parallel-item:only-child::after {width: 0;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b14b2660-28dc-4bee-b8c3-1612cdbff0f9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ef2a955-51d3-4593-9706-6357f5130ae4" type="checkbox" ><label for="9ef2a955-51d3-4593-9706-6357f5130ae4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77d0523c-fa48-4b26-9d5b-23213d88ed02" type="checkbox" ><label for="77d0523c-fa48-4b26-9d5b-23213d88ed02" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="825e726c-347a-4d10-a331-38d0c88bb066" type="checkbox" ><label for="825e726c-347a-4d10-a331-38d0c88bb066" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="437bc53d-2ee7-4528-99dc-506fa3836f4d" type="checkbox" ><label for="437bc53d-2ee7-4528-99dc-506fa3836f4d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d667c75d-4855-4f0d-b73e-c9a202233c8c" type="checkbox" ><label for="d667c75d-4855-4f0d-b73e-c9a202233c8c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07923468-158a-4f4e-8246-f0cf2f4fe004" type="checkbox" ><label for="07923468-158a-4f4e-8246-f0cf2f4fe004" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cba93626-8336-49ca-8688-82017111af40" type="checkbox" ><label for="cba93626-8336-49ca-8688-82017111af40" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63e20584-1fe0-489b-a8b0-d5fa868577b2" type="checkbox" ><label for="63e20584-1fe0-489b-a8b0-d5fa868577b2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4fd9539-e16b-476c-968a-f9384d82dc59" type="checkbox" ><label for="d4fd9539-e16b-476c-968a-f9384d82dc59" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b {color: black;background-color: white;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b pre{padding: 0;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-toggleable {background-color: white;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-estimator:hover {background-color: #d4ebff;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-item {z-index: 1;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-parallel-item:only-child::after {width: 0;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b div.sk-text-repr-fallback {display: none;}</style><div id="sk-0c1a3407-76a7-4ca3-ad21-ec011505d15b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27bb0f72-9df6-484c-997f-816d4ee460bd" type="checkbox" ><label for="27bb0f72-9df6-484c-997f-816d4ee460bd" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e45a2eb-fe22-4674-9353-634cb3a6ff66" type="checkbox" ><label for="3e45a2eb-fe22-4674-9353-634cb3a6ff66" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29a87ad7-3dee-4d61-9ab5-2cfdc75749b0" type="checkbox" ><label for="29a87ad7-3dee-4d61-9ab5-2cfdc75749b0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fdb3998-0eec-4d87-bd77-4b9c9b56a23c" type="checkbox" ><label for="2fdb3998-0eec-4d87-bd77-4b9c9b56a23c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04867625-3882-4899-a89f-ef0831fe3520" type="checkbox" ><label for="04867625-3882-4899-a89f-ef0831fe3520" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="508ed2b6-9c92-4346-890d-6ca20e396585" type="checkbox" ><label for="508ed2b6-9c92-4346-890d-6ca20e396585" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55644a21-8daa-49b9-bd3a-dbfe43c004ec" type="checkbox" ><label for="55644a21-8daa-49b9-bd3a-dbfe43c004ec" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b3d1d2b-cb72-47a2-b2aa-4a95bc338888" type="checkbox" ><label for="4b3d1d2b-cb72-47a2-b2aa-4a95bc338888" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="303a3436-aff1-41c1-96c1-8798349dd340" type="checkbox" ><label for="303a3436-aff1-41c1-96c1-8798349dd340" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
