
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-74daad92-a745-401b-9e49-3de5003b21c7 {color: black;background-color: white;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 pre{padding: 0;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-toggleable {background-color: white;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-item {z-index: 1;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-parallel-item:only-child::after {width: 0;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-74daad92-a745-401b-9e49-3de5003b21c7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-74daad92-a745-401b-9e49-3de5003b21c7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4903248-bba2-48da-a020-474f772fd41f" type="checkbox" ><label for="f4903248-bba2-48da-a020-474f772fd41f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4241c785-e5aa-43ed-840d-faf7d0b65fbd" type="checkbox" ><label for="4241c785-e5aa-43ed-840d-faf7d0b65fbd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a820d28-957a-4497-8187-7e73ab31e520" type="checkbox" ><label for="1a820d28-957a-4497-8187-7e73ab31e520" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ce894367-fc74-4d84-9773-fd23d9e667cc {color: black;background-color: white;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc pre{padding: 0;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-toggleable {background-color: white;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-estimator:hover {background-color: #d4ebff;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-item {z-index: 1;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-parallel-item:only-child::after {width: 0;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ce894367-fc74-4d84-9773-fd23d9e667cc div.sk-text-repr-fallback {display: none;}</style><div id="sk-ce894367-fc74-4d84-9773-fd23d9e667cc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87535c1c-fdbb-448c-bdee-f4d587948ed0" type="checkbox" ><label for="87535c1c-fdbb-448c-bdee-f4d587948ed0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e44264d-a3fd-4c55-b497-4501162c64fe" type="checkbox" ><label for="0e44264d-a3fd-4c55-b497-4501162c64fe" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13bacfca-6d2e-439f-9153-d2ee43904e5e" type="checkbox" ><label for="13bacfca-6d2e-439f-9153-d2ee43904e5e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e59e0df-1ca0-4653-a8dc-8bb7755e28f5" type="checkbox" ><label for="2e59e0df-1ca0-4653-a8dc-8bb7755e28f5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e {color: black;background-color: white;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e pre{padding: 0;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-toggleable {background-color: white;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-estimator:hover {background-color: #d4ebff;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-item {z-index: 1;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-parallel-item:only-child::after {width: 0;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4c3846f6-3602-467a-90ff-96e5b25fb28e div.sk-text-repr-fallback {display: none;}</style><div id="sk-4c3846f6-3602-467a-90ff-96e5b25fb28e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbcc9ed0-c990-43b5-ac70-e1091108f79d" type="checkbox" ><label for="bbcc9ed0-c990-43b5-ac70-e1091108f79d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9ee7e64-ae04-4c09-beb3-737b19eb4d07" type="checkbox" ><label for="e9ee7e64-ae04-4c09-beb3-737b19eb4d07" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cb87eff-c3c7-4727-9063-8a535dbb9429" type="checkbox" ><label for="7cb87eff-c3c7-4727-9063-8a535dbb9429" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 {color: black;background-color: white;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 pre{padding: 0;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-toggleable {background-color: white;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-item {z-index: 1;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-parallel-item:only-child::after {width: 0;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4a31c8b1-a22f-43c2-b3f8-4d5493b0b2f4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cedf179c-a6cd-43f1-b706-36f0fc9e8ec8" type="checkbox" ><label for="cedf179c-a6cd-43f1-b706-36f0fc9e8ec8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ea7fe49-b075-4165-be14-c1cc15037b21" type="checkbox" ><label for="1ea7fe49-b075-4165-be14-c1cc15037b21" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71e6cb86-ae06-414b-ad59-b7ebde5e1f2e" type="checkbox" ><label for="71e6cb86-ae06-414b-ad59-b7ebde5e1f2e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7c3a114-eda0-4ea9-8621-bf98fcb9cf3a" type="checkbox" ><label for="e7c3a114-eda0-4ea9-8621-bf98fcb9cf3a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4e4b569-c0fd-4142-ab26-9e87e79a847e" type="checkbox" ><label for="d4e4b569-c0fd-4142-ab26-9e87e79a847e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b1c5ae3-20aa-4fdd-b350-6e14578db9ac" type="checkbox" ><label for="1b1c5ae3-20aa-4fdd-b350-6e14578db9ac" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="742bf02c-0fdf-4f3e-9e17-7996ce848009" type="checkbox" ><label for="742bf02c-0fdf-4f3e-9e17-7996ce848009" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8808536c-1d74-49b2-be92-26f95dc74e90" type="checkbox" ><label for="8808536c-1d74-49b2-be92-26f95dc74e90" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54a36e5b-7d2a-400e-9eb3-185632b11c1b" type="checkbox" ><label for="54a36e5b-7d2a-400e-9eb3-185632b11c1b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-278353a1-ee3f-4118-95a9-818906ac7306 {color: black;background-color: white;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 pre{padding: 0;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-toggleable {background-color: white;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-estimator:hover {background-color: #d4ebff;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-item {z-index: 1;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-parallel-item:only-child::after {width: 0;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-278353a1-ee3f-4118-95a9-818906ac7306 div.sk-text-repr-fallback {display: none;}</style><div id="sk-278353a1-ee3f-4118-95a9-818906ac7306" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d88456a5-ba15-4f02-b20d-f2fc7884c5a3" type="checkbox" ><label for="d88456a5-ba15-4f02-b20d-f2fc7884c5a3" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="524bcd4b-de7e-4498-b04e-a84454a82f15" type="checkbox" ><label for="524bcd4b-de7e-4498-b04e-a84454a82f15" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e49a0726-6541-433a-ab99-164c3c848f08" type="checkbox" ><label for="e49a0726-6541-433a-ab99-164c3c848f08" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a83edf20-08c8-4b4a-9714-7a84027c3872" type="checkbox" ><label for="a83edf20-08c8-4b4a-9714-7a84027c3872" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41c10440-190e-47e8-938d-05479a46e577" type="checkbox" ><label for="41c10440-190e-47e8-938d-05479a46e577" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3622b9b2-74d0-4cfb-85d0-9de1ebb18930" type="checkbox" ><label for="3622b9b2-74d0-4cfb-85d0-9de1ebb18930" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb4a4736-c264-4501-8177-d117827cd52f" type="checkbox" ><label for="fb4a4736-c264-4501-8177-d117827cd52f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82fa1a6a-2b5d-4bde-b63c-707bf529e490" type="checkbox" ><label for="82fa1a6a-2b5d-4bde-b63c-707bf529e490" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afed7670-f6fb-47f3-9a75-3f2eae8e93cf" type="checkbox" ><label for="afed7670-f6fb-47f3-9a75-3f2eae8e93cf" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
