
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f {color: black;background-color: white;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f pre{padding: 0;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-toggleable {background-color: white;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-estimator:hover {background-color: #d4ebff;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-item {z-index: 1;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-parallel-item:only-child::after {width: 0;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c2694921-51f2-4066-91ea-5fa1879dfd6f div.sk-text-repr-fallback {display: none;}</style><div id="sk-c2694921-51f2-4066-91ea-5fa1879dfd6f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3becbd50-713a-4ab0-b4ed-07ffca2473f2" type="checkbox" ><label for="3becbd50-713a-4ab0-b4ed-07ffca2473f2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c075a2f0-38e1-4d17-b2ed-a2bd10c93214" type="checkbox" ><label for="c075a2f0-38e1-4d17-b2ed-a2bd10c93214" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f7edd33-9d48-47a0-928a-fe885d245304" type="checkbox" ><label for="3f7edd33-9d48-47a0-928a-fe885d245304" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1a505d19-19a0-407f-aac7-07d9959cc857 {color: black;background-color: white;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 pre{padding: 0;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-toggleable {background-color: white;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-item {z-index: 1;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-parallel-item:only-child::after {width: 0;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1a505d19-19a0-407f-aac7-07d9959cc857 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1a505d19-19a0-407f-aac7-07d9959cc857" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14e4c8d9-666c-45cf-a08e-b8562b385828" type="checkbox" ><label for="14e4c8d9-666c-45cf-a08e-b8562b385828" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8ea4cae-bb25-4b84-893a-71cf4a7cea3c" type="checkbox" ><label for="a8ea4cae-bb25-4b84-893a-71cf4a7cea3c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39ae5904-272f-493d-aad9-bae54f20de95" type="checkbox" ><label for="39ae5904-272f-493d-aad9-bae54f20de95" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73007bef-98f3-4434-9928-a5fa723d728e" type="checkbox" ><label for="73007bef-98f3-4434-9928-a5fa723d728e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 {color: black;background-color: white;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 pre{padding: 0;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-toggleable {background-color: white;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-item {z-index: 1;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-parallel-item:only-child::after {width: 0;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5fc3c396-bd60-410e-9b00-a9de5047c762 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5fc3c396-bd60-410e-9b00-a9de5047c762" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="679e3bc3-bd6e-466d-9915-a251cf2ef48d" type="checkbox" ><label for="679e3bc3-bd6e-466d-9915-a251cf2ef48d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73b96234-b4ea-4852-bb15-5d30c0569142" type="checkbox" ><label for="73b96234-b4ea-4852-bb15-5d30c0569142" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a823ecdd-ff19-4484-828d-0a4e71b951ab" type="checkbox" ><label for="a823ecdd-ff19-4484-828d-0a4e71b951ab" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 {color: black;background-color: white;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 pre{padding: 0;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-toggleable {background-color: white;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-item {z-index: 1;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-parallel-item:only-child::after {width: 0;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7dc7a5d4-d714-4296-9965-bc883cd09939 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7dc7a5d4-d714-4296-9965-bc883cd09939" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc539966-86c7-4a57-9d68-156debd06823" type="checkbox" ><label for="fc539966-86c7-4a57-9d68-156debd06823" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29683be7-bb9b-4d54-a1a5-159a5ac62bd7" type="checkbox" ><label for="29683be7-bb9b-4d54-a1a5-159a5ac62bd7" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b907131-ff12-4de0-a5dd-6fd2db0c8417" type="checkbox" ><label for="8b907131-ff12-4de0-a5dd-6fd2db0c8417" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b70902fa-c71e-4aba-8516-34cf60defbca" type="checkbox" ><label for="b70902fa-c71e-4aba-8516-34cf60defbca" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ae08ea6-1daa-4c70-b5a9-4bdaae3050c9" type="checkbox" ><label for="7ae08ea6-1daa-4c70-b5a9-4bdaae3050c9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ad40d64-d7f0-47ad-9298-6637fcedb7d8" type="checkbox" ><label for="0ad40d64-d7f0-47ad-9298-6637fcedb7d8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e9c2bbc-7b29-4e0b-85c0-bc541a27d238" type="checkbox" ><label for="6e9c2bbc-7b29-4e0b-85c0-bc541a27d238" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dbd30be-0ba4-4cf6-9717-6dbf42493c09" type="checkbox" ><label for="0dbd30be-0ba4-4cf6-9717-6dbf42493c09" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4caca7f-dae4-42ac-90c8-14fc086b9736" type="checkbox" ><label for="f4caca7f-dae4-42ac-90c8-14fc086b9736" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 {color: black;background-color: white;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 pre{padding: 0;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-toggleable {background-color: white;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-item {z-index: 1;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-parallel-item:only-child::after {width: 0;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ab122eca-6a13-4b49-a1ac-21084acc99e9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab122eca-6a13-4b49-a1ac-21084acc99e9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="335dbdcb-eeb9-4c82-a087-5ec20a6db0f9" type="checkbox" ><label for="335dbdcb-eeb9-4c82-a087-5ec20a6db0f9" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9912f4e4-f842-4954-8fcb-067c90a710f3" type="checkbox" ><label for="9912f4e4-f842-4954-8fcb-067c90a710f3" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb472398-d633-4852-9354-89c8205a024b" type="checkbox" ><label for="cb472398-d633-4852-9354-89c8205a024b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ce2b39d-be79-4469-b4cb-73f9fb9b0a93" type="checkbox" ><label for="7ce2b39d-be79-4469-b4cb-73f9fb9b0a93" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f76cf8b6-3f53-4a9a-b5fd-13cc3b251d8a" type="checkbox" ><label for="f76cf8b6-3f53-4a9a-b5fd-13cc3b251d8a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1aabf2e-38cb-444d-bb42-27b2d220fbea" type="checkbox" ><label for="c1aabf2e-38cb-444d-bb42-27b2d220fbea" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffd3cf19-b2e0-4f26-ab15-78c8900226b4" type="checkbox" ><label for="ffd3cf19-b2e0-4f26-ab15-78c8900226b4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e52c2a2-333c-4681-9719-0efe859851f6" type="checkbox" ><label for="5e52c2a2-333c-4681-9719-0efe859851f6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34fce328-951e-44d9-9700-8492c2e1956e" type="checkbox" ><label for="34fce328-951e-44d9-9700-8492c2e1956e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
