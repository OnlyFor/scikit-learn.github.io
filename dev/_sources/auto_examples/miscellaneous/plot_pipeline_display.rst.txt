
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 {color: black;background-color: white;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 pre{padding: 0;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-toggleable {background-color: white;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-item {z-index: 1;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-parallel-item:only-child::after {width: 0;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3298f37b-f7e2-4731-bfcb-a6f2d5320762" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="094d4f28-6033-4ffb-9ed7-d753c19c47af" type="checkbox" ><label for="094d4f28-6033-4ffb-9ed7-d753c19c47af" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dba4649d-694d-432e-a6c3-b50d9465523a" type="checkbox" ><label for="dba4649d-694d-432e-a6c3-b50d9465523a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="125df3f1-8558-4243-9dd7-0fff537f4602" type="checkbox" ><label for="125df3f1-8558-4243-9dd7-0fff537f4602" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab8bb744-f334-4772-92e9-f1f628d711dc {color: black;background-color: white;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc pre{padding: 0;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-toggleable {background-color: white;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-item {z-index: 1;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-parallel-item:only-child::after {width: 0;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ab8bb744-f334-4772-92e9-f1f628d711dc div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab8bb744-f334-4772-92e9-f1f628d711dc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd138f5d-e7a9-4494-8c82-87b61925d21e" type="checkbox" ><label for="fd138f5d-e7a9-4494-8c82-87b61925d21e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="945caee4-da64-453d-a944-b0e9f38581ce" type="checkbox" ><label for="945caee4-da64-453d-a944-b0e9f38581ce" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b235920c-ebb1-4298-99e1-4fbb7fa33ebc" type="checkbox" ><label for="b235920c-ebb1-4298-99e1-4fbb7fa33ebc" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46445f15-573c-43da-990d-62ce10a879c2" type="checkbox" ><label for="46445f15-573c-43da-990d-62ce10a879c2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9d86d006-a492-40b7-93a0-4548beddd36e {color: black;background-color: white;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e pre{padding: 0;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-toggleable {background-color: white;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-estimator:hover {background-color: #d4ebff;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-item {z-index: 1;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-parallel-item:only-child::after {width: 0;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9d86d006-a492-40b7-93a0-4548beddd36e div.sk-text-repr-fallback {display: none;}</style><div id="sk-9d86d006-a492-40b7-93a0-4548beddd36e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e934b4d-940f-4cba-941e-a8714dd8a9a9" type="checkbox" ><label for="7e934b4d-940f-4cba-941e-a8714dd8a9a9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9965c16f-9f80-422d-9ee5-2f87e39907b3" type="checkbox" ><label for="9965c16f-9f80-422d-9ee5-2f87e39907b3" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59dc9169-3db0-4d6b-9d71-c39144c117a6" type="checkbox" ><label for="59dc9169-3db0-4d6b-9d71-c39144c117a6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-666b7866-778a-474c-b37e-a336329d734e {color: black;background-color: white;}#sk-666b7866-778a-474c-b37e-a336329d734e pre{padding: 0;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-toggleable {background-color: white;}#sk-666b7866-778a-474c-b37e-a336329d734e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-666b7866-778a-474c-b37e-a336329d734e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-666b7866-778a-474c-b37e-a336329d734e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-666b7866-778a-474c-b37e-a336329d734e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-666b7866-778a-474c-b37e-a336329d734e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-666b7866-778a-474c-b37e-a336329d734e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-estimator:hover {background-color: #d4ebff;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-item {z-index: 1;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-parallel-item:only-child::after {width: 0;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-666b7866-778a-474c-b37e-a336329d734e div.sk-text-repr-fallback {display: none;}</style><div id="sk-666b7866-778a-474c-b37e-a336329d734e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6a59eac-8c61-41ca-aac3-efa1d06d4f37" type="checkbox" ><label for="b6a59eac-8c61-41ca-aac3-efa1d06d4f37" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63646221-e9b2-43e1-a5af-caeea3884a7a" type="checkbox" ><label for="63646221-e9b2-43e1-a5af-caeea3884a7a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e48493d3-a2a3-48b9-b783-f58be4fd5bf3" type="checkbox" ><label for="e48493d3-a2a3-48b9-b783-f58be4fd5bf3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35bc0216-a28f-47ee-bfc5-7b3bd563a88e" type="checkbox" ><label for="35bc0216-a28f-47ee-bfc5-7b3bd563a88e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7deb9f21-be58-4c0e-8bdc-df0cae1d3909" type="checkbox" ><label for="7deb9f21-be58-4c0e-8bdc-df0cae1d3909" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9a968f5-8993-40d3-8c80-3bed2927213d" type="checkbox" ><label for="d9a968f5-8993-40d3-8c80-3bed2927213d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c083f1a4-ffdc-4480-95c2-b903b2bbee95" type="checkbox" ><label for="c083f1a4-ffdc-4480-95c2-b903b2bbee95" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="244d0b1e-7ad4-4177-922f-3d64213d2ef9" type="checkbox" ><label for="244d0b1e-7ad4-4177-922f-3d64213d2ef9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0717c7bd-19ef-49a3-ad2c-a2a96167d4d6" type="checkbox" ><label for="0717c7bd-19ef-49a3-ad2c-a2a96167d4d6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c {color: black;background-color: white;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c pre{padding: 0;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-toggleable {background-color: white;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-estimator:hover {background-color: #d4ebff;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-item {z-index: 1;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-parallel-item:only-child::after {width: 0;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c div.sk-text-repr-fallback {display: none;}</style><div id="sk-9f4008cd-dab7-4db7-ae47-1d550b78b21c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e466f6a-225b-4a4f-856a-1db5df3fdf3e" type="checkbox" ><label for="7e466f6a-225b-4a4f-856a-1db5df3fdf3e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf15b41d-bc1e-46f2-9550-893ceff9340e" type="checkbox" ><label for="bf15b41d-bc1e-46f2-9550-893ceff9340e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3dbe29a2-485f-4a4b-bfbb-384eed569fb5" type="checkbox" ><label for="3dbe29a2-485f-4a4b-bfbb-384eed569fb5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b00ba917-e0e7-4e43-9921-f14531004dc8" type="checkbox" ><label for="b00ba917-e0e7-4e43-9921-f14531004dc8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85b38d98-2908-4267-90c5-7dc65eb9b1fe" type="checkbox" ><label for="85b38d98-2908-4267-90c5-7dc65eb9b1fe" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20c7a218-655f-4bba-88f6-343385d8ec80" type="checkbox" ><label for="20c7a218-655f-4bba-88f6-343385d8ec80" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fa5a508-407d-4f86-b72d-8232f53cfa67" type="checkbox" ><label for="2fa5a508-407d-4f86-b72d-8232f53cfa67" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fd5c8a7-d41f-461a-ace5-3f16a05d9160" type="checkbox" ><label for="4fd5c8a7-d41f-461a-ace5-3f16a05d9160" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62d6202c-ff58-42e7-9f5f-3d0365fa55c0" type="checkbox" ><label for="62d6202c-ff58-42e7-9f5f-3d0365fa55c0" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.080 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
