
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc {color: black;background-color: white;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc pre{padding: 0;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-toggleable {background-color: white;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-estimator:hover {background-color: #d4ebff;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-item {z-index: 1;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-parallel-item:only-child::after {width: 0;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc div.sk-text-repr-fallback {display: none;}</style><div id="sk-d2cf3912-2f40-4eac-8706-1f1f8d21abdc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3893a1ac-f615-4713-8bc6-9859134127c3" type="checkbox" ><label for="3893a1ac-f615-4713-8bc6-9859134127c3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4046da2d-8df4-4de5-b741-43895861621a" type="checkbox" ><label for="4046da2d-8df4-4de5-b741-43895861621a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c242e34e-bf31-4c8e-9009-c5cd7abc265c" type="checkbox" ><label for="c242e34e-bf31-4c8e-9009-c5cd7abc265c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 {color: black;background-color: white;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 pre{padding: 0;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-toggleable {background-color: white;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-item {z-index: 1;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-parallel-item:only-child::after {width: 0;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dc93c654-fd2f-495e-b378-e16f3563dd43 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dc93c654-fd2f-495e-b378-e16f3563dd43" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4026a5ad-9c52-4e88-a468-f7bfe3445c9f" type="checkbox" ><label for="4026a5ad-9c52-4e88-a468-f7bfe3445c9f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cebb3c4-99c9-44e1-9cba-fb8c92cf67d9" type="checkbox" ><label for="1cebb3c4-99c9-44e1-9cba-fb8c92cf67d9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93eaae01-4eb6-44a3-a1fd-a238070702c2" type="checkbox" ><label for="93eaae01-4eb6-44a3-a1fd-a238070702c2" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdba1680-39d3-483c-b00d-f1a7acd0d4ea" type="checkbox" ><label for="bdba1680-39d3-483c-b00d-f1a7acd0d4ea" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 {color: black;background-color: white;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 pre{padding: 0;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-toggleable {background-color: white;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-item {z-index: 1;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-parallel-item:only-child::after {width: 0;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f876d363-0f58-451e-ac49-a85dc2e3bfd6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6abe532e-429c-4806-b524-20b0dae7ab6f" type="checkbox" ><label for="6abe532e-429c-4806-b524-20b0dae7ab6f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1bc9544-d8f8-4c60-96ec-1cb0e5e1b66d" type="checkbox" ><label for="a1bc9544-d8f8-4c60-96ec-1cb0e5e1b66d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a7d0505-edf3-4099-b939-b611aa919560" type="checkbox" ><label for="4a7d0505-edf3-4099-b939-b611aa919560" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e {color: black;background-color: white;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e pre{padding: 0;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-toggleable {background-color: white;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-estimator:hover {background-color: #d4ebff;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-item {z-index: 1;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-parallel-item:only-child::after {width: 0;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e div.sk-text-repr-fallback {display: none;}</style><div id="sk-67ee5391-f5ce-45ff-bb26-8cbb9ecdcc4e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffd24755-44f9-4bda-a7ff-0d0673c84c08" type="checkbox" ><label for="ffd24755-44f9-4bda-a7ff-0d0673c84c08" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5953ad06-39ed-4720-a499-e6cf829ebcde" type="checkbox" ><label for="5953ad06-39ed-4720-a499-e6cf829ebcde" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27798e60-162e-4db8-a442-36676b8c4e19" type="checkbox" ><label for="27798e60-162e-4db8-a442-36676b8c4e19" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2acd5b47-1ed7-466f-8334-8ff539f57274" type="checkbox" ><label for="2acd5b47-1ed7-466f-8334-8ff539f57274" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a781413-2cd9-4f1e-a1ce-ea81dac79980" type="checkbox" ><label for="4a781413-2cd9-4f1e-a1ce-ea81dac79980" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75b8a66e-b0c2-4754-ad18-239dc9c45266" type="checkbox" ><label for="75b8a66e-b0c2-4754-ad18-239dc9c45266" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a68a15b-81ae-49f1-b912-b3b4d21e1088" type="checkbox" ><label for="3a68a15b-81ae-49f1-b912-b3b4d21e1088" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1131088a-a22e-4b56-a17e-f3e74d31171d" type="checkbox" ><label for="1131088a-a22e-4b56-a17e-f3e74d31171d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6854a70f-6af0-49ec-82b5-0b67b3eec30a" type="checkbox" ><label for="6854a70f-6af0-49ec-82b5-0b67b3eec30a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-57341775-f383-4db5-a3a6-012951957e4f {color: black;background-color: white;}#sk-57341775-f383-4db5-a3a6-012951957e4f pre{padding: 0;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-toggleable {background-color: white;}#sk-57341775-f383-4db5-a3a6-012951957e4f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-57341775-f383-4db5-a3a6-012951957e4f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-57341775-f383-4db5-a3a6-012951957e4f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-57341775-f383-4db5-a3a6-012951957e4f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-57341775-f383-4db5-a3a6-012951957e4f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-57341775-f383-4db5-a3a6-012951957e4f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-estimator:hover {background-color: #d4ebff;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-item {z-index: 1;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-parallel-item:only-child::after {width: 0;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-57341775-f383-4db5-a3a6-012951957e4f div.sk-text-repr-fallback {display: none;}</style><div id="sk-57341775-f383-4db5-a3a6-012951957e4f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65926829-25cd-4bb7-94f7-3c38d41dd960" type="checkbox" ><label for="65926829-25cd-4bb7-94f7-3c38d41dd960" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ec17a6a-cc8c-4c00-ae8b-000108b87bd3" type="checkbox" ><label for="4ec17a6a-cc8c-4c00-ae8b-000108b87bd3" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17587f4b-3259-4001-ac2f-30f86a114379" type="checkbox" ><label for="17587f4b-3259-4001-ac2f-30f86a114379" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e254b9ad-2c20-41f4-9437-4e447be3e53f" type="checkbox" ><label for="e254b9ad-2c20-41f4-9437-4e447be3e53f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6929756c-8663-40c1-a634-695da9da1928" type="checkbox" ><label for="6929756c-8663-40c1-a634-695da9da1928" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7008d001-2742-4d12-b9c0-7c4d9e8c3a19" type="checkbox" ><label for="7008d001-2742-4d12-b9c0-7c4d9e8c3a19" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="552ae788-1a11-4e62-a06f-e360cec7f17f" type="checkbox" ><label for="552ae788-1a11-4e62-a06f-e360cec7f17f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9ab5a8d-4718-4b08-8ef2-b6b577a76386" type="checkbox" ><label for="b9ab5a8d-4718-4b08-8ef2-b6b577a76386" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ee2e681-f072-4181-81d8-10ac56c7632e" type="checkbox" ><label for="2ee2e681-f072-4181-81d8-10ac56c7632e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
