
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6704a018-3a0d-4247-a322-b7252571b580 {color: black;background-color: white;}#sk-6704a018-3a0d-4247-a322-b7252571b580 pre{padding: 0;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-toggleable {background-color: white;}#sk-6704a018-3a0d-4247-a322-b7252571b580 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6704a018-3a0d-4247-a322-b7252571b580 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6704a018-3a0d-4247-a322-b7252571b580 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6704a018-3a0d-4247-a322-b7252571b580 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6704a018-3a0d-4247-a322-b7252571b580 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6704a018-3a0d-4247-a322-b7252571b580 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-item {z-index: 1;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-parallel-item:only-child::after {width: 0;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6704a018-3a0d-4247-a322-b7252571b580 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6704a018-3a0d-4247-a322-b7252571b580" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08a4a0c4-636b-4ca3-b53f-d2646a90b79c" type="checkbox" ><label for="08a4a0c4-636b-4ca3-b53f-d2646a90b79c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f104482c-b408-4e82-a361-1ab0403a4494" type="checkbox" ><label for="f104482c-b408-4e82-a361-1ab0403a4494" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cc83844-f79e-4904-84d6-b339abf3f274" type="checkbox" ><label for="9cc83844-f79e-4904-84d6-b339abf3f274" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ad699310-5519-4472-871a-92e01419cbb9 {color: black;background-color: white;}#sk-ad699310-5519-4472-871a-92e01419cbb9 pre{padding: 0;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-toggleable {background-color: white;}#sk-ad699310-5519-4472-871a-92e01419cbb9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ad699310-5519-4472-871a-92e01419cbb9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ad699310-5519-4472-871a-92e01419cbb9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ad699310-5519-4472-871a-92e01419cbb9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ad699310-5519-4472-871a-92e01419cbb9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad699310-5519-4472-871a-92e01419cbb9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-item {z-index: 1;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-parallel-item:only-child::after {width: 0;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ad699310-5519-4472-871a-92e01419cbb9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ad699310-5519-4472-871a-92e01419cbb9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fd02ae7-6160-4964-a157-de739bf14ab2" type="checkbox" ><label for="0fd02ae7-6160-4964-a157-de739bf14ab2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="404be121-24fd-408c-aa5c-c18d14b47dd1" type="checkbox" ><label for="404be121-24fd-408c-aa5c-c18d14b47dd1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7371f31-565a-4ad6-9ee0-94f7527ef3de" type="checkbox" ><label for="c7371f31-565a-4ad6-9ee0-94f7527ef3de" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4c0cb92-17d8-4dd8-8c11-47ede45e8501" type="checkbox" ><label for="b4c0cb92-17d8-4dd8-8c11-47ede45e8501" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 {color: black;background-color: white;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 pre{padding: 0;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-toggleable {background-color: white;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-item {z-index: 1;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-parallel-item:only-child::after {width: 0;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4864dd97-c3cc-4d2e-9614-4885132d28a9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4864dd97-c3cc-4d2e-9614-4885132d28a9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="903948df-fc1e-4b7d-8466-bcb9dab4da69" type="checkbox" ><label for="903948df-fc1e-4b7d-8466-bcb9dab4da69" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b39eaaf7-7682-428e-a2d6-b41d3af6cfff" type="checkbox" ><label for="b39eaaf7-7682-428e-a2d6-b41d3af6cfff" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33730838-6d93-465b-ac1a-4345cf6a1a8c" type="checkbox" ><label for="33730838-6d93-465b-ac1a-4345cf6a1a8c" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a {color: black;background-color: white;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a pre{padding: 0;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-toggleable {background-color: white;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-estimator:hover {background-color: #d4ebff;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-item {z-index: 1;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-parallel-item:only-child::after {width: 0;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a div.sk-text-repr-fallback {display: none;}</style><div id="sk-8a8f6086-63f9-4db6-9de8-96d74a30be8a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55734af8-1b51-463c-a184-0c9ed2fa0ce4" type="checkbox" ><label for="55734af8-1b51-463c-a184-0c9ed2fa0ce4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3379505b-aeec-4ccb-af87-df4aa903af8e" type="checkbox" ><label for="3379505b-aeec-4ccb-af87-df4aa903af8e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b2eddd2-0ea3-4159-b07b-7605980b6daa" type="checkbox" ><label for="4b2eddd2-0ea3-4159-b07b-7605980b6daa" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7733483-cea4-453f-977a-5bc2822bd415" type="checkbox" ><label for="b7733483-cea4-453f-977a-5bc2822bd415" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f005682-70ac-4d6f-82eb-7d6a3616b79c" type="checkbox" ><label for="7f005682-70ac-4d6f-82eb-7d6a3616b79c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32a7fe9e-3e2d-4cf7-ab88-ec2319c35ddf" type="checkbox" ><label for="32a7fe9e-3e2d-4cf7-ab88-ec2319c35ddf" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="551c1df9-a3db-4b1d-919a-f2f1c3c6fb2e" type="checkbox" ><label for="551c1df9-a3db-4b1d-919a-f2f1c3c6fb2e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44259606-578a-4a66-97b0-4d4f5a14b38a" type="checkbox" ><label for="44259606-578a-4a66-97b0-4d4f5a14b38a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c8b663b-f21a-4f55-9464-ec4143f5f3db" type="checkbox" ><label for="5c8b663b-f21a-4f55-9464-ec4143f5f3db" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e {color: black;background-color: white;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e pre{padding: 0;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-toggleable {background-color: white;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-estimator:hover {background-color: #d4ebff;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-item {z-index: 1;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-parallel-item:only-child::after {width: 0;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e div.sk-text-repr-fallback {display: none;}</style><div id="sk-93ccefbf-e2bf-4687-b22a-08bc7e84ed8e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24ff53b2-e046-4ef5-8baa-2832dd0de623" type="checkbox" ><label for="24ff53b2-e046-4ef5-8baa-2832dd0de623" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a1853e1-47d6-44f9-b398-e85c0db715fb" type="checkbox" ><label for="3a1853e1-47d6-44f9-b398-e85c0db715fb" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be8aea04-1a59-4c58-8c67-475396258995" type="checkbox" ><label for="be8aea04-1a59-4c58-8c67-475396258995" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46e4b824-43de-4372-ab98-b21eb3a1512c" type="checkbox" ><label for="46e4b824-43de-4372-ab98-b21eb3a1512c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67da53dc-ac5f-4eb6-ab37-624e9c7e8951" type="checkbox" ><label for="67da53dc-ac5f-4eb6-ab37-624e9c7e8951" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68eaf4d1-fd3e-4dbb-96a0-a770a257c8d0" type="checkbox" ><label for="68eaf4d1-fd3e-4dbb-96a0-a770a257c8d0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cea080f-bf51-4bc0-acd8-13b84432fb39" type="checkbox" ><label for="1cea080f-bf51-4bc0-acd8-13b84432fb39" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bd09e88-faa6-4ce6-8044-5d1b245f67b3" type="checkbox" ><label for="6bd09e88-faa6-4ce6-8044-5d1b245f67b3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="add8add5-ce93-4781-9228-5f08a9035bfa" type="checkbox" ><label for="add8add5-ce93-4781-9228-5f08a9035bfa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56dcce71-e46e-46d7-a4be-82ed409b27b8" type="checkbox" ><label for="56dcce71-e46e-46d7-a4be-82ed409b27b8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
