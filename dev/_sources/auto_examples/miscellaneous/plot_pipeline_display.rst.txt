
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 {color: black;background-color: white;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 pre{padding: 0;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-toggleable {background-color: white;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-item {z-index: 1;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-parallel-item:only-child::after {width: 0;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7e8cb9c5-fc18-44ca-865e-d16021dd8060" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ecc706b-f444-4d94-b535-eaf59f0c5cb2" type="checkbox" ><label for="7ecc706b-f444-4d94-b535-eaf59f0c5cb2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61b3888b-b05e-4593-a536-66b824758cbf" type="checkbox" ><label for="61b3888b-b05e-4593-a536-66b824758cbf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01d663e0-ca0d-4b0c-8516-d3065721f1bc" type="checkbox" ><label for="01d663e0-ca0d-4b0c-8516-d3065721f1bc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-758662e5-1471-438f-967a-238afa28cb22 {color: black;background-color: white;}#sk-758662e5-1471-438f-967a-238afa28cb22 pre{padding: 0;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-toggleable {background-color: white;}#sk-758662e5-1471-438f-967a-238afa28cb22 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-758662e5-1471-438f-967a-238afa28cb22 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-758662e5-1471-438f-967a-238afa28cb22 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-758662e5-1471-438f-967a-238afa28cb22 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-758662e5-1471-438f-967a-238afa28cb22 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-758662e5-1471-438f-967a-238afa28cb22 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-estimator:hover {background-color: #d4ebff;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-item {z-index: 1;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-parallel-item:only-child::after {width: 0;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-758662e5-1471-438f-967a-238afa28cb22 div.sk-text-repr-fallback {display: none;}</style><div id="sk-758662e5-1471-438f-967a-238afa28cb22" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80d1e1d0-9a96-46bd-bd45-72ac4a7e3b7a" type="checkbox" ><label for="80d1e1d0-9a96-46bd-bd45-72ac4a7e3b7a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83947e87-15da-4fb6-bebb-94ff6ad9d862" type="checkbox" ><label for="83947e87-15da-4fb6-bebb-94ff6ad9d862" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a254ddcd-fadc-419e-90d2-b79b5f1a1dae" type="checkbox" ><label for="a254ddcd-fadc-419e-90d2-b79b5f1a1dae" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="898bc1ec-69cd-4e17-b7fa-bc5d59c470db" type="checkbox" ><label for="898bc1ec-69cd-4e17-b7fa-bc5d59c470db" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-43028a01-08f1-42bd-b2fe-88319728a24b {color: black;background-color: white;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b pre{padding: 0;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-toggleable {background-color: white;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-estimator:hover {background-color: #d4ebff;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-item {z-index: 1;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-parallel-item:only-child::after {width: 0;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-43028a01-08f1-42bd-b2fe-88319728a24b div.sk-text-repr-fallback {display: none;}</style><div id="sk-43028a01-08f1-42bd-b2fe-88319728a24b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92be32cb-db26-4cf4-9a3d-edb731e0a6fa" type="checkbox" ><label for="92be32cb-db26-4cf4-9a3d-edb731e0a6fa" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46eadaf5-3a1b-4e06-afe5-44a54454a4ea" type="checkbox" ><label for="46eadaf5-3a1b-4e06-afe5-44a54454a4ea" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cc02eea-f93d-4fea-b67d-2970e356e7fa" type="checkbox" ><label for="5cc02eea-f93d-4fea-b67d-2970e356e7fa" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a {color: black;background-color: white;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a pre{padding: 0;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-toggleable {background-color: white;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-estimator:hover {background-color: #d4ebff;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-item {z-index: 1;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-parallel-item:only-child::after {width: 0;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a div.sk-text-repr-fallback {display: none;}</style><div id="sk-6587b34c-f6f3-4db6-95d1-f3e94bfe488a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de0a41e0-3be1-4ce3-bab9-4ccca96f1225" type="checkbox" ><label for="de0a41e0-3be1-4ce3-bab9-4ccca96f1225" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77d253a8-46ca-4e8c-823b-dd9e3e220b7f" type="checkbox" ><label for="77d253a8-46ca-4e8c-823b-dd9e3e220b7f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75676392-d7c3-4e0a-aa57-f1455e73f6c3" type="checkbox" ><label for="75676392-d7c3-4e0a-aa57-f1455e73f6c3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfb8a72a-eb5f-49ea-84ad-0133513fb3c6" type="checkbox" ><label for="bfb8a72a-eb5f-49ea-84ad-0133513fb3c6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed9f1d32-a8f0-45b1-b9d2-469d5386bf2a" type="checkbox" ><label for="ed9f1d32-a8f0-45b1-b9d2-469d5386bf2a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fc25e84-f033-4c5b-accc-15aae3d84bf3" type="checkbox" ><label for="9fc25e84-f033-4c5b-accc-15aae3d84bf3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="feff659b-96ab-4eeb-8e70-b57bdbfb0771" type="checkbox" ><label for="feff659b-96ab-4eeb-8e70-b57bdbfb0771" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbc69d5d-4e8b-4322-b876-3987380755fb" type="checkbox" ><label for="bbc69d5d-4e8b-4322-b876-3987380755fb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23b34c8f-7f1c-4774-8a31-561abacb1d84" type="checkbox" ><label for="23b34c8f-7f1c-4774-8a31-561abacb1d84" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 {color: black;background-color: white;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 pre{padding: 0;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-toggleable {background-color: white;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-item {z-index: 1;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-parallel-item:only-child::after {width: 0;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e2eb7669-a9c2-46bb-8a09-f243b738f106 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e2eb7669-a9c2-46bb-8a09-f243b738f106" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e80a1058-a43b-449e-972a-ac22d5bd5dab" type="checkbox" ><label for="e80a1058-a43b-449e-972a-ac22d5bd5dab" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="206bca03-102b-4440-bde4-d93682db5ef9" type="checkbox" ><label for="206bca03-102b-4440-bde4-d93682db5ef9" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2c4a22b-5d8b-40dc-96b0-3b7ddc7f38a6" type="checkbox" ><label for="a2c4a22b-5d8b-40dc-96b0-3b7ddc7f38a6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11e145bf-619f-46e4-8e88-2dbe9ae30c1e" type="checkbox" ><label for="11e145bf-619f-46e4-8e88-2dbe9ae30c1e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2088aaff-7455-48fd-8a2d-550cede94204" type="checkbox" ><label for="2088aaff-7455-48fd-8a2d-550cede94204" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="912d5b9a-8f4b-40f7-b162-a86976f6c19e" type="checkbox" ><label for="912d5b9a-8f4b-40f7-b162-a86976f6c19e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ca9bdb2-c521-491f-9a52-fa630e1f7398" type="checkbox" ><label for="3ca9bdb2-c521-491f-9a52-fa630e1f7398" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fade3674-0201-4679-8bcb-c41f21b302cf" type="checkbox" ><label for="fade3674-0201-4679-8bcb-c41f21b302cf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1dfbef91-70e8-4dbd-aadd-2c338ffb509a" type="checkbox" ><label for="1dfbef91-70e8-4dbd-aadd-2c338ffb509a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
