
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-480a209d-1960-4c17-b35b-73eb56afe21b {color: black;background-color: white;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b pre{padding: 0;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-toggleable {background-color: white;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-estimator:hover {background-color: #d4ebff;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-item {z-index: 1;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-parallel-item:only-child::after {width: 0;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-480a209d-1960-4c17-b35b-73eb56afe21b div.sk-text-repr-fallback {display: none;}</style><div id="sk-480a209d-1960-4c17-b35b-73eb56afe21b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec910e89-e217-4ac4-a3e9-0d4ae7afa69f" type="checkbox" ><label for="ec910e89-e217-4ac4-a3e9-0d4ae7afa69f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51f427f3-fdba-4c35-9cb4-fcd1ff2829d9" type="checkbox" ><label for="51f427f3-fdba-4c35-9cb4-fcd1ff2829d9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6e6ed92-84c7-4aab-a5b0-3c4d9923e6c6" type="checkbox" ><label for="c6e6ed92-84c7-4aab-a5b0-3c4d9923e6c6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f3519729-01d6-4e59-b276-07ff19763453 {color: black;background-color: white;}#sk-f3519729-01d6-4e59-b276-07ff19763453 pre{padding: 0;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-toggleable {background-color: white;}#sk-f3519729-01d6-4e59-b276-07ff19763453 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f3519729-01d6-4e59-b276-07ff19763453 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f3519729-01d6-4e59-b276-07ff19763453 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f3519729-01d6-4e59-b276-07ff19763453 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f3519729-01d6-4e59-b276-07ff19763453 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3519729-01d6-4e59-b276-07ff19763453 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-item {z-index: 1;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-parallel-item:only-child::after {width: 0;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f3519729-01d6-4e59-b276-07ff19763453 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f3519729-01d6-4e59-b276-07ff19763453" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12aa1710-fce1-42d2-8d4b-4a27ccf40cca" type="checkbox" ><label for="12aa1710-fce1-42d2-8d4b-4a27ccf40cca" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31c7e738-4f33-4aec-8eaa-4035d6bc2db7" type="checkbox" ><label for="31c7e738-4f33-4aec-8eaa-4035d6bc2db7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b73f7745-0789-4b37-a5ae-7f2e9a78d93a" type="checkbox" ><label for="b73f7745-0789-4b37-a5ae-7f2e9a78d93a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e78d826-c10a-406d-9f9e-a31ae4b85c4e" type="checkbox" ><label for="1e78d826-c10a-406d-9f9e-a31ae4b85c4e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 {color: black;background-color: white;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 pre{padding: 0;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-toggleable {background-color: white;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-item {z-index: 1;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-parallel-item:only-child::after {width: 0;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-afa9e89e-0853-4488-8144-270e5b9a7de4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-afa9e89e-0853-4488-8144-270e5b9a7de4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b44bace1-ec43-4845-91fe-52b8c68d532f" type="checkbox" ><label for="b44bace1-ec43-4845-91fe-52b8c68d532f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87546ae6-4b4d-4556-843a-68aba42d5e8d" type="checkbox" ><label for="87546ae6-4b4d-4556-843a-68aba42d5e8d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab05cc0a-1fda-45f5-b3d7-d999a724f4b5" type="checkbox" ><label for="ab05cc0a-1fda-45f5-b3d7-d999a724f4b5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-890493a2-816e-44ed-8cbb-b7d6de596547 {color: black;background-color: white;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 pre{padding: 0;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-toggleable {background-color: white;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-estimator:hover {background-color: #d4ebff;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-item {z-index: 1;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-parallel-item:only-child::after {width: 0;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-890493a2-816e-44ed-8cbb-b7d6de596547 div.sk-text-repr-fallback {display: none;}</style><div id="sk-890493a2-816e-44ed-8cbb-b7d6de596547" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13e621bd-7eda-4463-9ecb-fd2c0b511943" type="checkbox" ><label for="13e621bd-7eda-4463-9ecb-fd2c0b511943" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7bcd89f8-ca62-4918-8a27-c392cb53cf6a" type="checkbox" ><label for="7bcd89f8-ca62-4918-8a27-c392cb53cf6a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0739da43-e686-4743-acab-696f6da4f922" type="checkbox" ><label for="0739da43-e686-4743-acab-696f6da4f922" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e04ba16c-f243-495a-ba35-eed7569cbd07" type="checkbox" ><label for="e04ba16c-f243-495a-ba35-eed7569cbd07" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f09bec0-e656-4831-9914-27a4cf416011" type="checkbox" ><label for="0f09bec0-e656-4831-9914-27a4cf416011" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="774d6b62-784a-4d96-8bdc-3baa9e5b11c9" type="checkbox" ><label for="774d6b62-784a-4d96-8bdc-3baa9e5b11c9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb340e0e-d73f-4986-a020-84785d7f219b" type="checkbox" ><label for="fb340e0e-d73f-4986-a020-84785d7f219b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b83bff77-d65e-421d-af3c-3e3d1d85dba5" type="checkbox" ><label for="b83bff77-d65e-421d-af3c-3e3d1d85dba5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8d2e851-5f54-4573-ab1b-844cda8ac839" type="checkbox" ><label for="f8d2e851-5f54-4573-ab1b-844cda8ac839" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b5e43636-849b-4949-859f-8ecd7f44d513 {color: black;background-color: white;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 pre{padding: 0;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-toggleable {background-color: white;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-item {z-index: 1;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-parallel-item:only-child::after {width: 0;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b5e43636-849b-4949-859f-8ecd7f44d513 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b5e43636-849b-4949-859f-8ecd7f44d513" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="040024c5-ecbc-4f94-98c8-c8e690d3afc8" type="checkbox" ><label for="040024c5-ecbc-4f94-98c8-c8e690d3afc8" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e5d0281-f9cb-4948-878b-c99c6ecdb1de" type="checkbox" ><label for="8e5d0281-f9cb-4948-878b-c99c6ecdb1de" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce772d28-0f91-4a0c-afe7-9970611e9df0" type="checkbox" ><label for="ce772d28-0f91-4a0c-afe7-9970611e9df0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fb119e0-4a34-4923-9085-a48261635ca3" type="checkbox" ><label for="4fb119e0-4a34-4923-9085-a48261635ca3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d82a29ea-70db-4e16-83ac-07d8e9592263" type="checkbox" ><label for="d82a29ea-70db-4e16-83ac-07d8e9592263" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c0d5ebc-37ab-4127-b236-a53ab247f126" type="checkbox" ><label for="4c0d5ebc-37ab-4127-b236-a53ab247f126" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2eec4ed7-3f72-4d94-861c-3c083a174a70" type="checkbox" ><label for="2eec4ed7-3f72-4d94-861c-3c083a174a70" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79877376-c1fd-41c3-bde1-60454a52b47c" type="checkbox" ><label for="79877376-c1fd-41c3-bde1-60454a52b47c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73c3bbee-9c83-46c2-8cc5-ecf51ac032f5" type="checkbox" ><label for="73c3bbee-9c83-46c2-8cc5-ecf51ac032f5" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.088 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
