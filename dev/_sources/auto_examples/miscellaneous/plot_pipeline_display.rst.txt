
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 {color: black;background-color: white;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 pre{padding: 0;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-toggleable {background-color: white;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-estimator:hover {background-color: #d4ebff;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-item {z-index: 1;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-parallel-item:only-child::after {width: 0;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-container {display: inline-block;position: relative;}#sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339 div.sk-text-repr-fallback {display: none;}</style><div id="sk-caa2bc47-a2e6-4522-a09b-2d60e59ab339" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f72a4b6a-2d65-46b7-96e1-131207ef4662" type="checkbox" ><label class="sk-toggleable__label" for="f72a4b6a-2d65-46b7-96e1-131207ef4662">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b543a574-3e26-4b05-871c-d83596f33055" type="checkbox" ><label class="sk-toggleable__label" for="b543a574-3e26-4b05-871c-d83596f33055">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6a2f5d5-0012-4051-8759-691f0d4b0b28" type="checkbox" ><label class="sk-toggleable__label" for="f6a2f5d5-0012-4051-8759-691f0d4b0b28">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 {color: black;background-color: white;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 pre{padding: 0;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-toggleable {background-color: white;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-item {z-index: 1;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-parallel-item:only-child::after {width: 0;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-container {display: inline-block;position: relative;}#sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fe70bf54-edcf-4327-839b-2dc094a8ebf8" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0b08518-d157-43f2-8f9b-8a7ee7ed0f94" type="checkbox" ><label class="sk-toggleable__label" for="f0b08518-d157-43f2-8f9b-8a7ee7ed0f94">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ef05210-80b4-487d-b5f1-96aabfca3784" type="checkbox" ><label class="sk-toggleable__label" for="0ef05210-80b4-487d-b5f1-96aabfca3784">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17ebae73-fc6f-4dbc-91f8-ebe21faa2a39" type="checkbox" ><label class="sk-toggleable__label" for="17ebae73-fc6f-4dbc-91f8-ebe21faa2a39">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="780ea555-3268-4536-951f-9979c2a4448c" type="checkbox" ><label class="sk-toggleable__label" for="780ea555-3268-4536-951f-9979c2a4448c">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e {color: black;background-color: white;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e pre{padding: 0;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-toggleable {background-color: white;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-estimator:hover {background-color: #d4ebff;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-item {z-index: 1;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-parallel-item:only-child::after {width: 0;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-container {display: inline-block;position: relative;}#sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e div.sk-text-repr-fallback {display: none;}</style><div id="sk-1bdeef04-fcd6-4d41-ab63-0aad33cea57e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de7e961f-16bf-4ee6-9075-44ee62c37d31" type="checkbox" ><label class="sk-toggleable__label" for="de7e961f-16bf-4ee6-9075-44ee62c37d31">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b8a00d0-8464-4137-9505-3c19bb2de13a" type="checkbox" ><label class="sk-toggleable__label" for="5b8a00d0-8464-4137-9505-3c19bb2de13a">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c2a0f0f-dcad-45b6-8386-0b21cafeef98" type="checkbox" ><label class="sk-toggleable__label" for="6c2a0f0f-dcad-45b6-8386-0b21cafeef98">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe {color: black;background-color: white;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe pre{padding: 0;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-toggleable {background-color: white;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-estimator:hover {background-color: #d4ebff;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-item {z-index: 1;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-parallel-item:only-child::after {width: 0;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-container {display: inline-block;position: relative;}#sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe div.sk-text-repr-fallback {display: none;}</style><div id="sk-20a56e5f-7d2b-4f7d-b029-7b70d710a8fe" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7708797f-ca19-4f14-b09f-1ea1bf49ad41" type="checkbox" ><label class="sk-toggleable__label" for="7708797f-ca19-4f14-b09f-1ea1bf49ad41">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ac87a57-73a7-4a7a-9f31-eb2ac5f5bd2e" type="checkbox" ><label class="sk-toggleable__label" for="8ac87a57-73a7-4a7a-9f31-eb2ac5f5bd2e">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95a0faab-f6aa-48e9-a84e-024539708e24" type="checkbox" ><label class="sk-toggleable__label" for="95a0faab-f6aa-48e9-a84e-024539708e24">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cb7e722-1f1d-474f-a9f0-0512f7065021" type="checkbox" ><label class="sk-toggleable__label" for="7cb7e722-1f1d-474f-a9f0-0512f7065021">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd51a022-fb68-4fa7-8171-8760a923cc78" type="checkbox" ><label class="sk-toggleable__label" for="bd51a022-fb68-4fa7-8171-8760a923cc78">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3ea92e5-8048-44d3-ab2a-62e523338f3a" type="checkbox" ><label class="sk-toggleable__label" for="f3ea92e5-8048-44d3-ab2a-62e523338f3a">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08aa51e9-7a90-40f6-851d-1710e528cd52" type="checkbox" ><label class="sk-toggleable__label" for="08aa51e9-7a90-40f6-851d-1710e528cd52">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0d6e3b7-3065-4620-adff-42c3363769c0" type="checkbox" ><label class="sk-toggleable__label" for="c0d6e3b7-3065-4620-adff-42c3363769c0">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ae3e645-e13b-47e4-aefd-76b2d34db1d9" type="checkbox" ><label class="sk-toggleable__label" for="3ae3e645-e13b-47e4-aefd-76b2d34db1d9">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 {color: black;background-color: white;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 pre{padding: 0;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-toggleable {background-color: white;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-item {z-index: 1;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-parallel-item:only-child::after {width: 0;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-container {display: inline-block;position: relative;}#sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b1415edc-bc4f-44e7-bff3-a61924fd30d6" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c236003a-23ab-4714-9380-4719f3af8c47" type="checkbox" ><label class="sk-toggleable__label" for="c236003a-23ab-4714-9380-4719f3af8c47">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a96d070-f6af-476e-82cc-27c95bcfac38" type="checkbox" ><label class="sk-toggleable__label" for="3a96d070-f6af-476e-82cc-27c95bcfac38">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12342da0-3e59-48e2-a00f-8e8f8ece3022" type="checkbox" ><label class="sk-toggleable__label" for="12342da0-3e59-48e2-a00f-8e8f8ece3022">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="141c4823-44f0-4a7b-a863-08462eac38cd" type="checkbox" ><label class="sk-toggleable__label" for="141c4823-44f0-4a7b-a863-08462eac38cd">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02ccebc1-9470-4473-af40-0586b8a13d9a" type="checkbox" ><label class="sk-toggleable__label" for="02ccebc1-9470-4473-af40-0586b8a13d9a">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="035c2156-664a-4375-8b81-88c1db18e3ca" type="checkbox" ><label class="sk-toggleable__label" for="035c2156-664a-4375-8b81-88c1db18e3ca">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d80a992b-dffd-459f-8dfd-99f1753965b9" type="checkbox" ><label class="sk-toggleable__label" for="d80a992b-dffd-459f-8dfd-99f1753965b9">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89648bea-d755-4cb0-b39f-55778652ff86" type="checkbox" ><label class="sk-toggleable__label" for="89648bea-d755-4cb0-b39f-55778652ff86">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddbbc5ab-927f-49d1-bbfa-1b716e8597b8" type="checkbox" ><label class="sk-toggleable__label" for="ddbbc5ab-927f-49d1-bbfa-1b716e8597b8">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.123 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
