
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd {color: black;background-color: white;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd pre{padding: 0;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-toggleable {background-color: white;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-estimator:hover {background-color: #d4ebff;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-item {z-index: 1;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-parallel-item:only-child::after {width: 0;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd div.sk-text-repr-fallback {display: none;}</style><div id="sk-0e932eff-711c-43ae-aec2-0839a2e0e4fd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9465308c-6660-47a6-a284-06013417c11a" type="checkbox" ><label for="9465308c-6660-47a6-a284-06013417c11a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80e06931-e97c-4649-81de-d4bf0ee4ab47" type="checkbox" ><label for="80e06931-e97c-4649-81de-d4bf0ee4ab47" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18c5dafa-809f-4126-bffd-f32441711be0" type="checkbox" ><label for="18c5dafa-809f-4126-bffd-f32441711be0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2733484f-0400-488d-95e0-2c4e4d956752 {color: black;background-color: white;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 pre{padding: 0;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-toggleable {background-color: white;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-item {z-index: 1;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-parallel-item:only-child::after {width: 0;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2733484f-0400-488d-95e0-2c4e4d956752 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2733484f-0400-488d-95e0-2c4e4d956752" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd62b29e-cc53-40d3-a714-cec31a3a2c39" type="checkbox" ><label for="dd62b29e-cc53-40d3-a714-cec31a3a2c39" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1dd933fa-899b-4428-a040-e739ab88fd26" type="checkbox" ><label for="1dd933fa-899b-4428-a040-e739ab88fd26" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df03e9fb-fb00-4064-805a-835977e3ac20" type="checkbox" ><label for="df03e9fb-fb00-4064-805a-835977e3ac20" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28c535c9-985b-4326-b100-14ac25332d48" type="checkbox" ><label for="28c535c9-985b-4326-b100-14ac25332d48" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-35b63783-3ccf-4690-987a-6973bcaab99d {color: black;background-color: white;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d pre{padding: 0;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-toggleable {background-color: white;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-estimator:hover {background-color: #d4ebff;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-item {z-index: 1;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-parallel-item:only-child::after {width: 0;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-35b63783-3ccf-4690-987a-6973bcaab99d div.sk-text-repr-fallback {display: none;}</style><div id="sk-35b63783-3ccf-4690-987a-6973bcaab99d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d553d6c6-b4c2-4b6a-a19c-2b7fa7942055" type="checkbox" ><label for="d553d6c6-b4c2-4b6a-a19c-2b7fa7942055" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5eb607b5-284d-4e04-a565-c8ab99d78236" type="checkbox" ><label for="5eb607b5-284d-4e04-a565-c8ab99d78236" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffe2ea7e-b955-4b91-adfa-2c5c04070b80" type="checkbox" ><label for="ffe2ea7e-b955-4b91-adfa-2c5c04070b80" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc {color: black;background-color: white;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc pre{padding: 0;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-toggleable {background-color: white;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-estimator:hover {background-color: #d4ebff;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-item {z-index: 1;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-parallel-item:only-child::after {width: 0;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc div.sk-text-repr-fallback {display: none;}</style><div id="sk-2bdd42d2-3ab6-4261-9374-c834eeb5bdcc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce29015d-d831-4a11-92e7-059556ad20c7" type="checkbox" ><label for="ce29015d-d831-4a11-92e7-059556ad20c7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e1eb22b-2bb9-439e-b78a-a48b39adc6c0" type="checkbox" ><label for="8e1eb22b-2bb9-439e-b78a-a48b39adc6c0" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f381361-84ef-4a4e-9b24-e1d6ecf381f0" type="checkbox" ><label for="4f381361-84ef-4a4e-9b24-e1d6ecf381f0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99a9920f-4099-4cf8-9857-2a919c6ecaf1" type="checkbox" ><label for="99a9920f-4099-4cf8-9857-2a919c6ecaf1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b0f901d-ad5a-4423-a7c3-86748b1a90a6" type="checkbox" ><label for="2b0f901d-ad5a-4423-a7c3-86748b1a90a6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="236dd606-5999-48c7-9c91-bae77bc332fc" type="checkbox" ><label for="236dd606-5999-48c7-9c91-bae77bc332fc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db7f0d78-1567-494c-a6c8-72e5063d2f0c" type="checkbox" ><label for="db7f0d78-1567-494c-a6c8-72e5063d2f0c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="072f1d73-0858-4182-8aad-5af12d357964" type="checkbox" ><label for="072f1d73-0858-4182-8aad-5af12d357964" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17f4008f-4c99-4db9-8e75-f743a36c529f" type="checkbox" ><label for="17f4008f-4c99-4db9-8e75-f743a36c529f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 {color: black;background-color: white;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 pre{padding: 0;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-toggleable {background-color: white;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-item {z-index: 1;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-parallel-item:only-child::after {width: 0;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f5f6c4dd-5d6a-4673-b394-e987f972d707 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f5f6c4dd-5d6a-4673-b394-e987f972d707" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08936f05-9e87-4dba-bf41-d353c50e23bf" type="checkbox" ><label for="08936f05-9e87-4dba-bf41-d353c50e23bf" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0de19da0-8aff-4763-a345-5bd73d263481" type="checkbox" ><label for="0de19da0-8aff-4763-a345-5bd73d263481" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ceb0006f-547b-4d58-843f-c9e3a1badcea" type="checkbox" ><label for="ceb0006f-547b-4d58-843f-c9e3a1badcea" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2d6da02-3d89-4882-aef2-4257dd343461" type="checkbox" ><label for="d2d6da02-3d89-4882-aef2-4257dd343461" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="faed5b9b-596f-410b-a20a-a377d021e0d1" type="checkbox" ><label for="faed5b9b-596f-410b-a20a-a377d021e0d1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bd4d856-4ae6-4887-8d69-fe8cc38e2aed" type="checkbox" ><label for="8bd4d856-4ae6-4887-8d69-fe8cc38e2aed" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9db8892b-3eeb-4b3a-89bb-18083b6b1db6" type="checkbox" ><label for="9db8892b-3eeb-4b3a-89bb-18083b6b1db6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0193f77a-685a-4283-8168-9e2670ceb95c" type="checkbox" ><label for="0193f77a-685a-4283-8168-9e2670ceb95c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4c49254-c882-4677-806a-6998d5ed1967" type="checkbox" ><label for="f4c49254-c882-4677-806a-6998d5ed1967" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
