
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 {color: black;background-color: white;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 pre{padding: 0;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-toggleable {background-color: white;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-estimator:hover {background-color: #d4ebff;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-item {z-index: 1;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-parallel-item:only-child::after {width: 0;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056 div.sk-text-repr-fallback {display: none;}</style><div id="sk-63cc496a-218f-4a5f-9ad8-afc8df2c2056" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ef78bb0-0bd7-4ff4-9d39-b4752eaeaeeb" type="checkbox" ><label for="3ef78bb0-0bd7-4ff4-9d39-b4752eaeaeeb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="682f70df-2551-475a-a334-271d412382ba" type="checkbox" ><label for="682f70df-2551-475a-a334-271d412382ba" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01ad55d0-c906-49c5-b999-31ac28af1531" type="checkbox" ><label for="01ad55d0-c906-49c5-b999-31ac28af1531" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b4d23119-4359-4638-8c25-757af0c734f2 {color: black;background-color: white;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 pre{padding: 0;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-toggleable {background-color: white;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-item {z-index: 1;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-parallel-item:only-child::after {width: 0;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b4d23119-4359-4638-8c25-757af0c734f2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b4d23119-4359-4638-8c25-757af0c734f2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83a7401b-1c78-4d93-9afa-847de3368512" type="checkbox" ><label for="83a7401b-1c78-4d93-9afa-847de3368512" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e48c173d-90e9-4622-880a-eaecf5991978" type="checkbox" ><label for="e48c173d-90e9-4622-880a-eaecf5991978" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c320313-35eb-40a9-849d-348253813812" type="checkbox" ><label for="9c320313-35eb-40a9-849d-348253813812" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f991e52-d1cb-4c02-9d28-aa41b6e00e7c" type="checkbox" ><label for="3f991e52-d1cb-4c02-9d28-aa41b6e00e7c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 {color: black;background-color: white;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 pre{padding: 0;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-toggleable {background-color: white;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-item {z-index: 1;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-parallel-item:only-child::after {width: 0;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4a25caae-2fe7-48df-b2bf-36f698ce6f01" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62d51878-34a4-46a9-a56d-94da99cb2fa1" type="checkbox" ><label for="62d51878-34a4-46a9-a56d-94da99cb2fa1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="487898cb-574e-4233-9efb-d9342f5e9828" type="checkbox" ><label for="487898cb-574e-4233-9efb-d9342f5e9828" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="beca550c-36cd-4972-94a0-2e5cadeb1da2" type="checkbox" ><label for="beca550c-36cd-4972-94a0-2e5cadeb1da2" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d {color: black;background-color: white;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d pre{padding: 0;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-toggleable {background-color: white;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-estimator:hover {background-color: #d4ebff;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-item {z-index: 1;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-parallel-item:only-child::after {width: 0;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b66d28f4-a592-4c7f-81ee-c44c373c813d div.sk-text-repr-fallback {display: none;}</style><div id="sk-b66d28f4-a592-4c7f-81ee-c44c373c813d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d5e377d-ebf6-449a-8c71-f0e8900e747d" type="checkbox" ><label for="9d5e377d-ebf6-449a-8c71-f0e8900e747d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78e37df8-8156-43e9-8a95-789253ab43dc" type="checkbox" ><label for="78e37df8-8156-43e9-8a95-789253ab43dc" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c91ad731-743a-4fcd-a33d-ddeeb08627a0" type="checkbox" ><label for="c91ad731-743a-4fcd-a33d-ddeeb08627a0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8745fcf2-03cf-4cf3-afca-c8d669894690" type="checkbox" ><label for="8745fcf2-03cf-4cf3-afca-c8d669894690" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b39123dd-dd45-4139-b7db-4b951c185f05" type="checkbox" ><label for="b39123dd-dd45-4139-b7db-4b951c185f05" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7edd8bcb-11fe-4cd9-88a4-7e4596f9a9b3" type="checkbox" ><label for="7edd8bcb-11fe-4cd9-88a4-7e4596f9a9b3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b788a97a-4ba7-46be-be3d-a17acf3c9248" type="checkbox" ><label for="b788a97a-4ba7-46be-be3d-a17acf3c9248" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a70c9bcd-adea-4e1a-ab89-d4ac6caa51ea" type="checkbox" ><label for="a70c9bcd-adea-4e1a-ab89-d4ac6caa51ea" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82353315-ae07-4239-a577-ee6bb88f73be" type="checkbox" ><label for="82353315-ae07-4239-a577-ee6bb88f73be" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 {color: black;background-color: white;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 pre{padding: 0;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-toggleable {background-color: white;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-item {z-index: 1;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-parallel-item:only-child::after {width: 0;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1b6d4745-a342-403c-81dd-b3b2a2a09e30" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c76d5aad-78da-4e43-9737-988136b40342" type="checkbox" ><label for="c76d5aad-78da-4e43-9737-988136b40342" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee500277-cac0-4909-a650-489e8a7f6092" type="checkbox" ><label for="ee500277-cac0-4909-a650-489e8a7f6092" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fb809eb-e4dc-4598-9b60-420a04ba5260" type="checkbox" ><label for="2fb809eb-e4dc-4598-9b60-420a04ba5260" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64237265-7f18-49e8-ad84-a820b9f4442c" type="checkbox" ><label for="64237265-7f18-49e8-ad84-a820b9f4442c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0516cd59-8316-466d-878d-6339bbdfe49b" type="checkbox" ><label for="0516cd59-8316-466d-878d-6339bbdfe49b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6faa0518-9794-4346-981f-5833e303df4a" type="checkbox" ><label for="6faa0518-9794-4346-981f-5833e303df4a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9900144a-f8b0-4509-b094-26b15bd1218a" type="checkbox" ><label for="9900144a-f8b0-4509-b094-26b15bd1218a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ae690b2-5363-433a-8580-b887e3971980" type="checkbox" ><label for="5ae690b2-5363-433a-8580-b887e3971980" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f463da2c-c56e-4747-82f7-01dc73216bea" type="checkbox" ><label for="f463da2c-c56e-4747-82f7-01dc73216bea" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
