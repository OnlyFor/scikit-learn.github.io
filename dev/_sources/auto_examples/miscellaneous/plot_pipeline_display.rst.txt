
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d {color: black;background-color: white;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d pre{padding: 0;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-toggleable {background-color: white;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-estimator:hover {background-color: #d4ebff;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-item {z-index: 1;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-parallel-item:only-child::after {width: 0;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e0638c58-4f95-49ef-8d42-e951b0668a9d div.sk-text-repr-fallback {display: none;}</style><div id="sk-e0638c58-4f95-49ef-8d42-e951b0668a9d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25f954c2-2dd2-4fdf-b8e4-2652996b5770" type="checkbox" ><label for="25f954c2-2dd2-4fdf-b8e4-2652996b5770" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a30af1c-946f-45bf-b895-52bb1e0d6120" type="checkbox" ><label for="8a30af1c-946f-45bf-b895-52bb1e0d6120" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="251d80f5-9502-48c6-a97d-7015f4bca101" type="checkbox" ><label for="251d80f5-9502-48c6-a97d-7015f4bca101" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f {color: black;background-color: white;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f pre{padding: 0;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-toggleable {background-color: white;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-estimator:hover {background-color: #d4ebff;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-item {z-index: 1;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-parallel-item:only-child::after {width: 0;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-47484c17-e23a-42cd-8c5c-28fcbeac383f div.sk-text-repr-fallback {display: none;}</style><div id="sk-47484c17-e23a-42cd-8c5c-28fcbeac383f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b41b5528-5561-4dcb-94f6-df7ec839c99b" type="checkbox" ><label for="b41b5528-5561-4dcb-94f6-df7ec839c99b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d301dd3b-f154-4e02-b942-f05235d7b955" type="checkbox" ><label for="d301dd3b-f154-4e02-b942-f05235d7b955" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea1ab35a-556a-4e98-9085-b7ec5611d976" type="checkbox" ><label for="ea1ab35a-556a-4e98-9085-b7ec5611d976" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="925d15a7-e220-4310-b967-8239311db05d" type="checkbox" ><label for="925d15a7-e220-4310-b967-8239311db05d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b {color: black;background-color: white;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b pre{padding: 0;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-toggleable {background-color: white;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-estimator:hover {background-color: #d4ebff;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-item {z-index: 1;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-parallel-item:only-child::after {width: 0;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b div.sk-text-repr-fallback {display: none;}</style><div id="sk-722e18f1-ae59-47b2-91a1-5b83ae13f06b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fabb51a-a92f-495a-b499-133e9b287b3f" type="checkbox" ><label for="4fabb51a-a92f-495a-b499-133e9b287b3f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9f0c83f-4f0e-430d-9ab8-2504e38e16b4" type="checkbox" ><label for="e9f0c83f-4f0e-430d-9ab8-2504e38e16b4" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61f09610-387d-4e94-94d0-ebcfd85e5e65" type="checkbox" ><label for="61f09610-387d-4e94-94d0-ebcfd85e5e65" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 {color: black;background-color: white;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 pre{padding: 0;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-toggleable {background-color: white;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-item {z-index: 1;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-parallel-item:only-child::after {width: 0;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9823a062-7d0f-42f9-b307-7bfd4ecea3c5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05e0dbbf-0d9b-42cd-bb50-1c095967f3ba" type="checkbox" ><label for="05e0dbbf-0d9b-42cd-bb50-1c095967f3ba" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a2ef648-03a1-4f4c-9d4e-c2bc72bfb1ec" type="checkbox" ><label for="5a2ef648-03a1-4f4c-9d4e-c2bc72bfb1ec" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32c7f96e-ee83-4934-b911-465760651ba6" type="checkbox" ><label for="32c7f96e-ee83-4934-b911-465760651ba6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="111b92ca-6bc5-4cd3-ab5b-e37fa4d5d8cf" type="checkbox" ><label for="111b92ca-6bc5-4cd3-ab5b-e37fa4d5d8cf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6763330b-a537-4a92-8b94-36f151de1603" type="checkbox" ><label for="6763330b-a537-4a92-8b94-36f151de1603" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26aade8b-85d8-43cf-b1f3-40792667b210" type="checkbox" ><label for="26aade8b-85d8-43cf-b1f3-40792667b210" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c68df52b-9128-480a-a3c6-9732a06ce816" type="checkbox" ><label for="c68df52b-9128-480a-a3c6-9732a06ce816" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e63d28b3-fee8-4f8f-9e8b-9c7feb914e63" type="checkbox" ><label for="e63d28b3-fee8-4f8f-9e8b-9c7feb914e63" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7f7cd07-9a3b-407a-a2e6-76eb40ebe672" type="checkbox" ><label for="a7f7cd07-9a3b-407a-a2e6-76eb40ebe672" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 {color: black;background-color: white;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 pre{padding: 0;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-toggleable {background-color: white;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-item {z-index: 1;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-parallel-item:only-child::after {width: 0;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-030eca8c-7348-4fbe-9aa2-a91284f656a0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-030eca8c-7348-4fbe-9aa2-a91284f656a0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea7b0e43-5fb7-461b-a9ab-e4d9e9f691c4" type="checkbox" ><label for="ea7b0e43-5fb7-461b-a9ab-e4d9e9f691c4" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d186e743-8ab1-4759-b19d-d4b4709fbe4a" type="checkbox" ><label for="d186e743-8ab1-4759-b19d-d4b4709fbe4a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="debba68a-288a-4f85-b1e9-c5fc2e38b063" type="checkbox" ><label for="debba68a-288a-4f85-b1e9-c5fc2e38b063" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c555210-4495-444e-a767-b146af50904a" type="checkbox" ><label for="1c555210-4495-444e-a767-b146af50904a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15255037-9dd6-4b21-8093-c1b03343a964" type="checkbox" ><label for="15255037-9dd6-4b21-8093-c1b03343a964" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8ec325c-c8d0-4c12-8fed-09e2a76406be" type="checkbox" ><label for="f8ec325c-c8d0-4c12-8fed-09e2a76406be" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9dc4eee1-b7a0-4913-acf4-b35b71a19c16" type="checkbox" ><label for="9dc4eee1-b7a0-4913-acf4-b35b71a19c16" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d12e8bf-7d19-4c87-8731-180982873f0a" type="checkbox" ><label for="5d12e8bf-7d19-4c87-8731-180982873f0a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62d66a42-c44f-4e5c-ad8c-9ec6b01b7e6e" type="checkbox" ><label for="62d66a42-c44f-4e5c-ad8c-9ec6b01b7e6e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
