
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a {color: black;background-color: white;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a pre{padding: 0;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-toggleable {background-color: white;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-estimator:hover {background-color: #d4ebff;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-item {z-index: 1;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-parallel-item:only-child::after {width: 0;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a div.sk-text-repr-fallback {display: none;}</style><div id="sk-b4b39a5e-0489-4bcc-b140-6e5f8416b99a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b94e213f-d450-488a-9bec-16a2c97686d7" type="checkbox" ><label for="b94e213f-d450-488a-9bec-16a2c97686d7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d6a4ded-46b7-40bf-9d2a-f4cc33d0308d" type="checkbox" ><label for="7d6a4ded-46b7-40bf-9d2a-f4cc33d0308d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7f63a4e-7124-456d-924e-ea507d64da84" type="checkbox" ><label for="b7f63a4e-7124-456d-924e-ea507d64da84" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb {color: black;background-color: white;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb pre{padding: 0;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-toggleable {background-color: white;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-item {z-index: 1;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-parallel-item:only-child::after {width: 0;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab434ea8-f648-45e4-9206-abf6f7fcb2eb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21c7e0c6-1d17-4cba-8f35-b4c7cafc14fe" type="checkbox" ><label for="21c7e0c6-1d17-4cba-8f35-b4c7cafc14fe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9c96048-f231-4d88-91c1-26f5324eecdc" type="checkbox" ><label for="a9c96048-f231-4d88-91c1-26f5324eecdc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5325e7bb-a2cc-4b8d-a65a-6e25932ec9b0" type="checkbox" ><label for="5325e7bb-a2cc-4b8d-a65a-6e25932ec9b0" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5480c2d4-ee2a-4d30-8ace-fb83367d78bc" type="checkbox" ><label for="5480c2d4-ee2a-4d30-8ace-fb83367d78bc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 {color: black;background-color: white;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 pre{padding: 0;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-toggleable {background-color: white;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-item {z-index: 1;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-parallel-item:only-child::after {width: 0;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2e6d3752-17a3-4bd9-9fe3-ba271e935d17" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73c84809-23d8-450c-9965-08b41952adce" type="checkbox" ><label for="73c84809-23d8-450c-9965-08b41952adce" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="daf772a2-19b9-4661-9ec3-79f6132d7d3f" type="checkbox" ><label for="daf772a2-19b9-4661-9ec3-79f6132d7d3f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad180390-e771-4897-bc5b-21c1d16d4af0" type="checkbox" ><label for="ad180390-e771-4897-bc5b-21c1d16d4af0" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e {color: black;background-color: white;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e pre{padding: 0;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-toggleable {background-color: white;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-estimator:hover {background-color: #d4ebff;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-item {z-index: 1;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-parallel-item:only-child::after {width: 0;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e div.sk-text-repr-fallback {display: none;}</style><div id="sk-344dd634-bb0d-4bb5-8cdb-932f2b998c5e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fbd414d-34e2-499c-a23c-5caf2f11ed61" type="checkbox" ><label for="7fbd414d-34e2-499c-a23c-5caf2f11ed61" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46d9230c-4e16-4e8b-b209-3ed5242f67e3" type="checkbox" ><label for="46d9230c-4e16-4e8b-b209-3ed5242f67e3" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c22c1ae-6b79-46fd-8a52-bb609a17ecbb" type="checkbox" ><label for="8c22c1ae-6b79-46fd-8a52-bb609a17ecbb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86b8a6fb-2121-48e6-a0bf-0a60dea03957" type="checkbox" ><label for="86b8a6fb-2121-48e6-a0bf-0a60dea03957" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48d7c6aa-e4a7-428d-b9a9-e0f61feae605" type="checkbox" ><label for="48d7c6aa-e4a7-428d-b9a9-e0f61feae605" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="412e0f17-4d03-492a-bbd7-14b763db440b" type="checkbox" ><label for="412e0f17-4d03-492a-bbd7-14b763db440b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acce297c-bbaf-4b17-8643-7b6fd35b7a03" type="checkbox" ><label for="acce297c-bbaf-4b17-8643-7b6fd35b7a03" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd19f0f5-bfff-45d0-a51e-a9fb01ac6b56" type="checkbox" ><label for="cd19f0f5-bfff-45d0-a51e-a9fb01ac6b56" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4145e94a-474a-4ee2-be5b-bd3f2c161cc5" type="checkbox" ><label for="4145e94a-474a-4ee2-be5b-bd3f2c161cc5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f {color: black;background-color: white;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f pre{padding: 0;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-toggleable {background-color: white;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-estimator:hover {background-color: #d4ebff;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-item {z-index: 1;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-parallel-item:only-child::after {width: 0;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ba89906e-70fd-4daf-9bd9-7272f983b38f div.sk-text-repr-fallback {display: none;}</style><div id="sk-ba89906e-70fd-4daf-9bd9-7272f983b38f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5d966f2-a3e3-4908-aeb1-ad7e888476ec" type="checkbox" ><label for="d5d966f2-a3e3-4908-aeb1-ad7e888476ec" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5dc5bf0e-459f-4b14-9a42-7f57fd2c4392" type="checkbox" ><label for="5dc5bf0e-459f-4b14-9a42-7f57fd2c4392" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fcf251e-2f84-4048-a191-ea995c32dc69" type="checkbox" ><label for="9fcf251e-2f84-4048-a191-ea995c32dc69" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98441b7e-2083-492f-a32a-f2334e49d62b" type="checkbox" ><label for="98441b7e-2083-492f-a32a-f2334e49d62b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04499b6d-3a60-43ec-8ca5-6aac06885ab7" type="checkbox" ><label for="04499b6d-3a60-43ec-8ca5-6aac06885ab7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a265d37-f23e-4192-a477-26c34ddff646" type="checkbox" ><label for="6a265d37-f23e-4192-a477-26c34ddff646" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7670107a-8f63-4c74-8ec3-58046182e056" type="checkbox" ><label for="7670107a-8f63-4c74-8ec3-58046182e056" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da35ce47-60e8-489f-9afe-927c98167fd2" type="checkbox" ><label for="da35ce47-60e8-489f-9afe-927c98167fd2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9950d55-8c0a-4a76-87c0-b5691d627ebb" type="checkbox" ><label for="b9950d55-8c0a-4a76-87c0-b5691d627ebb" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
