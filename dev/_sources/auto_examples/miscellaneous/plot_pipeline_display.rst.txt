
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced {color: black;background-color: white;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced pre{padding: 0;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-toggleable {background-color: white;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-estimator:hover {background-color: #d4ebff;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-item {z-index: 1;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-parallel-item:only-child::after {width: 0;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced div.sk-text-repr-fallback {display: none;}</style><div id="sk-02ac9bfa-bd5f-49f5-87d4-9401b5068ced" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb451831-edbf-4293-aa9c-3d73d6d6aad7" type="checkbox" ><label for="bb451831-edbf-4293-aa9c-3d73d6d6aad7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5a45f0b-8d9a-4eb7-bcaa-7e7a6cf66956" type="checkbox" ><label for="b5a45f0b-8d9a-4eb7-bcaa-7e7a6cf66956" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7ca2f75-29cc-4eb0-8d11-99de3274fb56" type="checkbox" ><label for="a7ca2f75-29cc-4eb0-8d11-99de3274fb56" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-de8fe92b-6343-4241-99c9-255652daeb5a {color: black;background-color: white;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a pre{padding: 0;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-toggleable {background-color: white;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-estimator:hover {background-color: #d4ebff;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-item {z-index: 1;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-parallel-item:only-child::after {width: 0;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-de8fe92b-6343-4241-99c9-255652daeb5a div.sk-text-repr-fallback {display: none;}</style><div id="sk-de8fe92b-6343-4241-99c9-255652daeb5a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fede19a5-f7ae-4b5c-9eb6-75d9898fd2f1" type="checkbox" ><label for="fede19a5-f7ae-4b5c-9eb6-75d9898fd2f1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ef8dfec-fb3b-4f7b-978a-9f2a8ea8808b" type="checkbox" ><label for="5ef8dfec-fb3b-4f7b-978a-9f2a8ea8808b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40caeba3-6c83-4d8c-a2cf-b71bc225ca57" type="checkbox" ><label for="40caeba3-6c83-4d8c-a2cf-b71bc225ca57" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9468eaf0-2576-4dfa-a36f-15fd3a15c77f" type="checkbox" ><label for="9468eaf0-2576-4dfa-a36f-15fd3a15c77f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-98dabf2a-eb57-48ba-b18a-34897845f46b {color: black;background-color: white;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b pre{padding: 0;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-toggleable {background-color: white;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-estimator:hover {background-color: #d4ebff;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-item {z-index: 1;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-parallel-item:only-child::after {width: 0;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-98dabf2a-eb57-48ba-b18a-34897845f46b div.sk-text-repr-fallback {display: none;}</style><div id="sk-98dabf2a-eb57-48ba-b18a-34897845f46b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1d3a631-d908-4050-af73-528714b0ff0a" type="checkbox" ><label for="b1d3a631-d908-4050-af73-528714b0ff0a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e45c55bc-e0e4-4d06-b76e-c364f094429f" type="checkbox" ><label for="e45c55bc-e0e4-4d06-b76e-c364f094429f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="980b95c6-08bb-4c81-af34-95195f3a4ff1" type="checkbox" ><label for="980b95c6-08bb-4c81-af34-95195f3a4ff1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 {color: black;background-color: white;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 pre{padding: 0;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-toggleable {background-color: white;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-item {z-index: 1;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-parallel-item:only-child::after {width: 0;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8db93bc4-54b1-4fae-bd6f-1aa6efa91ce3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cc0c473-e1d2-4d70-bef7-f91d1b581bf8" type="checkbox" ><label for="1cc0c473-e1d2-4d70-bef7-f91d1b581bf8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06ab818b-ec96-4cb7-a864-3171d78271c5" type="checkbox" ><label for="06ab818b-ec96-4cb7-a864-3171d78271c5" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a704852-3c11-43c1-b3d5-2ab89db37261" type="checkbox" ><label for="4a704852-3c11-43c1-b3d5-2ab89db37261" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a69b4e7-b366-429b-90b4-566ec375b99b" type="checkbox" ><label for="5a69b4e7-b366-429b-90b4-566ec375b99b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7daf1117-33b1-4e61-acdc-bafc52446a0d" type="checkbox" ><label for="7daf1117-33b1-4e61-acdc-bafc52446a0d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dce72b08-e489-4fe8-adfe-fe4b1da7fd1e" type="checkbox" ><label for="dce72b08-e489-4fe8-adfe-fe4b1da7fd1e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e005a9e3-6845-48f2-983c-8d04db851cbc" type="checkbox" ><label for="e005a9e3-6845-48f2-983c-8d04db851cbc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="122452d5-89b0-4a95-9afc-d0832f8cf92c" type="checkbox" ><label for="122452d5-89b0-4a95-9afc-d0832f8cf92c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25ff0cd7-c9d7-4ac9-85a9-b185fb6f3d7d" type="checkbox" ><label for="25ff0cd7-c9d7-4ac9-85a9-b185fb6f3d7d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fe98b5d0-192b-493f-be6c-b93d552625bd {color: black;background-color: white;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd pre{padding: 0;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-toggleable {background-color: white;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-estimator:hover {background-color: #d4ebff;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-item {z-index: 1;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-parallel-item:only-child::after {width: 0;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fe98b5d0-192b-493f-be6c-b93d552625bd div.sk-text-repr-fallback {display: none;}</style><div id="sk-fe98b5d0-192b-493f-be6c-b93d552625bd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f543575d-58ed-4224-8eb6-9d99441a6d6c" type="checkbox" ><label for="f543575d-58ed-4224-8eb6-9d99441a6d6c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efcdc553-76be-4b81-8562-35e7e3d3178d" type="checkbox" ><label for="efcdc553-76be-4b81-8562-35e7e3d3178d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d97b197-8e48-483c-b9fe-229ad669b2b0" type="checkbox" ><label for="6d97b197-8e48-483c-b9fe-229ad669b2b0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10165294-692a-4bbd-bf44-f31c168917bb" type="checkbox" ><label for="10165294-692a-4bbd-bf44-f31c168917bb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd05ef5c-f461-459f-b5a8-b6d1a0e2c7ad" type="checkbox" ><label for="fd05ef5c-f461-459f-b5a8-b6d1a0e2c7ad" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="702e9c30-49b2-4458-8605-cc5f27c71843" type="checkbox" ><label for="702e9c30-49b2-4458-8605-cc5f27c71843" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d85084fa-8888-4723-a530-ba3eaea3c28e" type="checkbox" ><label for="d85084fa-8888-4723-a530-ba3eaea3c28e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14db6afb-ca08-48fa-b287-71b5cf4bf5ab" type="checkbox" ><label for="14db6afb-ca08-48fa-b287-71b5cf4bf5ab" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="680793d9-99a2-4a9a-acb7-9e25495ae4ae" type="checkbox" ><label for="680793d9-99a2-4a9a-acb7-9e25495ae4ae" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
