
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b8fef78d-8507-43b9-a771-0932d00de07f {color: black;background-color: white;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f pre{padding: 0;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-toggleable {background-color: white;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-estimator:hover {background-color: #d4ebff;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-item {z-index: 1;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-parallel-item:only-child::after {width: 0;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b8fef78d-8507-43b9-a771-0932d00de07f div.sk-text-repr-fallback {display: none;}</style><div id="sk-b8fef78d-8507-43b9-a771-0932d00de07f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="486380dc-5de0-4547-8d2c-858d1698f36f" type="checkbox" ><label for="486380dc-5de0-4547-8d2c-858d1698f36f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4305665-edde-450e-911c-794f5b9bd14f" type="checkbox" ><label for="d4305665-edde-450e-911c-794f5b9bd14f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac3f0d4c-fb4a-44ef-a044-655981390456" type="checkbox" ><label for="ac3f0d4c-fb4a-44ef-a044-655981390456" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f {color: black;background-color: white;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f pre{padding: 0;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-toggleable {background-color: white;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-item {z-index: 1;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-parallel-item:only-child::after {width: 0;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b0b3a08-4aae-4c08-b412-519cdf0dcb2f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44f97ff0-f47e-4cdb-be78-0c422ba51dd1" type="checkbox" ><label for="44f97ff0-f47e-4cdb-be78-0c422ba51dd1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8367b43-1545-48c7-bb0f-5aec3b46d3b0" type="checkbox" ><label for="b8367b43-1545-48c7-bb0f-5aec3b46d3b0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc392a36-4c9f-4237-8d99-68b621027fa0" type="checkbox" ><label for="bc392a36-4c9f-4237-8d99-68b621027fa0" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7155fb6e-0178-4b50-a760-18d3517c901e" type="checkbox" ><label for="7155fb6e-0178-4b50-a760-18d3517c901e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 {color: black;background-color: white;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 pre{padding: 0;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-toggleable {background-color: white;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-item {z-index: 1;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-parallel-item:only-child::after {width: 0;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9886902a-8779-4bfc-9dc5-01eeb803ee01 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9886902a-8779-4bfc-9dc5-01eeb803ee01" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f6d5bed-ebd2-4f67-837a-838cde564968" type="checkbox" ><label for="3f6d5bed-ebd2-4f67-837a-838cde564968" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc252ba2-7a47-4cee-b46e-13a7189eb2b1" type="checkbox" ><label for="bc252ba2-7a47-4cee-b46e-13a7189eb2b1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cda258d5-3e05-4c5b-9dd6-1c162efcbc3d" type="checkbox" ><label for="cda258d5-3e05-4c5b-9dd6-1c162efcbc3d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 {color: black;background-color: white;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 pre{padding: 0;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-toggleable {background-color: white;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-item {z-index: 1;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-parallel-item:only-child::after {width: 0;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-906a5241-a30b-4b6a-b0d7-6dc4c70e41e3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5489cc4-2654-418f-9007-a9a0219f4df3" type="checkbox" ><label for="a5489cc4-2654-418f-9007-a9a0219f4df3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca9ab82d-aa73-4832-9768-4e4d856a8d56" type="checkbox" ><label for="ca9ab82d-aa73-4832-9768-4e4d856a8d56" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f983754b-16a1-466d-a542-50c6533a9c83" type="checkbox" ><label for="f983754b-16a1-466d-a542-50c6533a9c83" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7285944a-1420-4094-80fb-09c64dc5f0d4" type="checkbox" ><label for="7285944a-1420-4094-80fb-09c64dc5f0d4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3842c190-737c-4ab9-8338-433230012e4f" type="checkbox" ><label for="3842c190-737c-4ab9-8338-433230012e4f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e7eb2ed-b27f-48b1-be2a-cd357a86cd98" type="checkbox" ><label for="3e7eb2ed-b27f-48b1-be2a-cd357a86cd98" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3873dd8d-206c-47c1-98ba-936ee0f12d0f" type="checkbox" ><label for="3873dd8d-206c-47c1-98ba-936ee0f12d0f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b74bb954-cfc7-4942-b700-cd8e127e3c59" type="checkbox" ><label for="b74bb954-cfc7-4942-b700-cd8e127e3c59" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a79551d-a21e-48bd-b129-02e15f1b6954" type="checkbox" ><label for="7a79551d-a21e-48bd-b129-02e15f1b6954" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 {color: black;background-color: white;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 pre{padding: 0;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-toggleable {background-color: white;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-item {z-index: 1;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-parallel-item:only-child::after {width: 0;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8b3624b9-57de-4b35-8c29-07d2a4bd1cf9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddf53481-0041-4c7d-af93-336178707939" type="checkbox" ><label for="ddf53481-0041-4c7d-af93-336178707939" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b872edc-bd06-4ac5-a1b6-ed76507cf4f3" type="checkbox" ><label for="8b872edc-bd06-4ac5-a1b6-ed76507cf4f3" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25b1eb2e-67ad-4ddd-a758-1055f73c04c0" type="checkbox" ><label for="25b1eb2e-67ad-4ddd-a758-1055f73c04c0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fed75964-db94-4e27-b923-0af6a229e040" type="checkbox" ><label for="fed75964-db94-4e27-b923-0af6a229e040" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="595b3219-db30-46f5-9f9c-39fa1907a3fd" type="checkbox" ><label for="595b3219-db30-46f5-9f9c-39fa1907a3fd" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d986b4e8-5848-4aed-9a2d-9cebf8f43b32" type="checkbox" ><label for="d986b4e8-5848-4aed-9a2d-9cebf8f43b32" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="944da844-86ac-4ab1-8ef7-99d855000b76" type="checkbox" ><label for="944da844-86ac-4ab1-8ef7-99d855000b76" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a378510-5ea2-4f4d-861f-bad73767b962" type="checkbox" ><label for="5a378510-5ea2-4f4d-861f-bad73767b962" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c995841f-933c-4a6d-acf3-2e6628d1b93c" type="checkbox" ><label for="c995841f-933c-4a6d-acf3-2e6628d1b93c" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
