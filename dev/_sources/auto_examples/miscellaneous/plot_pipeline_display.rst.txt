
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-957e1c37-7032-4874-9523-e5c51cebaa40 {color: black;background-color: white;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 pre{padding: 0;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-toggleable {background-color: white;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-estimator:hover {background-color: #d4ebff;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-item {z-index: 1;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-parallel-item:only-child::after {width: 0;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-container {display: inline-block;position: relative;}#sk-957e1c37-7032-4874-9523-e5c51cebaa40 div.sk-text-repr-fallback {display: none;}</style><div id="sk-957e1c37-7032-4874-9523-e5c51cebaa40" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ddacffb-5ae1-4dd8-90a6-0fe2fccf983f" type="checkbox" ><label class="sk-toggleable__label" for="0ddacffb-5ae1-4dd8-90a6-0fe2fccf983f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bcefa73-7f74-49d5-9822-a9361946de3c" type="checkbox" ><label class="sk-toggleable__label" for="3bcefa73-7f74-49d5-9822-a9361946de3c">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5419fe3-dae9-4c99-8c23-a8ed72c9ffb2" type="checkbox" ><label class="sk-toggleable__label" for="d5419fe3-dae9-4c99-8c23-a8ed72c9ffb2">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 {color: black;background-color: white;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 pre{padding: 0;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-toggleable {background-color: white;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-item {z-index: 1;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-parallel-item:only-child::after {width: 0;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-container {display: inline-block;position: relative;}#sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ba669f51-4acc-4c62-9b9b-37c3ec206ca2" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="793e67e1-71f1-4ed6-b51d-199a3dfd65a0" type="checkbox" ><label class="sk-toggleable__label" for="793e67e1-71f1-4ed6-b51d-199a3dfd65a0">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2266a86-75f9-4e89-bfbb-3807dfc0245a" type="checkbox" ><label class="sk-toggleable__label" for="e2266a86-75f9-4e89-bfbb-3807dfc0245a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bf01e7b-843c-436a-a9f8-de869ccb3455" type="checkbox" ><label class="sk-toggleable__label" for="8bf01e7b-843c-436a-a9f8-de869ccb3455">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef21b224-e4e4-463f-acba-b9c2be963737" type="checkbox" ><label class="sk-toggleable__label" for="ef21b224-e4e4-463f-acba-b9c2be963737">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 {color: black;background-color: white;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 pre{padding: 0;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-toggleable {background-color: white;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-estimator:hover {background-color: #d4ebff;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-item {z-index: 1;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-parallel-item:only-child::after {width: 0;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-container {display: inline-block;position: relative;}#sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673 div.sk-text-repr-fallback {display: none;}</style><div id="sk-03a4d415-f3a8-433a-bf7a-e3abbfcf1673" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47e410db-9dcd-4d76-bf08-4a93cf72113e" type="checkbox" ><label class="sk-toggleable__label" for="47e410db-9dcd-4d76-bf08-4a93cf72113e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e07882ba-865d-4e23-ad95-82e9a263cb89" type="checkbox" ><label class="sk-toggleable__label" for="e07882ba-865d-4e23-ad95-82e9a263cb89">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04e66d70-d882-4e35-8482-68c8de812f19" type="checkbox" ><label class="sk-toggleable__label" for="04e66d70-d882-4e35-8482-68c8de812f19">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6edc8018-35ea-4686-8f80-00b71e421729 {color: black;background-color: white;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 pre{padding: 0;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-toggleable {background-color: white;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-item {z-index: 1;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-parallel-item:only-child::after {width: 0;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-container {display: inline-block;position: relative;}#sk-6edc8018-35ea-4686-8f80-00b71e421729 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6edc8018-35ea-4686-8f80-00b71e421729" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0002a289-402e-4fde-b31b-b9d4a568ee3d" type="checkbox" ><label class="sk-toggleable__label" for="0002a289-402e-4fde-b31b-b9d4a568ee3d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="067724ce-f88a-4f4e-a80e-9f36f1dbe4cd" type="checkbox" ><label class="sk-toggleable__label" for="067724ce-f88a-4f4e-a80e-9f36f1dbe4cd">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b9ddb6d-e7f8-4b98-b937-f6718b999caa" type="checkbox" ><label class="sk-toggleable__label" for="8b9ddb6d-e7f8-4b98-b937-f6718b999caa">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d2fbc98-0ffa-4883-a410-c9c820a8f416" type="checkbox" ><label class="sk-toggleable__label" for="9d2fbc98-0ffa-4883-a410-c9c820a8f416">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4916efa3-b58f-49eb-b380-97fe607fc088" type="checkbox" ><label class="sk-toggleable__label" for="4916efa3-b58f-49eb-b380-97fe607fc088">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96858211-7a48-4f75-b192-8d3f5a36a1e1" type="checkbox" ><label class="sk-toggleable__label" for="96858211-7a48-4f75-b192-8d3f5a36a1e1">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a03331b3-fd38-4a6e-938d-2a59453579d9" type="checkbox" ><label class="sk-toggleable__label" for="a03331b3-fd38-4a6e-938d-2a59453579d9">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3db08fd-1e38-4fde-92ab-5251e45bd263" type="checkbox" ><label class="sk-toggleable__label" for="f3db08fd-1e38-4fde-92ab-5251e45bd263">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4401620-6a61-48eb-9a2e-ad5743308104" type="checkbox" ><label class="sk-toggleable__label" for="e4401620-6a61-48eb-9a2e-ad5743308104">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 {color: black;background-color: white;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 pre{padding: 0;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-toggleable {background-color: white;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-item {z-index: 1;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-parallel-item:only-child::after {width: 0;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-container {display: inline-block;position: relative;}#sk-3bacbc96-86a6-4e24-926e-7ee20de087b3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3bacbc96-86a6-4e24-926e-7ee20de087b3" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9db32825-e11c-430f-bb38-3b71ada82cd4" type="checkbox" ><label class="sk-toggleable__label" for="9db32825-e11c-430f-bb38-3b71ada82cd4">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a04f375-b668-4bcf-bb27-05d91aef6956" type="checkbox" ><label class="sk-toggleable__label" for="5a04f375-b668-4bcf-bb27-05d91aef6956">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e63916f-a394-488b-9f1e-eaeed93955e4" type="checkbox" ><label class="sk-toggleable__label" for="0e63916f-a394-488b-9f1e-eaeed93955e4">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26c49c1a-2dae-4d19-a44f-3b5a3c05ebd2" type="checkbox" ><label class="sk-toggleable__label" for="26c49c1a-2dae-4d19-a44f-3b5a3c05ebd2">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a56178a-dad5-4527-b2a8-a18bf9872bf9" type="checkbox" ><label class="sk-toggleable__label" for="8a56178a-dad5-4527-b2a8-a18bf9872bf9">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b3071ac-f4b1-49d5-8a54-b8c4dad3277d" type="checkbox" ><label class="sk-toggleable__label" for="7b3071ac-f4b1-49d5-8a54-b8c4dad3277d">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dedeb24c-a8d0-4802-aec6-02ed40d742c6" type="checkbox" ><label class="sk-toggleable__label" for="dedeb24c-a8d0-4802-aec6-02ed40d742c6">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="060ddf86-cc43-4666-9d99-cfcdbbdac89a" type="checkbox" ><label class="sk-toggleable__label" for="060ddf86-cc43-4666-9d99-cfcdbbdac89a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bca0c8fb-6db5-44d9-818c-ae94b17c95bf" type="checkbox" ><label class="sk-toggleable__label" for="bca0c8fb-6db5-44d9-818c-ae94b17c95bf">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
