
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-77230e47-f745-4f04-97ba-886837404ad7 {color: black;background-color: white;}#sk-77230e47-f745-4f04-97ba-886837404ad7 pre{padding: 0;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-toggleable {background-color: white;}#sk-77230e47-f745-4f04-97ba-886837404ad7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-77230e47-f745-4f04-97ba-886837404ad7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-77230e47-f745-4f04-97ba-886837404ad7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-77230e47-f745-4f04-97ba-886837404ad7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-77230e47-f745-4f04-97ba-886837404ad7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77230e47-f745-4f04-97ba-886837404ad7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-item {z-index: 1;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-parallel-item:only-child::after {width: 0;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-77230e47-f745-4f04-97ba-886837404ad7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-77230e47-f745-4f04-97ba-886837404ad7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e955ae48-8ac3-4ae7-88f6-40840d152a2e" type="checkbox" ><label for="e955ae48-8ac3-4ae7-88f6-40840d152a2e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="560f91a3-8993-4ab4-976c-5e12b41a4738" type="checkbox" ><label for="560f91a3-8993-4ab4-976c-5e12b41a4738" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c9b8d0d-a517-448e-8e2b-cefe04537418" type="checkbox" ><label for="5c9b8d0d-a517-448e-8e2b-cefe04537418" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f112cf93-3856-4a25-8985-aa30ae211c15 {color: black;background-color: white;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 pre{padding: 0;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-toggleable {background-color: white;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-item {z-index: 1;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-parallel-item:only-child::after {width: 0;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f112cf93-3856-4a25-8985-aa30ae211c15 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f112cf93-3856-4a25-8985-aa30ae211c15" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f43091c5-07b6-4167-ae5e-ce795d9ca437" type="checkbox" ><label for="f43091c5-07b6-4167-ae5e-ce795d9ca437" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50ec0a06-231f-4188-852c-afd452b7c874" type="checkbox" ><label for="50ec0a06-231f-4188-852c-afd452b7c874" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="445b4095-cbac-4b38-a3f9-2884208049e6" type="checkbox" ><label for="445b4095-cbac-4b38-a3f9-2884208049e6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b763ea3-7445-4aea-833a-bcae7bf43861" type="checkbox" ><label for="6b763ea3-7445-4aea-833a-bcae7bf43861" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 {color: black;background-color: white;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 pre{padding: 0;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-toggleable {background-color: white;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-item {z-index: 1;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-parallel-item:only-child::after {width: 0;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-05fa4701-58aa-44c0-86e7-ef31b412c1d5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20be2c25-b0ab-457a-ac59-01c1566ad5ed" type="checkbox" ><label for="20be2c25-b0ab-457a-ac59-01c1566ad5ed" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ed70b68-26ee-4338-a023-cf46a950f7a1" type="checkbox" ><label for="4ed70b68-26ee-4338-a023-cf46a950f7a1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5dda3d19-bc3b-46ea-ac75-6f22e627fb70" type="checkbox" ><label for="5dda3d19-bc3b-46ea-ac75-6f22e627fb70" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 {color: black;background-color: white;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 pre{padding: 0;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-toggleable {background-color: white;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-estimator:hover {background-color: #d4ebff;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-item {z-index: 1;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-parallel-item:only-child::after {width: 0;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-625a60ce-94cb-4bb6-8734-b94d45e79299 div.sk-text-repr-fallback {display: none;}</style><div id="sk-625a60ce-94cb-4bb6-8734-b94d45e79299" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e48eb709-9c9d-44a6-b104-51382f91a512" type="checkbox" ><label for="e48eb709-9c9d-44a6-b104-51382f91a512" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="361b8385-55c6-4ed4-9cee-47ff21889ac7" type="checkbox" ><label for="361b8385-55c6-4ed4-9cee-47ff21889ac7" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c2afa4a-edb0-4a4f-9341-105164a6c1c0" type="checkbox" ><label for="5c2afa4a-edb0-4a4f-9341-105164a6c1c0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68facf8f-c7af-4a1d-ab5b-f3a0a944f42f" type="checkbox" ><label for="68facf8f-c7af-4a1d-ab5b-f3a0a944f42f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72375451-f552-4bf1-83a0-4aac54fc0445" type="checkbox" ><label for="72375451-f552-4bf1-83a0-4aac54fc0445" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce574eb7-8a93-4454-8826-e277b1df4813" type="checkbox" ><label for="ce574eb7-8a93-4454-8826-e277b1df4813" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e51fe518-9d1a-4227-bd9e-e3c3f229f280" type="checkbox" ><label for="e51fe518-9d1a-4227-bd9e-e3c3f229f280" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c07ddc9-9b2c-4e98-abea-bfde529c0168" type="checkbox" ><label for="5c07ddc9-9b2c-4e98-abea-bfde529c0168" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7f20ee1-e4a2-49e6-8a11-0d00622d50e6" type="checkbox" ><label for="e7f20ee1-e4a2-49e6-8a11-0d00622d50e6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7e21f540-1822-4a1b-b849-f4fca6955878 {color: black;background-color: white;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 pre{padding: 0;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-toggleable {background-color: white;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-item {z-index: 1;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-parallel-item:only-child::after {width: 0;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7e21f540-1822-4a1b-b849-f4fca6955878 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7e21f540-1822-4a1b-b849-f4fca6955878" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10f5f283-f1f8-4f5c-84e4-a6f230243ebe" type="checkbox" ><label for="10f5f283-f1f8-4f5c-84e4-a6f230243ebe" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="385f55a2-a6f1-46fc-820d-1231ec990533" type="checkbox" ><label for="385f55a2-a6f1-46fc-820d-1231ec990533" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b562781-4687-43e5-bee4-ba6d7e2b10d0" type="checkbox" ><label for="3b562781-4687-43e5-bee4-ba6d7e2b10d0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="540a6293-0942-4159-9ac0-a89758815f19" type="checkbox" ><label for="540a6293-0942-4159-9ac0-a89758815f19" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a4739c4-3b35-4625-a118-f4ed14d05300" type="checkbox" ><label for="5a4739c4-3b35-4625-a118-f4ed14d05300" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ab6b7a8-f47a-4131-9b70-c105be3c61e6" type="checkbox" ><label for="0ab6b7a8-f47a-4131-9b70-c105be3c61e6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbb58467-3cca-4ee3-bfbe-3b07c1663781" type="checkbox" ><label for="fbb58467-3cca-4ee3-bfbe-3b07c1663781" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1ddec73-fedb-46fe-801d-bb35c69b7fe8" type="checkbox" ><label for="e1ddec73-fedb-46fe-801d-bb35c69b7fe8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f46464b-7e71-4774-9f4c-c9493d8030e6" type="checkbox" ><label for="0f46464b-7e71-4774-9f4c-c9493d8030e6" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
