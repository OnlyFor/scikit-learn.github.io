
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 {color: black;background-color: white;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 pre{padding: 0;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-toggleable {background-color: white;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-item {z-index: 1;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-parallel-item:only-child::after {width: 0;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ec2f4f28-a2c6-4bdf-90d7-48746aafc501" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="021d528c-f4ba-454e-b9d1-0c3bb126c141" type="checkbox" ><label for="021d528c-f4ba-454e-b9d1-0c3bb126c141" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea30044b-c6c6-4457-a7b0-65276b7aa1ec" type="checkbox" ><label for="ea30044b-c6c6-4457-a7b0-65276b7aa1ec" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="662a6bb8-0599-4d90-bc8b-98fea9332fcf" type="checkbox" ><label for="662a6bb8-0599-4d90-bc8b-98fea9332fcf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1298b792-6051-46b0-885e-b400135c48b3 {color: black;background-color: white;}#sk-1298b792-6051-46b0-885e-b400135c48b3 pre{padding: 0;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-toggleable {background-color: white;}#sk-1298b792-6051-46b0-885e-b400135c48b3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1298b792-6051-46b0-885e-b400135c48b3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1298b792-6051-46b0-885e-b400135c48b3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1298b792-6051-46b0-885e-b400135c48b3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1298b792-6051-46b0-885e-b400135c48b3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1298b792-6051-46b0-885e-b400135c48b3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-item {z-index: 1;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-parallel-item:only-child::after {width: 0;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1298b792-6051-46b0-885e-b400135c48b3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1298b792-6051-46b0-885e-b400135c48b3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa2b6f0a-c972-4c1f-ab31-073da64f0fa1" type="checkbox" ><label for="fa2b6f0a-c972-4c1f-ab31-073da64f0fa1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47f86164-6088-4796-9bcb-b3091154cc81" type="checkbox" ><label for="47f86164-6088-4796-9bcb-b3091154cc81" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fcb50f9-919f-4077-8530-aa82c8c214d4" type="checkbox" ><label for="1fcb50f9-919f-4077-8530-aa82c8c214d4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="514a4b43-1b48-4dee-ab37-e92bb307a5cc" type="checkbox" ><label for="514a4b43-1b48-4dee-ab37-e92bb307a5cc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 {color: black;background-color: white;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 pre{padding: 0;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-toggleable {background-color: white;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-item {z-index: 1;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-parallel-item:only-child::after {width: 0;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ce1dccc0-063c-4ef7-ad61-fbd07ad63489" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2314f90a-9129-4558-9781-19e7abab6568" type="checkbox" ><label for="2314f90a-9129-4558-9781-19e7abab6568" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70cf6e9f-b586-48e2-9d7b-ad8ba03ec9c1" type="checkbox" ><label for="70cf6e9f-b586-48e2-9d7b-ad8ba03ec9c1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00c1da37-5769-4d07-9f2a-5487815be8ec" type="checkbox" ><label for="00c1da37-5769-4d07-9f2a-5487815be8ec" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c2782163-e17c-42e0-b998-cc20ef9185cf {color: black;background-color: white;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf pre{padding: 0;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-toggleable {background-color: white;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-estimator:hover {background-color: #d4ebff;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-item {z-index: 1;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-parallel-item:only-child::after {width: 0;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c2782163-e17c-42e0-b998-cc20ef9185cf div.sk-text-repr-fallback {display: none;}</style><div id="sk-c2782163-e17c-42e0-b998-cc20ef9185cf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30903006-2895-4832-8fa7-1398c57f6313" type="checkbox" ><label for="30903006-2895-4832-8fa7-1398c57f6313" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2577832f-d702-4452-96e8-3943038385ec" type="checkbox" ><label for="2577832f-d702-4452-96e8-3943038385ec" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="627a2c13-9cf5-4753-987b-a96fa8a79260" type="checkbox" ><label for="627a2c13-9cf5-4753-987b-a96fa8a79260" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89eafa4a-c7a2-4b6d-b1f8-d654a7711610" type="checkbox" ><label for="89eafa4a-c7a2-4b6d-b1f8-d654a7711610" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="023d6381-2f20-4d04-b77b-ae0596e287dc" type="checkbox" ><label for="023d6381-2f20-4d04-b77b-ae0596e287dc" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d717f7ee-20a4-4e66-b944-b18cffc626ff" type="checkbox" ><label for="d717f7ee-20a4-4e66-b944-b18cffc626ff" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b473cfab-e07a-4f21-8d6e-724f0053a26f" type="checkbox" ><label for="b473cfab-e07a-4f21-8d6e-724f0053a26f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98a102dd-278a-4b02-8a3d-e7b3999d1bc7" type="checkbox" ><label for="98a102dd-278a-4b02-8a3d-e7b3999d1bc7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d839aa2-a903-49c7-b3d1-76145f638fbf" type="checkbox" ><label for="7d839aa2-a903-49c7-b3d1-76145f638fbf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a {color: black;background-color: white;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a pre{padding: 0;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-toggleable {background-color: white;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-estimator:hover {background-color: #d4ebff;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-item {z-index: 1;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-parallel-item:only-child::after {width: 0;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-db2489c4-2cfd-44d6-a30e-082f2568a75a div.sk-text-repr-fallback {display: none;}</style><div id="sk-db2489c4-2cfd-44d6-a30e-082f2568a75a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4285e299-6757-4f31-8bd4-9ae0b9b6f72e" type="checkbox" ><label for="4285e299-6757-4f31-8bd4-9ae0b9b6f72e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f28d3571-c928-4120-bf2f-ed348dc5e34f" type="checkbox" ><label for="f28d3571-c928-4120-bf2f-ed348dc5e34f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7b46ea0-122c-4a07-95ea-76d37d20f544" type="checkbox" ><label for="c7b46ea0-122c-4a07-95ea-76d37d20f544" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="800c3e67-26ec-49b4-abdc-af1d27bd27ae" type="checkbox" ><label for="800c3e67-26ec-49b4-abdc-af1d27bd27ae" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64f2d958-34ef-4849-8b66-9fdf93fab3ad" type="checkbox" ><label for="64f2d958-34ef-4849-8b66-9fdf93fab3ad" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc007e14-aa12-47c3-822a-ddd079748a45" type="checkbox" ><label for="bc007e14-aa12-47c3-822a-ddd079748a45" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6e997d2-796f-4fb2-999c-e66db420dc0c" type="checkbox" ><label for="a6e997d2-796f-4fb2-999c-e66db420dc0c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1eb39583-be2b-4368-8e83-410efea78308" type="checkbox" ><label for="1eb39583-be2b-4368-8e83-410efea78308" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0fde1a8-d662-42f4-bdaa-189f590569fe" type="checkbox" ><label for="d0fde1a8-d662-42f4-bdaa-189f590569fe" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.082 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
