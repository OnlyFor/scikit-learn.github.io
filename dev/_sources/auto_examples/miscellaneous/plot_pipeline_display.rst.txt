
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 {color: black;background-color: white;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 pre{padding: 0;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-toggleable {background-color: white;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-item {z-index: 1;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-parallel-item:only-child::after {width: 0;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-container {display: inline-block;position: relative;}#sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2edc2000-be3d-4dea-9e38-8a73bd7c0b64" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1919a70c-b2df-48d1-b4fc-a10139352aed" type="checkbox" ><label class="sk-toggleable__label" for="1919a70c-b2df-48d1-b4fc-a10139352aed">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9036c838-742a-4a6d-ae88-41dfa20b149d" type="checkbox" ><label class="sk-toggleable__label" for="9036c838-742a-4a6d-ae88-41dfa20b149d">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5147742e-2bfb-4965-bcb5-b61dddaf65d4" type="checkbox" ><label class="sk-toggleable__label" for="5147742e-2bfb-4965-bcb5-b61dddaf65d4">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f8989ea9-4714-4707-b378-dc752bec3d4f {color: black;background-color: white;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f pre{padding: 0;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-toggleable {background-color: white;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-estimator:hover {background-color: #d4ebff;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-item {z-index: 1;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-parallel-item:only-child::after {width: 0;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-container {display: inline-block;position: relative;}#sk-f8989ea9-4714-4707-b378-dc752bec3d4f div.sk-text-repr-fallback {display: none;}</style><div id="sk-f8989ea9-4714-4707-b378-dc752bec3d4f" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffbf0fbe-1665-4686-bf7c-7fb141ed9446" type="checkbox" ><label class="sk-toggleable__label" for="ffbf0fbe-1665-4686-bf7c-7fb141ed9446">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f90fcc97-e2e0-4e2c-a1e4-25dad79b8a38" type="checkbox" ><label class="sk-toggleable__label" for="f90fcc97-e2e0-4e2c-a1e4-25dad79b8a38">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b3d5cce-5bdc-41c4-a860-6e6f5db363be" type="checkbox" ><label class="sk-toggleable__label" for="6b3d5cce-5bdc-41c4-a860-6e6f5db363be">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d40d52aa-ed70-46fe-bc68-5fd7b7adedd0" type="checkbox" ><label class="sk-toggleable__label" for="d40d52aa-ed70-46fe-bc68-5fd7b7adedd0">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-809bfc96-f0f4-4b40-82f4-67028b2480db {color: black;background-color: white;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db pre{padding: 0;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-toggleable {background-color: white;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-estimator:hover {background-color: #d4ebff;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-item {z-index: 1;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-parallel-item:only-child::after {width: 0;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-container {display: inline-block;position: relative;}#sk-809bfc96-f0f4-4b40-82f4-67028b2480db div.sk-text-repr-fallback {display: none;}</style><div id="sk-809bfc96-f0f4-4b40-82f4-67028b2480db" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="624aaed9-1209-4010-846b-a813c7c5a947" type="checkbox" ><label class="sk-toggleable__label" for="624aaed9-1209-4010-846b-a813c7c5a947">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e97e4ea5-a90d-4652-9586-793360e20bef" type="checkbox" ><label class="sk-toggleable__label" for="e97e4ea5-a90d-4652-9586-793360e20bef">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="882472bd-a7d4-4b02-a2ea-068c6d3efbd7" type="checkbox" ><label class="sk-toggleable__label" for="882472bd-a7d4-4b02-a2ea-068c6d3efbd7">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-01699f83-233b-4858-88a5-b01fb934674e {color: black;background-color: white;}#sk-01699f83-233b-4858-88a5-b01fb934674e pre{padding: 0;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-toggleable {background-color: white;}#sk-01699f83-233b-4858-88a5-b01fb934674e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-01699f83-233b-4858-88a5-b01fb934674e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-01699f83-233b-4858-88a5-b01fb934674e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-estimator:hover {background-color: #d4ebff;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-item {z-index: 1;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-parallel-item:only-child::after {width: 0;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-container {display: inline-block;position: relative;}#sk-01699f83-233b-4858-88a5-b01fb934674e div.sk-text-repr-fallback {display: none;}</style><div id="sk-01699f83-233b-4858-88a5-b01fb934674e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39754cce-071e-455d-9f2c-f66e8482a5a5" type="checkbox" ><label class="sk-toggleable__label" for="39754cce-071e-455d-9f2c-f66e8482a5a5">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8caf5b55-f014-49b9-a291-ae2741884c80" type="checkbox" ><label class="sk-toggleable__label" for="8caf5b55-f014-49b9-a291-ae2741884c80">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95593a6b-0366-4f0a-bfba-22fe2417f35c" type="checkbox" ><label class="sk-toggleable__label" for="95593a6b-0366-4f0a-bfba-22fe2417f35c">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="963fe98a-4757-4078-b635-46c216fde1c4" type="checkbox" ><label class="sk-toggleable__label" for="963fe98a-4757-4078-b635-46c216fde1c4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48b2e547-6cb9-4523-a35b-9c4219a3f60b" type="checkbox" ><label class="sk-toggleable__label" for="48b2e547-6cb9-4523-a35b-9c4219a3f60b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05f0ead1-0440-441b-98af-377c057deb59" type="checkbox" ><label class="sk-toggleable__label" for="05f0ead1-0440-441b-98af-377c057deb59">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64070eab-daf5-4eeb-8afa-1f5e8ddd50f7" type="checkbox" ><label class="sk-toggleable__label" for="64070eab-daf5-4eeb-8afa-1f5e8ddd50f7">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="423c0a25-576d-48fd-b98b-afebfe883804" type="checkbox" ><label class="sk-toggleable__label" for="423c0a25-576d-48fd-b98b-afebfe883804">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e84f39eb-cae8-46b4-9195-160e81888f69" type="checkbox" ><label class="sk-toggleable__label" for="e84f39eb-cae8-46b4-9195-160e81888f69">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d {color: black;background-color: white;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d pre{padding: 0;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-toggleable {background-color: white;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-estimator:hover {background-color: #d4ebff;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-item {z-index: 1;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-parallel-item:only-child::after {width: 0;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-container {display: inline-block;position: relative;}#sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d div.sk-text-repr-fallback {display: none;}</style><div id="sk-37cb1b1d-0f59-4d4d-af11-9ff5636bec3d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4aaf3738-b8eb-481d-8a56-240a20a63419" type="checkbox" ><label class="sk-toggleable__label" for="4aaf3738-b8eb-481d-8a56-240a20a63419">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aac16a7a-2f8f-4506-a2c2-f99fb91509c6" type="checkbox" ><label class="sk-toggleable__label" for="aac16a7a-2f8f-4506-a2c2-f99fb91509c6">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0ae1219-3f27-4b0c-bb01-55b14d183252" type="checkbox" ><label class="sk-toggleable__label" for="e0ae1219-3f27-4b0c-bb01-55b14d183252">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91fc03a6-fbbb-4975-8a48-83b331b36f8d" type="checkbox" ><label class="sk-toggleable__label" for="91fc03a6-fbbb-4975-8a48-83b331b36f8d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b0705eb-8ba1-4865-b3b3-977b374468ec" type="checkbox" ><label class="sk-toggleable__label" for="8b0705eb-8ba1-4865-b3b3-977b374468ec">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68224c9c-00bb-42c1-a082-86874911619b" type="checkbox" ><label class="sk-toggleable__label" for="68224c9c-00bb-42c1-a082-86874911619b">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06d15191-82c6-4555-a372-fc0a6cb8353a" type="checkbox" ><label class="sk-toggleable__label" for="06d15191-82c6-4555-a372-fc0a6cb8353a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e2b7bb1-7f10-4219-83f3-3952e78ee692" type="checkbox" ><label class="sk-toggleable__label" for="1e2b7bb1-7f10-4219-83f3-3952e78ee692">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8da87b13-71f7-4a75-89f8-d2ab0b16134f" type="checkbox" ><label class="sk-toggleable__label" for="8da87b13-71f7-4a75-89f8-d2ab0b16134f">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
