
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 {color: black;background-color: white;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 pre{padding: 0;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-toggleable {background-color: white;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-item {z-index: 1;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-parallel-item:only-child::after {width: 0;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b2718bc8-0982-4e09-a08b-f3d2ab9bddd0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4ec55cf-8dac-4595-8de3-759a512a1a5a" type="checkbox" ><label for="b4ec55cf-8dac-4595-8de3-759a512a1a5a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4b8623c-0728-4ed9-a636-bb65d4c338fe" type="checkbox" ><label for="f4b8623c-0728-4ed9-a636-bb65d4c338fe" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f61e5218-3346-468e-ac92-5cd7ed848b07" type="checkbox" ><label for="f61e5218-3346-468e-ac92-5cd7ed848b07" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a {color: black;background-color: white;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a pre{padding: 0;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-toggleable {background-color: white;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-estimator:hover {background-color: #d4ebff;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-item {z-index: 1;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-parallel-item:only-child::after {width: 0;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a div.sk-text-repr-fallback {display: none;}</style><div id="sk-be53e82c-0720-4e68-99e5-c8ae59fcf38a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df7cfe37-e688-429e-876f-d83cdf7a3f52" type="checkbox" ><label for="df7cfe37-e688-429e-876f-d83cdf7a3f52" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46440663-edf7-4866-80df-063ce3339b1f" type="checkbox" ><label for="46440663-edf7-4866-80df-063ce3339b1f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d943404-e036-41c9-988c-1fd463e22a08" type="checkbox" ><label for="5d943404-e036-41c9-988c-1fd463e22a08" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc21b7f7-c21d-414e-9c5f-4435987d8eff" type="checkbox" ><label for="dc21b7f7-c21d-414e-9c5f-4435987d8eff" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c7c15e76-975f-413a-989e-3e37cf20a68d {color: black;background-color: white;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d pre{padding: 0;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-toggleable {background-color: white;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-estimator:hover {background-color: #d4ebff;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-item {z-index: 1;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-parallel-item:only-child::after {width: 0;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c7c15e76-975f-413a-989e-3e37cf20a68d div.sk-text-repr-fallback {display: none;}</style><div id="sk-c7c15e76-975f-413a-989e-3e37cf20a68d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85501d76-e302-4964-aeef-2c7165ae8044" type="checkbox" ><label for="85501d76-e302-4964-aeef-2c7165ae8044" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51cfbc0d-349b-4c09-8333-87198ae0782d" type="checkbox" ><label for="51cfbc0d-349b-4c09-8333-87198ae0782d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0490db9-e23b-411f-8bde-e3c3c3f5bf6f" type="checkbox" ><label for="c0490db9-e23b-411f-8bde-e3c3c3f5bf6f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad {color: black;background-color: white;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad pre{padding: 0;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-toggleable {background-color: white;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-estimator:hover {background-color: #d4ebff;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-item {z-index: 1;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-parallel-item:only-child::after {width: 0;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad div.sk-text-repr-fallback {display: none;}</style><div id="sk-d0fe13a0-b91a-4c21-acdc-970d589a1cad" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acc04eed-8625-41ab-807d-3b67d732377f" type="checkbox" ><label for="acc04eed-8625-41ab-807d-3b67d732377f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b8f3144-605e-41d6-860d-54599ac4ce21" type="checkbox" ><label for="4b8f3144-605e-41d6-860d-54599ac4ce21" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1fd9679-8a8b-46bb-af4a-a696314b0553" type="checkbox" ><label for="c1fd9679-8a8b-46bb-af4a-a696314b0553" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7107f8fd-585c-4e17-9400-7b6991e6f022" type="checkbox" ><label for="7107f8fd-585c-4e17-9400-7b6991e6f022" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7ee6ca8-78e3-44d5-8250-4e6b9dfbc12e" type="checkbox" ><label for="c7ee6ca8-78e3-44d5-8250-4e6b9dfbc12e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="969f2732-bc93-4c3b-bd9d-a188df6abab6" type="checkbox" ><label for="969f2732-bc93-4c3b-bd9d-a188df6abab6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e40eaa8e-758e-43cf-9c0c-548ba42a811b" type="checkbox" ><label for="e40eaa8e-758e-43cf-9c0c-548ba42a811b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b09b728-5e0f-4dbd-8aeb-28dbd3431cf0" type="checkbox" ><label for="1b09b728-5e0f-4dbd-8aeb-28dbd3431cf0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2bfb6db-8fd9-45b4-bf1e-08d03c48967c" type="checkbox" ><label for="b2bfb6db-8fd9-45b4-bf1e-08d03c48967c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad {color: black;background-color: white;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad pre{padding: 0;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-toggleable {background-color: white;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-estimator:hover {background-color: #d4ebff;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-item {z-index: 1;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-parallel-item:only-child::after {width: 0;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad div.sk-text-repr-fallback {display: none;}</style><div id="sk-e86ee3cf-ca2f-4cc9-a10e-ed58cf85fcad" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8913c33d-b7a3-48a7-8117-ff820577bf12" type="checkbox" ><label for="8913c33d-b7a3-48a7-8117-ff820577bf12" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30bc0a91-7c66-48ff-bfea-c0408d1197fc" type="checkbox" ><label for="30bc0a91-7c66-48ff-bfea-c0408d1197fc" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02f3917e-ec09-4df2-b381-523b76172709" type="checkbox" ><label for="02f3917e-ec09-4df2-b381-523b76172709" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e33c2512-ca21-4dbc-aa7d-e600aec87585" type="checkbox" ><label for="e33c2512-ca21-4dbc-aa7d-e600aec87585" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d77f7fb-a765-4b7c-b424-b8e88fc2acd9" type="checkbox" ><label for="0d77f7fb-a765-4b7c-b424-b8e88fc2acd9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f6fbca8-825f-445e-8a8c-e5a8c4967819" type="checkbox" ><label for="0f6fbca8-825f-445e-8a8c-e5a8c4967819" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32a52a40-a65f-42a5-aab5-c317f20bb625" type="checkbox" ><label for="32a52a40-a65f-42a5-aab5-c317f20bb625" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b370567a-a9cc-4157-b13b-264b394cd95e" type="checkbox" ><label for="b370567a-a9cc-4157-b13b-264b394cd95e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="681e7262-eb27-4218-bbd0-8e2a33c3dae7" type="checkbox" ><label for="681e7262-eb27-4218-bbd0-8e2a33c3dae7" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
