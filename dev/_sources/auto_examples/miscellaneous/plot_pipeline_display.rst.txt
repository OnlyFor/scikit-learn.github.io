
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd {color: black;background-color: white;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd pre{padding: 0;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-toggleable {background-color: white;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-estimator:hover {background-color: #d4ebff;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-item {z-index: 1;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-parallel-item:only-child::after {width: 0;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0b0a8055-4c01-4826-bad0-75d4194b27bd div.sk-text-repr-fallback {display: none;}</style><div id="sk-0b0a8055-4c01-4826-bad0-75d4194b27bd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c3c5579-a6aa-4319-a9d0-0a239c5bf2ec" type="checkbox" ><label for="7c3c5579-a6aa-4319-a9d0-0a239c5bf2ec" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b17643f-2be0-49ac-ae26-822bacf0198e" type="checkbox" ><label for="3b17643f-2be0-49ac-ae26-822bacf0198e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1cc5041-7041-4930-b842-684e9554f5b2" type="checkbox" ><label for="b1cc5041-7041-4930-b842-684e9554f5b2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e {color: black;background-color: white;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e pre{padding: 0;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-toggleable {background-color: white;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-estimator:hover {background-color: #d4ebff;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-item {z-index: 1;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-parallel-item:only-child::after {width: 0;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e div.sk-text-repr-fallback {display: none;}</style><div id="sk-d6a523ba-fe9d-4806-a6d7-6b5ece5f026e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d18275a-44a7-4cb3-845b-30c317650491" type="checkbox" ><label for="3d18275a-44a7-4cb3-845b-30c317650491" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97144e50-f3ac-4b25-b1ec-5792229d29b4" type="checkbox" ><label for="97144e50-f3ac-4b25-b1ec-5792229d29b4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f498ad4-2e96-4a7a-886c-0de566e0cec5" type="checkbox" ><label for="8f498ad4-2e96-4a7a-886c-0de566e0cec5" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="113e28b7-0ec2-4385-b3e3-8e32585dcd2e" type="checkbox" ><label for="113e28b7-0ec2-4385-b3e3-8e32585dcd2e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-156c6faf-f8fd-420a-aab0-c472ab871dea {color: black;background-color: white;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea pre{padding: 0;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-toggleable {background-color: white;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-estimator:hover {background-color: #d4ebff;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-item {z-index: 1;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-parallel-item:only-child::after {width: 0;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-156c6faf-f8fd-420a-aab0-c472ab871dea div.sk-text-repr-fallback {display: none;}</style><div id="sk-156c6faf-f8fd-420a-aab0-c472ab871dea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="854f6242-7f58-4055-9a35-8507660a6928" type="checkbox" ><label for="854f6242-7f58-4055-9a35-8507660a6928" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d9d3325-827c-420f-9b3e-61bda85b2a8b" type="checkbox" ><label for="6d9d3325-827c-420f-9b3e-61bda85b2a8b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e224c842-ab84-4479-a633-c79eeab75535" type="checkbox" ><label for="e224c842-ab84-4479-a633-c79eeab75535" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 {color: black;background-color: white;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 pre{padding: 0;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-toggleable {background-color: white;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-estimator:hover {background-color: #d4ebff;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-item {z-index: 1;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-parallel-item:only-child::after {width: 0;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884 div.sk-text-repr-fallback {display: none;}</style><div id="sk-47ab1ecf-ae30-4e23-a4b6-93cfa13dc884" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c84970fd-8308-4eca-9f33-9365a2e38f21" type="checkbox" ><label for="c84970fd-8308-4eca-9f33-9365a2e38f21" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f0223ca-744e-47ba-957b-e51988791520" type="checkbox" ><label for="0f0223ca-744e-47ba-957b-e51988791520" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="edbaa35c-0290-4377-8143-afe4c4b8ef35" type="checkbox" ><label for="edbaa35c-0290-4377-8143-afe4c4b8ef35" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86f5a76d-5ce8-414c-92f5-60da9b8c2f64" type="checkbox" ><label for="86f5a76d-5ce8-414c-92f5-60da9b8c2f64" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbe34a25-972d-437f-8789-afb63c420dce" type="checkbox" ><label for="dbe34a25-972d-437f-8789-afb63c420dce" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b8169e3-6c18-4bc2-a16a-2b34a066d695" type="checkbox" ><label for="8b8169e3-6c18-4bc2-a16a-2b34a066d695" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99865aa6-7cd8-46d8-a286-c3177b620454" type="checkbox" ><label for="99865aa6-7cd8-46d8-a286-c3177b620454" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="620055cd-0f96-4c87-aa44-c8cfaeb48dd9" type="checkbox" ><label for="620055cd-0f96-4c87-aa44-c8cfaeb48dd9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="786571c6-784b-4b4c-a0d9-6ff5d3ba3458" type="checkbox" ><label for="786571c6-784b-4b4c-a0d9-6ff5d3ba3458" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 {color: black;background-color: white;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 pre{padding: 0;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-toggleable {background-color: white;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-item {z-index: 1;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-parallel-item:only-child::after {width: 0;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2ba4b8e7-5a78-4427-aa9c-d8d6f7ae2780" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c0d89b0-21cc-45d4-afe8-d2b703e68b61" type="checkbox" ><label for="9c0d89b0-21cc-45d4-afe8-d2b703e68b61" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c94c662-d1a2-4f97-b806-aeb0f289e8da" type="checkbox" ><label for="0c94c662-d1a2-4f97-b806-aeb0f289e8da" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abac73b8-216d-49aa-96a1-1a9cb477e3dd" type="checkbox" ><label for="abac73b8-216d-49aa-96a1-1a9cb477e3dd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0b9f466-b66a-409b-b404-69baef0df10d" type="checkbox" ><label for="e0b9f466-b66a-409b-b404-69baef0df10d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65ee651e-4192-49a4-83bb-d4819eaaf7e6" type="checkbox" ><label for="65ee651e-4192-49a4-83bb-d4819eaaf7e6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15ce20c4-eb37-4a3b-840e-ae14d440fdf5" type="checkbox" ><label for="15ce20c4-eb37-4a3b-840e-ae14d440fdf5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68b07d89-4ddc-4ca0-ace1-28ebb08cd964" type="checkbox" ><label for="68b07d89-4ddc-4ca0-ace1-28ebb08cd964" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d17b992-776b-42ba-99f1-a034cf8c8015" type="checkbox" ><label for="5d17b992-776b-42ba-99f1-a034cf8c8015" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b14c5877-9f5b-433b-825a-2f499d142b70" type="checkbox" ><label for="b14c5877-9f5b-433b-825a-2f499d142b70" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
