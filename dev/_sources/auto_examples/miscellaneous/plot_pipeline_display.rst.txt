
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 {color: black;background-color: white;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 pre{padding: 0;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-toggleable {background-color: white;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-item {z-index: 1;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-parallel-item:only-child::after {width: 0;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a311e656-4f4e-4c0c-89c4-215a17445ca4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a311e656-4f4e-4c0c-89c4-215a17445ca4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b58e7a85-8575-4c56-be50-c88f52da0b43" type="checkbox" ><label for="b58e7a85-8575-4c56-be50-c88f52da0b43" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77e02d72-9233-44f4-a8ae-00b05c0b15a2" type="checkbox" ><label for="77e02d72-9233-44f4-a8ae-00b05c0b15a2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c070fab7-2675-4507-9b8e-03461f77a4d3" type="checkbox" ><label for="c070fab7-2675-4507-9b8e-03461f77a4d3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a {color: black;background-color: white;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a pre{padding: 0;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-toggleable {background-color: white;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-estimator:hover {background-color: #d4ebff;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-item {z-index: 1;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-parallel-item:only-child::after {width: 0;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-889cb164-422b-4ef5-890c-93e4b6c2a72a div.sk-text-repr-fallback {display: none;}</style><div id="sk-889cb164-422b-4ef5-890c-93e4b6c2a72a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2df702dc-8bef-4e3d-998e-71d9b9ddc376" type="checkbox" ><label for="2df702dc-8bef-4e3d-998e-71d9b9ddc376" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="415b63ef-e32d-4537-88f6-7134bd119b6c" type="checkbox" ><label for="415b63ef-e32d-4537-88f6-7134bd119b6c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22e9177e-142f-44ce-8594-731afb3c34df" type="checkbox" ><label for="22e9177e-142f-44ce-8594-731afb3c34df" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d079f512-dda9-4a1b-aebc-2becf28d011c" type="checkbox" ><label for="d079f512-dda9-4a1b-aebc-2becf28d011c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 {color: black;background-color: white;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 pre{padding: 0;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-toggleable {background-color: white;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-item {z-index: 1;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-parallel-item:only-child::after {width: 0;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6f5b10be-2d45-43e7-976b-d9d0ed866f28" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1284ddc6-0423-4f3a-91b2-a68d92587aa6" type="checkbox" ><label for="1284ddc6-0423-4f3a-91b2-a68d92587aa6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2cd73d8-558c-44cd-bcdd-83c5beafec0f" type="checkbox" ><label for="e2cd73d8-558c-44cd-bcdd-83c5beafec0f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3290bc0a-fbf7-41f7-9abb-615ebf5f54e5" type="checkbox" ><label for="3290bc0a-fbf7-41f7-9abb-615ebf5f54e5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 {color: black;background-color: white;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 pre{padding: 0;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-toggleable {background-color: white;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-item {z-index: 1;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-parallel-item:only-child::after {width: 0;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9cfc3367-4979-4c67-a1ad-4400093dad57 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9cfc3367-4979-4c67-a1ad-4400093dad57" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73902266-ef51-4da4-be28-bc7dcaece055" type="checkbox" ><label for="73902266-ef51-4da4-be28-bc7dcaece055" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c386d8fb-ce13-4809-8fd8-7992a9c1779e" type="checkbox" ><label for="c386d8fb-ce13-4809-8fd8-7992a9c1779e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a9620ad-c7fc-4999-8d08-11032208da9f" type="checkbox" ><label for="5a9620ad-c7fc-4999-8d08-11032208da9f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c0892da-3586-40f6-b1b0-c816a668575f" type="checkbox" ><label for="7c0892da-3586-40f6-b1b0-c816a668575f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="418595b1-9d9d-4019-8f7e-c6fc89760b49" type="checkbox" ><label for="418595b1-9d9d-4019-8f7e-c6fc89760b49" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50047097-53f9-4b3b-82cb-074a5b80a8f1" type="checkbox" ><label for="50047097-53f9-4b3b-82cb-074a5b80a8f1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7954277b-cab9-419d-b9f1-05391a57b92d" type="checkbox" ><label for="7954277b-cab9-419d-b9f1-05391a57b92d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b14e1a4e-2381-4204-8e0b-c113d3ae6e67" type="checkbox" ><label for="b14e1a4e-2381-4204-8e0b-c113d3ae6e67" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6ef86e4-13b9-4b69-a824-771130405e2b" type="checkbox" ><label for="b6ef86e4-13b9-4b69-a824-771130405e2b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 {color: black;background-color: white;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 pre{padding: 0;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-toggleable {background-color: white;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-item {z-index: 1;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-parallel-item:only-child::after {width: 0;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-087130fc-20a5-4406-840a-3b7c33aab6d9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-087130fc-20a5-4406-840a-3b7c33aab6d9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ce7f7ca-fcbe-4163-966d-dfbcf3c6178b" type="checkbox" ><label for="9ce7f7ca-fcbe-4163-966d-dfbcf3c6178b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fabd2ee-7e48-4aa9-b357-3e72b65a8cfd" type="checkbox" ><label for="5fabd2ee-7e48-4aa9-b357-3e72b65a8cfd" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5f8fba9-644a-449f-9aa8-33df9ca90f8c" type="checkbox" ><label for="a5f8fba9-644a-449f-9aa8-33df9ca90f8c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f0ab546-40d2-4c92-9611-ca39ad11b9d3" type="checkbox" ><label for="1f0ab546-40d2-4c92-9611-ca39ad11b9d3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="292c021f-67b3-47ea-8d83-dac8a2540cd3" type="checkbox" ><label for="292c021f-67b3-47ea-8d83-dac8a2540cd3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f9ae199-c44a-49c4-8b6f-a71f1af79315" type="checkbox" ><label for="9f9ae199-c44a-49c4-8b6f-a71f1af79315" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="997c1bdb-08ef-4184-b13e-2e206f66607f" type="checkbox" ><label for="997c1bdb-08ef-4184-b13e-2e206f66607f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eae90a89-a412-40fd-8166-8654e13e838b" type="checkbox" ><label for="eae90a89-a412-40fd-8166-8654e13e838b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2ca66b2-1152-4b13-b946-8b9034ce41b4" type="checkbox" ><label for="b2ca66b2-1152-4b13-b946-8b9034ce41b4" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.082 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
