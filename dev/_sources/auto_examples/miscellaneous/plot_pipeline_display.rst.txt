
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f616c4ee-078e-473b-9e90-1b010c4822ae {color: black;background-color: white;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae pre{padding: 0;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-toggleable {background-color: white;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-estimator:hover {background-color: #d4ebff;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-item {z-index: 1;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-parallel-item:only-child::after {width: 0;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f616c4ee-078e-473b-9e90-1b010c4822ae div.sk-text-repr-fallback {display: none;}</style><div id="sk-f616c4ee-078e-473b-9e90-1b010c4822ae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d48a06c5-bd45-4a72-ba4e-026c1f4fafd6" type="checkbox" ><label for="d48a06c5-bd45-4a72-ba4e-026c1f4fafd6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="369d52e3-fa3a-442f-a320-6ae67922130e" type="checkbox" ><label for="369d52e3-fa3a-442f-a320-6ae67922130e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1514f68-7045-491a-b974-b217b3219584" type="checkbox" ><label for="a1514f68-7045-491a-b974-b217b3219584" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 {color: black;background-color: white;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 pre{padding: 0;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-toggleable {background-color: white;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-item {z-index: 1;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-parallel-item:only-child::after {width: 0;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-25a86405-9465-49df-a9e0-31ec91ee87a7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-25a86405-9465-49df-a9e0-31ec91ee87a7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9632c7ca-13e3-432f-a93f-36b7e1e4aca1" type="checkbox" ><label for="9632c7ca-13e3-432f-a93f-36b7e1e4aca1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f99d4ee4-6f4b-4a3c-91fb-3f3272b27235" type="checkbox" ><label for="f99d4ee4-6f4b-4a3c-91fb-3f3272b27235" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c493ede-4fad-4001-8a06-8003ad068a68" type="checkbox" ><label for="6c493ede-4fad-4001-8a06-8003ad068a68" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1800438-fd9e-49a1-81f6-c3e9efd511fa" type="checkbox" ><label for="d1800438-fd9e-49a1-81f6-c3e9efd511fa" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 {color: black;background-color: white;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 pre{padding: 0;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-toggleable {background-color: white;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-estimator:hover {background-color: #d4ebff;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-item {z-index: 1;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-parallel-item:only-child::after {width: 0;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-58ad217a-1fd4-4778-b897-f95fe6ead174 div.sk-text-repr-fallback {display: none;}</style><div id="sk-58ad217a-1fd4-4778-b897-f95fe6ead174" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6201f402-030a-4056-825a-def877e4b095" type="checkbox" ><label for="6201f402-030a-4056-825a-def877e4b095" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c79a9d13-75cd-4747-9a39-4bf6ea860bb0" type="checkbox" ><label for="c79a9d13-75cd-4747-9a39-4bf6ea860bb0" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48c086c0-4d29-4f6d-ba73-0b95c7ef02b6" type="checkbox" ><label for="48c086c0-4d29-4f6d-ba73-0b95c7ef02b6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d6635759-5e65-4825-ac09-24af3398b29c {color: black;background-color: white;}#sk-d6635759-5e65-4825-ac09-24af3398b29c pre{padding: 0;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-toggleable {background-color: white;}#sk-d6635759-5e65-4825-ac09-24af3398b29c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d6635759-5e65-4825-ac09-24af3398b29c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d6635759-5e65-4825-ac09-24af3398b29c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d6635759-5e65-4825-ac09-24af3398b29c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d6635759-5e65-4825-ac09-24af3398b29c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6635759-5e65-4825-ac09-24af3398b29c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-estimator:hover {background-color: #d4ebff;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-item {z-index: 1;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-parallel-item:only-child::after {width: 0;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d6635759-5e65-4825-ac09-24af3398b29c div.sk-text-repr-fallback {display: none;}</style><div id="sk-d6635759-5e65-4825-ac09-24af3398b29c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed5a06ef-8a2b-4afa-802d-53361e1e0eed" type="checkbox" ><label for="ed5a06ef-8a2b-4afa-802d-53361e1e0eed" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a89f2e19-2ea9-4970-a8f5-aa226759077c" type="checkbox" ><label for="a89f2e19-2ea9-4970-a8f5-aa226759077c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2edb1a20-34c6-405b-972b-6a826c889462" type="checkbox" ><label for="2edb1a20-34c6-405b-972b-6a826c889462" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e45798c-bb03-4ead-ba1f-843541aafeeb" type="checkbox" ><label for="7e45798c-bb03-4ead-ba1f-843541aafeeb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9dad09cb-439c-4395-856e-7ba8f490a084" type="checkbox" ><label for="9dad09cb-439c-4395-856e-7ba8f490a084" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3646041-221f-4392-823c-eda94e5442d9" type="checkbox" ><label for="d3646041-221f-4392-823c-eda94e5442d9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71f32bec-6fc6-4d2e-894a-da067d9da937" type="checkbox" ><label for="71f32bec-6fc6-4d2e-894a-da067d9da937" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec36a648-0b8f-4fb5-a221-38eaaa5a1476" type="checkbox" ><label for="ec36a648-0b8f-4fb5-a221-38eaaa5a1476" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="564a724e-4121-441f-a3da-9a834c3b669e" type="checkbox" ><label for="564a724e-4121-441f-a3da-9a834c3b669e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b {color: black;background-color: white;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b pre{padding: 0;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-toggleable {background-color: white;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-estimator:hover {background-color: #d4ebff;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-item {z-index: 1;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-parallel-item:only-child::after {width: 0;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b div.sk-text-repr-fallback {display: none;}</style><div id="sk-bb7f4659-1a7f-477c-ab3a-68c831e78c5b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c96c5bc-97d0-460a-b4c5-0bd1c44292db" type="checkbox" ><label for="8c96c5bc-97d0-460a-b4c5-0bd1c44292db" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea8b3069-cb0b-460c-ad49-4b5916f54c5e" type="checkbox" ><label for="ea8b3069-cb0b-460c-ad49-4b5916f54c5e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4582575-66d0-48d5-8f7f-4571305cb289" type="checkbox" ><label for="b4582575-66d0-48d5-8f7f-4571305cb289" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af5b3579-a3e2-498e-92c3-90a3f521fce6" type="checkbox" ><label for="af5b3579-a3e2-498e-92c3-90a3f521fce6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21aea387-3da7-4da2-a095-f54facad0cb4" type="checkbox" ><label for="21aea387-3da7-4da2-a095-f54facad0cb4" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07af663c-b00b-4513-bff7-1bc2f71adbbd" type="checkbox" ><label for="07af663c-b00b-4513-bff7-1bc2f71adbbd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d931af5d-b055-43e1-a135-0d882c64536a" type="checkbox" ><label for="d931af5d-b055-43e1-a135-0d882c64536a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d72a5a32-ee14-41d0-8da2-1c38f67622f6" type="checkbox" ><label for="d72a5a32-ee14-41d0-8da2-1c38f67622f6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc437ac9-56aa-432d-ab06-9b9915d6eb42" type="checkbox" ><label for="bc437ac9-56aa-432d-ab06-9b9915d6eb42" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
