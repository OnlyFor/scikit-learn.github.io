
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 {color: black;background-color: white;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 pre{padding: 0;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-toggleable {background-color: white;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-item {z-index: 1;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-parallel-item:only-child::after {width: 0;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-531a4070-dcf7-4bdf-9dab-5ddefc8754e8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96ef5e86-e2f2-4367-ac2b-b7b26751a4b0" type="checkbox" ><label for="96ef5e86-e2f2-4367-ac2b-b7b26751a4b0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb39d0a5-6ebb-485d-801a-f5e11b958b0e" type="checkbox" ><label for="eb39d0a5-6ebb-485d-801a-f5e11b958b0e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="983050ce-d720-4304-8628-dd5722243006" type="checkbox" ><label for="983050ce-d720-4304-8628-dd5722243006" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 {color: black;background-color: white;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 pre{padding: 0;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-toggleable {background-color: white;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-item {z-index: 1;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-parallel-item:only-child::after {width: 0;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-31bb529c-336b-4b04-bb18-4d5f15590ee8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-31bb529c-336b-4b04-bb18-4d5f15590ee8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d725d021-4366-4bc6-8592-1ca778c908a8" type="checkbox" ><label for="d725d021-4366-4bc6-8592-1ca778c908a8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f9d9ab9-3f1d-416c-ac5b-f90ab3c1ac67" type="checkbox" ><label for="6f9d9ab9-3f1d-416c-ac5b-f90ab3c1ac67" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="930c2278-b721-4b1d-891c-2d04a73036f9" type="checkbox" ><label for="930c2278-b721-4b1d-891c-2d04a73036f9" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50a1b363-12aa-437a-9076-eb5b909a98ad" type="checkbox" ><label for="50a1b363-12aa-437a-9076-eb5b909a98ad" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc {color: black;background-color: white;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc pre{padding: 0;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-toggleable {background-color: white;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-estimator:hover {background-color: #d4ebff;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-item {z-index: 1;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-parallel-item:only-child::after {width: 0;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ea994022-9dd3-454b-843d-f9b712e5b4cc div.sk-text-repr-fallback {display: none;}</style><div id="sk-ea994022-9dd3-454b-843d-f9b712e5b4cc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2ce6cea-b984-453e-97bc-b83998aad1fb" type="checkbox" ><label for="e2ce6cea-b984-453e-97bc-b83998aad1fb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1d8b1e6-a599-4158-9b6b-58e94ff0d138" type="checkbox" ><label for="a1d8b1e6-a599-4158-9b6b-58e94ff0d138" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d4361f8-d303-4800-8b08-b8a1eff43edc" type="checkbox" ><label for="0d4361f8-d303-4800-8b08-b8a1eff43edc" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 {color: black;background-color: white;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 pre{padding: 0;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-toggleable {background-color: white;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-item {z-index: 1;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-parallel-item:only-child::after {width: 0;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-328a7049-e113-4da2-82c2-43761f6a8fb1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-328a7049-e113-4da2-82c2-43761f6a8fb1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09445b46-0e81-487c-864f-27cbbc64364e" type="checkbox" ><label for="09445b46-0e81-487c-864f-27cbbc64364e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c1f87c5-a079-46ec-82bc-5f7114e9b15f" type="checkbox" ><label for="0c1f87c5-a079-46ec-82bc-5f7114e9b15f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25f9cf23-715c-4454-ac66-8130e3e70f29" type="checkbox" ><label for="25f9cf23-715c-4454-ac66-8130e3e70f29" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15a7e462-c341-4291-a60c-f3d3c3c7a8d3" type="checkbox" ><label for="15a7e462-c341-4291-a60c-f3d3c3c7a8d3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1797353d-f113-411b-9676-b8908204bfd7" type="checkbox" ><label for="1797353d-f113-411b-9676-b8908204bfd7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97292492-6fe7-4db8-b176-29b691c62bb5" type="checkbox" ><label for="97292492-6fe7-4db8-b176-29b691c62bb5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07c21933-62a2-4235-9d66-177d8bde69ae" type="checkbox" ><label for="07c21933-62a2-4235-9d66-177d8bde69ae" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acb21d4a-9e23-42ff-b349-3d8c085a98f0" type="checkbox" ><label for="acb21d4a-9e23-42ff-b349-3d8c085a98f0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8399261b-6a23-4faa-bcd0-3e93c1bf253d" type="checkbox" ><label for="8399261b-6a23-4faa-bcd0-3e93c1bf253d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 {color: black;background-color: white;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 pre{padding: 0;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-toggleable {background-color: white;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-item {z-index: 1;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-parallel-item:only-child::after {width: 0;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-959ee0e7-6b22-4d7e-933c-82beed89b8c2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e787a6f-c19b-4e50-bdb0-b05f1db93c0a" type="checkbox" ><label for="2e787a6f-c19b-4e50-bdb0-b05f1db93c0a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5712e35-d223-4142-9599-18c238c3c3a2" type="checkbox" ><label for="e5712e35-d223-4142-9599-18c238c3c3a2" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a3811f0-80a3-441c-9b1b-eb3552137d7c" type="checkbox" ><label for="3a3811f0-80a3-441c-9b1b-eb3552137d7c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c67fae5-a744-4d45-951b-ce4ffa36b1eb" type="checkbox" ><label for="3c67fae5-a744-4d45-951b-ce4ffa36b1eb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f0dce5d-ce55-478d-a8c6-c24026f32072" type="checkbox" ><label for="9f0dce5d-ce55-478d-a8c6-c24026f32072" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97611c5b-9084-4c81-9592-e791cd1a4c33" type="checkbox" ><label for="97611c5b-9084-4c81-9592-e791cd1a4c33" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69f1a8c3-b45c-4fc7-a2a5-fc488a9deecc" type="checkbox" ><label for="69f1a8c3-b45c-4fc7-a2a5-fc488a9deecc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47db766e-f77d-4c80-8ff2-af2b4944c087" type="checkbox" ><label for="47db766e-f77d-4c80-8ff2-af2b4944c087" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a5af630-d566-44e5-b3cd-1897747b50b9" type="checkbox" ><label for="2a5af630-d566-44e5-b3cd-1897747b50b9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
