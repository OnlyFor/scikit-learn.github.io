
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b2cb5abc-378f-44aa-861b-92c414657655 {color: black;background-color: white;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 pre{padding: 0;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-toggleable {background-color: white;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-item {z-index: 1;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-parallel-item:only-child::after {width: 0;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b2cb5abc-378f-44aa-861b-92c414657655 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b2cb5abc-378f-44aa-861b-92c414657655" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45e2e1d3-6f63-4c67-9d92-466c0c8e5836" type="checkbox" ><label for="45e2e1d3-6f63-4c67-9d92-466c0c8e5836" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed55a818-a71b-46ee-bbc1-df643731a3a4" type="checkbox" ><label for="ed55a818-a71b-46ee-bbc1-df643731a3a4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61239de4-930d-47e4-a712-6a4daada88f4" type="checkbox" ><label for="61239de4-930d-47e4-a712-6a4daada88f4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 {color: black;background-color: white;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 pre{padding: 0;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-toggleable {background-color: white;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-estimator:hover {background-color: #d4ebff;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-item {z-index: 1;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-parallel-item:only-child::after {width: 0;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86 div.sk-text-repr-fallback {display: none;}</style><div id="sk-156ca33a-c89e-4c17-8d54-f9d1ffeb5e86" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c62d59ae-3138-46de-9359-0f614cb6a931" type="checkbox" ><label for="c62d59ae-3138-46de-9359-0f614cb6a931" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a1ded17-f196-4651-a00f-da60bd0a88e1" type="checkbox" ><label for="4a1ded17-f196-4651-a00f-da60bd0a88e1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38d14cbf-cabe-4286-9857-5a9c742a6d0d" type="checkbox" ><label for="38d14cbf-cabe-4286-9857-5a9c742a6d0d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef43ea1c-3bbe-4686-9702-d4cbd144cfc0" type="checkbox" ><label for="ef43ea1c-3bbe-4686-9702-d4cbd144cfc0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 {color: black;background-color: white;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 pre{padding: 0;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-toggleable {background-color: white;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-item {z-index: 1;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-parallel-item:only-child::after {width: 0;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f5337d0f-7204-41e4-b91e-6f7e8034ec37" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f58707c-51af-4d23-b6dd-25ade241f200" type="checkbox" ><label for="2f58707c-51af-4d23-b6dd-25ade241f200" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d53a3418-9329-41bb-beab-5672fd42d39d" type="checkbox" ><label for="d53a3418-9329-41bb-beab-5672fd42d39d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bc671ed-f08c-4e57-a785-9b18f06e6255" type="checkbox" ><label for="6bc671ed-f08c-4e57-a785-9b18f06e6255" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-512488f7-be4f-4549-873f-f58142d96fcd {color: black;background-color: white;}#sk-512488f7-be4f-4549-873f-f58142d96fcd pre{padding: 0;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-toggleable {background-color: white;}#sk-512488f7-be4f-4549-873f-f58142d96fcd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-512488f7-be4f-4549-873f-f58142d96fcd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-512488f7-be4f-4549-873f-f58142d96fcd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-512488f7-be4f-4549-873f-f58142d96fcd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-512488f7-be4f-4549-873f-f58142d96fcd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-512488f7-be4f-4549-873f-f58142d96fcd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-estimator:hover {background-color: #d4ebff;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-item {z-index: 1;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-parallel-item:only-child::after {width: 0;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-512488f7-be4f-4549-873f-f58142d96fcd div.sk-text-repr-fallback {display: none;}</style><div id="sk-512488f7-be4f-4549-873f-f58142d96fcd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbbd697b-9364-4d73-9cc0-9e0edd63317c" type="checkbox" ><label for="cbbd697b-9364-4d73-9cc0-9e0edd63317c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29b2de06-2fb4-440a-aa43-51670ba7ad58" type="checkbox" ><label for="29b2de06-2fb4-440a-aa43-51670ba7ad58" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fdb0cf6-2b6c-4f09-adc4-e56b0058573e" type="checkbox" ><label for="9fdb0cf6-2b6c-4f09-adc4-e56b0058573e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="371e298f-9253-438c-a1fc-f67cdcc01383" type="checkbox" ><label for="371e298f-9253-438c-a1fc-f67cdcc01383" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da446e0a-2fbf-48e4-a227-04ed56250eee" type="checkbox" ><label for="da446e0a-2fbf-48e4-a227-04ed56250eee" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e7a12d5-2d14-4a52-9898-f128a4d05f94" type="checkbox" ><label for="2e7a12d5-2d14-4a52-9898-f128a4d05f94" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="265c19aa-754c-4457-afdc-0ab50433b196" type="checkbox" ><label for="265c19aa-754c-4457-afdc-0ab50433b196" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d20f54cd-de0f-45be-aa02-e8370672e32c" type="checkbox" ><label for="d20f54cd-de0f-45be-aa02-e8370672e32c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65b7aaff-441c-4fcb-93ec-9dfb76d4dcc4" type="checkbox" ><label for="65b7aaff-441c-4fcb-93ec-9dfb76d4dcc4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 {color: black;background-color: white;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 pre{padding: 0;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-toggleable {background-color: white;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-item {z-index: 1;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-parallel-item:only-child::after {width: 0;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d523a66f-92e4-471c-9ebf-a71c0c153c84 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d523a66f-92e4-471c-9ebf-a71c0c153c84" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23b20187-c474-4919-bf27-778f0b805602" type="checkbox" ><label for="23b20187-c474-4919-bf27-778f0b805602" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12e74ee1-b252-4d37-87c9-ec4a2f385fdc" type="checkbox" ><label for="12e74ee1-b252-4d37-87c9-ec4a2f385fdc" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="caf72650-c7cc-4b8b-9b98-b2e9645b3006" type="checkbox" ><label for="caf72650-c7cc-4b8b-9b98-b2e9645b3006" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54e6049d-7cb7-4006-9db2-71742d4c9639" type="checkbox" ><label for="54e6049d-7cb7-4006-9db2-71742d4c9639" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e98eddf-7326-4e11-af30-2dd52b8deae0" type="checkbox" ><label for="3e98eddf-7326-4e11-af30-2dd52b8deae0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9df4e8e-a4c8-4044-9283-b6cc09173057" type="checkbox" ><label for="d9df4e8e-a4c8-4044-9283-b6cc09173057" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8a1d213-99bb-4873-a1e7-13d051dfb889" type="checkbox" ><label for="e8a1d213-99bb-4873-a1e7-13d051dfb889" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0863edd-6a6e-425c-990e-77cff2c32070" type="checkbox" ><label for="c0863edd-6a6e-425c-990e-77cff2c32070" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ee44483-5e70-41e4-ad21-f4cf16024a19" type="checkbox" ><label for="1ee44483-5e70-41e4-ad21-f4cf16024a19" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c203226b-9e57-4bfd-9138-6512500a648b" type="checkbox" ><label for="c203226b-9e57-4bfd-9138-6512500a648b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.102 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
