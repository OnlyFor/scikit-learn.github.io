
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 {color: black;background-color: white;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 pre{padding: 0;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-toggleable {background-color: white;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-item {z-index: 1;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-parallel-item:only-child::after {width: 0;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-505a44c9-9b76-4dfc-b6c2-6146fe45faf0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="402397a3-5924-4164-a7c3-7af00cb8aed2" type="checkbox" ><label for="402397a3-5924-4164-a7c3-7af00cb8aed2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19209d43-6b5c-4298-90ef-3f27fc8d72a2" type="checkbox" ><label for="19209d43-6b5c-4298-90ef-3f27fc8d72a2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0c0f08b-2a79-4b31-a4d6-d46693089891" type="checkbox" ><label for="c0c0f08b-2a79-4b31-a4d6-d46693089891" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd {color: black;background-color: white;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd pre{padding: 0;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-toggleable {background-color: white;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-estimator:hover {background-color: #d4ebff;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-item {z-index: 1;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-parallel-item:only-child::after {width: 0;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd div.sk-text-repr-fallback {display: none;}</style><div id="sk-22ec00b5-6530-40c6-8999-dbe1a973d6fd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11b538bd-12d1-444f-b4a0-e29ffd60cfbc" type="checkbox" ><label for="11b538bd-12d1-444f-b4a0-e29ffd60cfbc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8cef6fb-9edb-48e1-839a-da9999155716" type="checkbox" ><label for="b8cef6fb-9edb-48e1-839a-da9999155716" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc79312f-33b8-4c80-b857-ac1c147ae502" type="checkbox" ><label for="fc79312f-33b8-4c80-b857-ac1c147ae502" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd83933d-4c82-4085-9edb-809cacdbdbb7" type="checkbox" ><label for="fd83933d-4c82-4085-9edb-809cacdbdbb7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 {color: black;background-color: white;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 pre{padding: 0;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-toggleable {background-color: white;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-item {z-index: 1;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-parallel-item:only-child::after {width: 0;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ff0c2d88-b349-4b1e-b0a4-5d2eef81e4c9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46dc74be-967e-4313-8456-231e9281fb00" type="checkbox" ><label for="46dc74be-967e-4313-8456-231e9281fb00" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8e77920-41f9-4466-928a-1df9735d64cd" type="checkbox" ><label for="e8e77920-41f9-4466-928a-1df9735d64cd" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a084aa3f-6584-4295-94c7-b567d2861b36" type="checkbox" ><label for="a084aa3f-6584-4295-94c7-b567d2861b36" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 {color: black;background-color: white;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 pre{padding: 0;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-toggleable {background-color: white;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-item {z-index: 1;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-parallel-item:only-child::after {width: 0;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e57b77dd-d1a7-4cb3-b96b-f3f0fbf9a031" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e1e2047-3736-4f26-a313-5214c77ab06f" type="checkbox" ><label for="4e1e2047-3736-4f26-a313-5214c77ab06f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7268680-4ce9-4599-85a8-31054bb1b6d6" type="checkbox" ><label for="c7268680-4ce9-4599-85a8-31054bb1b6d6" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="822da748-d421-47e7-a225-546dd0bc687f" type="checkbox" ><label for="822da748-d421-47e7-a225-546dd0bc687f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="725e0003-49e8-4068-870a-049af2721bab" type="checkbox" ><label for="725e0003-49e8-4068-870a-049af2721bab" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10945f61-7dd7-4420-ae0d-b7682d2be59a" type="checkbox" ><label for="10945f61-7dd7-4420-ae0d-b7682d2be59a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fff2de13-bba9-4069-b0fc-fbb23b0dcc68" type="checkbox" ><label for="fff2de13-bba9-4069-b0fc-fbb23b0dcc68" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7151b570-3239-48bd-999d-bc16944eeeb9" type="checkbox" ><label for="7151b570-3239-48bd-999d-bc16944eeeb9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9342390c-e906-4b02-ab8c-9552c9b1180c" type="checkbox" ><label for="9342390c-e906-4b02-ab8c-9552c9b1180c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12cbe9c2-9790-49f5-81a8-3e37c85386f9" type="checkbox" ><label for="12cbe9c2-9790-49f5-81a8-3e37c85386f9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f {color: black;background-color: white;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f pre{padding: 0;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-toggleable {background-color: white;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-estimator:hover {background-color: #d4ebff;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-item {z-index: 1;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-parallel-item:only-child::after {width: 0;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f div.sk-text-repr-fallback {display: none;}</style><div id="sk-ae76b9d1-d1ef-4607-b4dd-c1eff581210f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57b93953-24ed-4be5-a08f-c385038236d8" type="checkbox" ><label for="57b93953-24ed-4be5-a08f-c385038236d8" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11f3b31a-7ad3-4853-9242-4a5fcd03879c" type="checkbox" ><label for="11f3b31a-7ad3-4853-9242-4a5fcd03879c" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bbe45f5-0d22-4216-ad79-fb34958ab9b5" type="checkbox" ><label for="2bbe45f5-0d22-4216-ad79-fb34958ab9b5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b91788eb-4252-4066-beaa-092f9680f8c0" type="checkbox" ><label for="b91788eb-4252-4066-beaa-092f9680f8c0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6bc0ccd-be45-408c-958e-f18e814fbda4" type="checkbox" ><label for="a6bc0ccd-be45-408c-958e-f18e814fbda4" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb6db8e6-95a0-4720-a121-9f6663f55c35" type="checkbox" ><label for="eb6db8e6-95a0-4720-a121-9f6663f55c35" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7027ae9-7b3d-4d49-a98c-f23505aa1f9e" type="checkbox" ><label for="b7027ae9-7b3d-4d49-a98c-f23505aa1f9e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0aeac6d9-203c-4b7c-a082-f37af355a6a9" type="checkbox" ><label for="0aeac6d9-203c-4b7c-a082-f37af355a6a9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb950b82-975c-449f-8f61-5bab9a25b553" type="checkbox" ><label for="cb950b82-975c-449f-8f61-5bab9a25b553" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
