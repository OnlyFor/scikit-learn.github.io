
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-128b44cd-527b-4684-bcd6-df5f014c5154 {color: black;background-color: white;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 pre{padding: 0;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-toggleable {background-color: white;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-estimator:hover {background-color: #d4ebff;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-item {z-index: 1;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-parallel-item:only-child::after {width: 0;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-128b44cd-527b-4684-bcd6-df5f014c5154 div.sk-text-repr-fallback {display: none;}</style><div id="sk-128b44cd-527b-4684-bcd6-df5f014c5154" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85eb0579-0289-4982-a15c-925a7275d309" type="checkbox" ><label for="85eb0579-0289-4982-a15c-925a7275d309" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1313456-af5c-47e8-9958-ae421c697a18" type="checkbox" ><label for="b1313456-af5c-47e8-9958-ae421c697a18" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f6ac7bc-4454-4a7b-9f33-97ab0d551f05" type="checkbox" ><label for="7f6ac7bc-4454-4a7b-9f33-97ab0d551f05" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 {color: black;background-color: white;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 pre{padding: 0;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-toggleable {background-color: white;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-item {z-index: 1;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-parallel-item:only-child::after {width: 0;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d7645e3a-ea2b-444f-8a70-29859da16cc0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d7645e3a-ea2b-444f-8a70-29859da16cc0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87628ad4-b33a-4318-956f-127841c5ea0b" type="checkbox" ><label for="87628ad4-b33a-4318-956f-127841c5ea0b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="811e3b35-8d76-4fcd-bf68-9ad035113eac" type="checkbox" ><label for="811e3b35-8d76-4fcd-bf68-9ad035113eac" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c67feaa-e2f0-4800-ac9d-d7b7a4f6201f" type="checkbox" ><label for="1c67feaa-e2f0-4800-ac9d-d7b7a4f6201f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73f97c62-f362-459b-8df4-841c1a40c835" type="checkbox" ><label for="73f97c62-f362-459b-8df4-841c1a40c835" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 {color: black;background-color: white;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 pre{padding: 0;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-toggleable {background-color: white;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-estimator:hover {background-color: #d4ebff;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-item {z-index: 1;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-parallel-item:only-child::after {width: 0;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-92aa5227-22e8-4293-9c6b-ae05b98ef201 div.sk-text-repr-fallback {display: none;}</style><div id="sk-92aa5227-22e8-4293-9c6b-ae05b98ef201" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9b5de69-44d3-4684-b950-51320c74e33d" type="checkbox" ><label for="d9b5de69-44d3-4684-b950-51320c74e33d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e420cbe-2b74-4f1c-a882-d481500ef7e3" type="checkbox" ><label for="1e420cbe-2b74-4f1c-a882-d481500ef7e3" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c7f19b9-493d-4ca7-827b-c7557b95cab3" type="checkbox" ><label for="6c7f19b9-493d-4ca7-827b-c7557b95cab3" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c {color: black;background-color: white;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c pre{padding: 0;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-toggleable {background-color: white;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-estimator:hover {background-color: #d4ebff;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-item {z-index: 1;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-parallel-item:only-child::after {width: 0;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c div.sk-text-repr-fallback {display: none;}</style><div id="sk-7d7c0fab-0b43-47bb-8b8d-49aaeca24a9c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1883ac6-e528-4263-ba4c-7e6df4b8d6fb" type="checkbox" ><label for="d1883ac6-e528-4263-ba4c-7e6df4b8d6fb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="737ed183-6fb4-47b8-8d1c-04479eac240e" type="checkbox" ><label for="737ed183-6fb4-47b8-8d1c-04479eac240e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a1b775d-417d-4040-a974-4eb869b8e3b1" type="checkbox" ><label for="0a1b775d-417d-4040-a974-4eb869b8e3b1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1374be7c-d64a-410c-9485-b6e6f56a05a7" type="checkbox" ><label for="1374be7c-d64a-410c-9485-b6e6f56a05a7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c328942-3346-4828-90af-303674aee10c" type="checkbox" ><label for="9c328942-3346-4828-90af-303674aee10c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed84c96b-a4ba-40ee-976d-c11eabfbd517" type="checkbox" ><label for="ed84c96b-a4ba-40ee-976d-c11eabfbd517" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d02a460-a948-4758-b763-318ecc1bf006" type="checkbox" ><label for="1d02a460-a948-4758-b763-318ecc1bf006" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d66541d-a899-4aed-bffe-0843ceb9d7e2" type="checkbox" ><label for="4d66541d-a899-4aed-bffe-0843ceb9d7e2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4e4a25c-85b4-461c-ad5f-623aad63c472" type="checkbox" ><label for="b4e4a25c-85b4-461c-ad5f-623aad63c472" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 {color: black;background-color: white;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 pre{padding: 0;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-toggleable {background-color: white;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-item {z-index: 1;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-parallel-item:only-child::after {width: 0;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d956ef96-8f85-4f66-897c-e70a3e2c4bd9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1792bc1c-0e38-4000-8b2d-86b24eef4955" type="checkbox" ><label for="1792bc1c-0e38-4000-8b2d-86b24eef4955" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7122c000-a05e-4c5c-b6aa-51053a59ccfc" type="checkbox" ><label for="7122c000-a05e-4c5c-b6aa-51053a59ccfc" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c41ae10-88f7-4555-8dc7-d5428bfb5891" type="checkbox" ><label for="4c41ae10-88f7-4555-8dc7-d5428bfb5891" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c219867-36fa-4f65-bf6b-16c0838cd273" type="checkbox" ><label for="5c219867-36fa-4f65-bf6b-16c0838cd273" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fc2b2bd-318f-4c38-b96e-38fba62b4153" type="checkbox" ><label for="4fc2b2bd-318f-4c38-b96e-38fba62b4153" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a947cbf8-a687-4ded-96b4-7fd01bf6e318" type="checkbox" ><label for="a947cbf8-a687-4ded-96b4-7fd01bf6e318" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b356b081-9a11-458f-b47b-6ec26b4c78a2" type="checkbox" ><label for="b356b081-9a11-458f-b47b-6ec26b4c78a2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56975107-7cdc-477e-991d-1fb0ad6beed4" type="checkbox" ><label for="56975107-7cdc-477e-991d-1fb0ad6beed4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1528978-b5b5-4033-9243-3473086a0e70" type="checkbox" ><label for="a1528978-b5b5-4033-9243-3473086a0e70" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
