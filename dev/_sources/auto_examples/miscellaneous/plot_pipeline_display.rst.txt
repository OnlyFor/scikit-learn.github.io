
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline in a Jupyter Notebook is
`'diagram'` where `set_config(display='diagram')`. To deactivate HTML representation,
use `set_config(display='text')`.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To visualize the diagram, the default is `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 {color: black;background-color: white;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 pre{padding: 0;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-toggleable {background-color: white;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-item {z-index: 1;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-parallel-item:only-child::after {width: 0;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0e26c211-eafc-44e2-bce9-a7ab15fcdb87" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a23603bb-6d10-4a12-94cf-bddb553dd6b3" type="checkbox" ><label for="a23603bb-6d10-4a12-94cf-bddb553dd6b3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a36658d-99ca-4893-bde1-ff4c20951d51" type="checkbox" ><label for="8a36658d-99ca-4893-bde1-ff4c20951d51" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f11ebb7a-d363-4513-968d-4ee6ce761134" type="checkbox" ><label for="f11ebb7a-d363-4513-968d-4ee6ce761134" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 39-40

To view the text pipeline, change to `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 44-45

Put back the default display

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 48-55

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifier step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 55-68

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 {color: black;background-color: white;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 pre{padding: 0;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-toggleable {background-color: white;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-estimator:hover {background-color: #d4ebff;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-item {z-index: 1;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-parallel-item:only-child::after {width: 0;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-56e67654-0b45-4ba2-99a7-344f8bef7e89 div.sk-text-repr-fallback {display: none;}</style><div id="sk-56e67654-0b45-4ba2-99a7-344f8bef7e89" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58c07de2-572b-4d65-9123-19e35051127d" type="checkbox" ><label for="58c07de2-572b-4d65-9123-19e35051127d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3044610b-30b5-4e89-99a1-d11b604ee34e" type="checkbox" ><label for="3044610b-30b5-4e89-99a1-d11b604ee34e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7630bf17-f8a5-4d2d-9733-90b4e296d695" type="checkbox" ><label for="7630bf17-f8a5-4d2d-9733-90b4e296d695" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02a4431b-2109-4f99-897a-2d5361e71533" type="checkbox" ><label for="02a4431b-2109-4f99-897a-2d5361e71533" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-75

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 75-84

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-50652719-4b81-4fb0-abe7-827f18bb550b {color: black;background-color: white;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b pre{padding: 0;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-toggleable {background-color: white;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-estimator:hover {background-color: #d4ebff;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-item {z-index: 1;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-parallel-item:only-child::after {width: 0;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-50652719-4b81-4fb0-abe7-827f18bb550b div.sk-text-repr-fallback {display: none;}</style><div id="sk-50652719-4b81-4fb0-abe7-827f18bb550b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81757697-9553-41ec-a872-b256c7529506" type="checkbox" ><label for="81757697-9553-41ec-a872-b256c7529506" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40ae8e90-7570-4797-85d9-2cf672b4e9ef" type="checkbox" ><label for="40ae8e90-7570-4797-85d9-2cf672b4e9ef" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fe98624-437e-4c45-905e-ef8bc72fc220" type="checkbox" ><label for="3fe98624-437e-4c45-905e-ef8bc72fc220" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-91

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 91-127

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b {color: black;background-color: white;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b pre{padding: 0;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-toggleable {background-color: white;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-estimator:hover {background-color: #d4ebff;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-item {z-index: 1;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-parallel-item:only-child::after {width: 0;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b div.sk-text-repr-fallback {display: none;}</style><div id="sk-01e8d024-0fbb-4c9e-ad59-243dde064f1b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fd2b9a3-74fa-4aa7-8419-aa501499327a" type="checkbox" ><label for="9fd2b9a3-74fa-4aa7-8419-aa501499327a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="500c991f-6125-454b-ad4d-3b4ce345dcbf" type="checkbox" ><label for="500c991f-6125-454b-ad4d-3b4ce345dcbf" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bb1f10b-9a22-4697-8645-db039407ccb5" type="checkbox" ><label for="5bb1f10b-9a22-4697-8645-db039407ccb5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f685ccd-88d0-4cd3-bdb6-b86b2aca49e7" type="checkbox" ><label for="1f685ccd-88d0-4cd3-bdb6-b86b2aca49e7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b8f74df-57b3-435f-8dc0-3a249d7907cc" type="checkbox" ><label for="2b8f74df-57b3-435f-8dc0-3a249d7907cc" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70152c12-14d1-4d2a-bc3c-f201e82a7cb6" type="checkbox" ><label for="70152c12-14d1-4d2a-bc3c-f201e82a7cb6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da5493d4-2ae7-4297-907c-0d621ab4a073" type="checkbox" ><label for="da5493d4-2ae7-4297-907c-0d621ab4a073" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c47ab09b-b697-481b-85ee-898597320eef" type="checkbox" ><label for="c47ab09b-b697-481b-85ee-898597320eef" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0899ab89-421b-4438-9cd6-d95db7357977" type="checkbox" ><label for="0899ab89-421b-4438-9cd6-d95db7357977" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 128-134

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 134-181

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 {color: black;background-color: white;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 pre{padding: 0;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-toggleable {background-color: white;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-item {z-index: 1;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-parallel-item:only-child::after {width: 0;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1ffa522a-ba2e-4e51-8fe8-e46207457395 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1ffa522a-ba2e-4e51-8fe8-e46207457395" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee0c846e-aeca-413d-8840-68f9ff4812d7" type="checkbox" ><label for="ee0c846e-aeca-413d-8840-68f9ff4812d7" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07fdb846-3835-4911-a228-cab0cf4b0c9f" type="checkbox" ><label for="07fdb846-3835-4911-a228-cab0cf4b0c9f" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="849c1555-b873-4c2f-991b-d848148a97a7" type="checkbox" ><label for="849c1555-b873-4c2f-991b-d848148a97a7" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b347d615-b0e6-4178-8f74-4a79f9c745fe" type="checkbox" ><label for="b347d615-b0e6-4178-8f74-4a79f9c745fe" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9be8a662-3aa5-4a1f-853a-b5e2e9ff722d" type="checkbox" ><label for="9be8a662-3aa5-4a1f-853a-b5e2e9ff722d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfe70b40-2761-4ab2-8b57-035403fc34d6" type="checkbox" ><label for="dfe70b40-2761-4ab2-8b57-035403fc34d6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97a9e573-2c75-4a6b-a115-481681961e44" type="checkbox" ><label for="97a9e573-2c75-4a6b-a115-481681961e44" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0ebfdca-b8fe-4b0a-831f-c4ade0bce130" type="checkbox" ><label for="c0ebfdca-b8fe-4b0a-831f-c4ade0bce130" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e88029f-1dcd-4ae8-987d-9c4db6f145c9" type="checkbox" ><label for="4e88029f-1dcd-4ae8-987d-9c4db6f145c9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e07918b-d04f-4dbb-94f0-2055924f7c27" type="checkbox" ><label for="2e07918b-d04f-4dbb-94f0-2055924f7c27" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.087 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
