
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e97b3893-947b-42e4-ac84-663061b464cf {color: black;background-color: white;}#sk-e97b3893-947b-42e4-ac84-663061b464cf pre{padding: 0;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-toggleable {background-color: white;}#sk-e97b3893-947b-42e4-ac84-663061b464cf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e97b3893-947b-42e4-ac84-663061b464cf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e97b3893-947b-42e4-ac84-663061b464cf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-estimator:hover {background-color: #d4ebff;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-item {z-index: 1;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-parallel-item:only-child::after {width: 0;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-container {display: inline-block;position: relative;}#sk-e97b3893-947b-42e4-ac84-663061b464cf div.sk-text-repr-fallback {display: none;}</style><div id="sk-e97b3893-947b-42e4-ac84-663061b464cf" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0aeb2fcd-66fc-4979-a7ef-444f8aad928d" type="checkbox" ><label class="sk-toggleable__label" for="0aeb2fcd-66fc-4979-a7ef-444f8aad928d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca85c42e-7736-46c7-99c0-0560530b2cc9" type="checkbox" ><label class="sk-toggleable__label" for="ca85c42e-7736-46c7-99c0-0560530b2cc9">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0686c165-875a-44c1-83cd-5595d10a79cb" type="checkbox" ><label class="sk-toggleable__label" for="0686c165-875a-44c1-83cd-5595d10a79cb">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 {color: black;background-color: white;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 pre{padding: 0;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-toggleable {background-color: white;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-item {z-index: 1;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-parallel-item:only-child::after {width: 0;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-container {display: inline-block;position: relative;}#sk-9650d566-07c1-4dca-ba62-5021f6a5f954 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9650d566-07c1-4dca-ba62-5021f6a5f954" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddb1a4cc-6865-4387-9e81-61f58d1f21eb" type="checkbox" ><label class="sk-toggleable__label" for="ddb1a4cc-6865-4387-9e81-61f58d1f21eb">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a63d537c-0482-49bd-a2b4-a46dc717bc7f" type="checkbox" ><label class="sk-toggleable__label" for="a63d537c-0482-49bd-a2b4-a46dc717bc7f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29d932b1-e9c9-47b9-84b5-3d1e43e3f908" type="checkbox" ><label class="sk-toggleable__label" for="29d932b1-e9c9-47b9-84b5-3d1e43e3f908">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea0ce94b-9eed-4858-b16d-63d9ac5f6171" type="checkbox" ><label class="sk-toggleable__label" for="ea0ce94b-9eed-4858-b16d-63d9ac5f6171">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 {color: black;background-color: white;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 pre{padding: 0;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-toggleable {background-color: white;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-item {z-index: 1;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-parallel-item:only-child::after {width: 0;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-container {display: inline-block;position: relative;}#sk-efec2383-4639-49f2-9e79-73b41a8a86b5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-efec2383-4639-49f2-9e79-73b41a8a86b5" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e24c4f3-72ca-4dbc-ac7a-992acb1ac939" type="checkbox" ><label class="sk-toggleable__label" for="1e24c4f3-72ca-4dbc-ac7a-992acb1ac939">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1523754e-1d74-4f76-8213-52790cf48db1" type="checkbox" ><label class="sk-toggleable__label" for="1523754e-1d74-4f76-8213-52790cf48db1">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4d5c5eb-d7ea-4c8a-bb58-1b38245695b1" type="checkbox" ><label class="sk-toggleable__label" for="d4d5c5eb-d7ea-4c8a-bb58-1b38245695b1">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d {color: black;background-color: white;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d pre{padding: 0;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-toggleable {background-color: white;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-estimator:hover {background-color: #d4ebff;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-item {z-index: 1;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-parallel-item:only-child::after {width: 0;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-container {display: inline-block;position: relative;}#sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d div.sk-text-repr-fallback {display: none;}</style><div id="sk-f4bb2e0e-b7b5-4b82-a331-ab5ec8fb339d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da2db3b2-6df0-4d74-9399-aca084be32b4" type="checkbox" ><label class="sk-toggleable__label" for="da2db3b2-6df0-4d74-9399-aca084be32b4">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="662b2067-0609-4b4c-97d6-e6fa9baa9178" type="checkbox" ><label class="sk-toggleable__label" for="662b2067-0609-4b4c-97d6-e6fa9baa9178">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77a9b468-3387-4760-a29a-badba494703b" type="checkbox" ><label class="sk-toggleable__label" for="77a9b468-3387-4760-a29a-badba494703b">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5e91f79-3f47-46a9-ad65-a86e7713ebeb" type="checkbox" ><label class="sk-toggleable__label" for="e5e91f79-3f47-46a9-ad65-a86e7713ebeb">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13a40009-8ef7-4df7-a9d9-881968f5ab3b" type="checkbox" ><label class="sk-toggleable__label" for="13a40009-8ef7-4df7-a9d9-881968f5ab3b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="571e8d21-31a9-4a74-b8dd-0e5651e3db57" type="checkbox" ><label class="sk-toggleable__label" for="571e8d21-31a9-4a74-b8dd-0e5651e3db57">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47a9a2fc-76ab-4e38-b6e1-94a6487d6650" type="checkbox" ><label class="sk-toggleable__label" for="47a9a2fc-76ab-4e38-b6e1-94a6487d6650">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fdc9fd1-9784-4cd9-987f-9e9b8c1e617c" type="checkbox" ><label class="sk-toggleable__label" for="1fdc9fd1-9784-4cd9-987f-9e9b8c1e617c">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7e95f61-538e-43e8-9f16-c75350fe3b3d" type="checkbox" ><label class="sk-toggleable__label" for="a7e95f61-538e-43e8-9f16-c75350fe3b3d">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-19d43402-36b3-457b-87ac-42d52bdd5036 {color: black;background-color: white;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 pre{padding: 0;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-toggleable {background-color: white;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-estimator:hover {background-color: #d4ebff;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-item {z-index: 1;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-parallel-item:only-child::after {width: 0;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-container {display: inline-block;position: relative;}#sk-19d43402-36b3-457b-87ac-42d52bdd5036 div.sk-text-repr-fallback {display: none;}</style><div id="sk-19d43402-36b3-457b-87ac-42d52bdd5036" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d66c1e44-3d18-49c7-8aee-33dd1e8e1d3d" type="checkbox" ><label class="sk-toggleable__label" for="d66c1e44-3d18-49c7-8aee-33dd1e8e1d3d">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aff3f18e-4888-43bd-a311-bd10aad902c6" type="checkbox" ><label class="sk-toggleable__label" for="aff3f18e-4888-43bd-a311-bd10aad902c6">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ee08168-28dc-4aa2-9651-1b83c84dc383" type="checkbox" ><label class="sk-toggleable__label" for="3ee08168-28dc-4aa2-9651-1b83c84dc383">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6afa8671-161f-44be-8751-4965f81bd24b" type="checkbox" ><label class="sk-toggleable__label" for="6afa8671-161f-44be-8751-4965f81bd24b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1471a611-43a1-4ea6-a9ac-c31fa9d14157" type="checkbox" ><label class="sk-toggleable__label" for="1471a611-43a1-4ea6-a9ac-c31fa9d14157">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a03e6a8-ee7f-4468-92d3-5eb70a0c43ac" type="checkbox" ><label class="sk-toggleable__label" for="7a03e6a8-ee7f-4468-92d3-5eb70a0c43ac">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a6bd210-dd48-469f-9865-923e17f47604" type="checkbox" ><label class="sk-toggleable__label" for="5a6bd210-dd48-469f-9865-923e17f47604">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d5ddf18-91d3-4ba5-92f6-ed55ecb46b6c" type="checkbox" ><label class="sk-toggleable__label" for="7d5ddf18-91d3-4ba5-92f6-ed55ecb46b6c">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b29cccb3-00be-4af5-981c-b04171893b9c" type="checkbox" ><label class="sk-toggleable__label" for="b29cccb3-00be-4af5-981c-b04171893b9c">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.091 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
