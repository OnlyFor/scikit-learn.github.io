
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 {color: black;background-color: white;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 pre{padding: 0;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-toggleable {background-color: white;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-item {z-index: 1;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-parallel-item:only-child::after {width: 0;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e2889d5b-600f-4054-b615-2e8735a65cf1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e2889d5b-600f-4054-b615-2e8735a65cf1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2e90998-2a25-4f87-a65b-c57e40b3985d" type="checkbox" ><label for="e2e90998-2a25-4f87-a65b-c57e40b3985d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d011e8a-7d0b-4d5d-949f-1e2ce84f6cdd" type="checkbox" ><label for="4d011e8a-7d0b-4d5d-949f-1e2ce84f6cdd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d351ecb-fc89-4666-bee8-eb38bd7d69a5" type="checkbox" ><label for="5d351ecb-fc89-4666-bee8-eb38bd7d69a5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 {color: black;background-color: white;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 pre{padding: 0;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-toggleable {background-color: white;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-estimator:hover {background-color: #d4ebff;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-item {z-index: 1;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-parallel-item:only-child::after {width: 0;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07 div.sk-text-repr-fallback {display: none;}</style><div id="sk-097a18e8-0fbd-40b1-8d6d-fb6d0441ec07" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="067cd072-a2a0-465a-9604-b8c5d9685672" type="checkbox" ><label for="067cd072-a2a0-465a-9604-b8c5d9685672" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62ad2b85-1baa-4401-98d4-090e6bf7a355" type="checkbox" ><label for="62ad2b85-1baa-4401-98d4-090e6bf7a355" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11bb0a8b-dbb8-4040-802f-68a4821afb67" type="checkbox" ><label for="11bb0a8b-dbb8-4040-802f-68a4821afb67" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68f9c1a2-4156-48c6-b339-d61e21730efa" type="checkbox" ><label for="68f9c1a2-4156-48c6-b339-d61e21730efa" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5114b895-6d7d-434f-b772-6879b3f0d854 {color: black;background-color: white;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 pre{padding: 0;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-toggleable {background-color: white;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-item {z-index: 1;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-parallel-item:only-child::after {width: 0;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5114b895-6d7d-434f-b772-6879b3f0d854 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5114b895-6d7d-434f-b772-6879b3f0d854" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b3b88b3-b2d8-48ee-ad69-7abbdf55c339" type="checkbox" ><label for="3b3b88b3-b2d8-48ee-ad69-7abbdf55c339" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e51ea891-0fd8-4ecd-9b4c-6dbdae7c1d49" type="checkbox" ><label for="e51ea891-0fd8-4ecd-9b4c-6dbdae7c1d49" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c86f3d09-d25a-4c40-9f49-a230e4d1280e" type="checkbox" ><label for="c86f3d09-d25a-4c40-9f49-a230e4d1280e" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 {color: black;background-color: white;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 pre{padding: 0;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-toggleable {background-color: white;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-item {z-index: 1;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-parallel-item:only-child::after {width: 0;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bd753019-7cf1-4ff1-a990-2d72b7764a03 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bd753019-7cf1-4ff1-a990-2d72b7764a03" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41cf507a-05fa-40f3-9bc2-ddba89170173" type="checkbox" ><label for="41cf507a-05fa-40f3-9bc2-ddba89170173" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90f2b217-03f9-4395-991f-eca881dea521" type="checkbox" ><label for="90f2b217-03f9-4395-991f-eca881dea521" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc6b8775-2e7c-4a52-844a-3fcabb3e145e" type="checkbox" ><label for="cc6b8775-2e7c-4a52-844a-3fcabb3e145e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10c73dea-bb0e-491d-9c36-ff5ed8851e31" type="checkbox" ><label for="10c73dea-bb0e-491d-9c36-ff5ed8851e31" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="086b3563-2846-4784-a236-4351a96f479d" type="checkbox" ><label for="086b3563-2846-4784-a236-4351a96f479d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4026eb6d-216c-45c6-9b7e-4448df92c260" type="checkbox" ><label for="4026eb6d-216c-45c6-9b7e-4448df92c260" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9a027dc-88e6-424d-bdc2-536241e7b825" type="checkbox" ><label for="d9a027dc-88e6-424d-bdc2-536241e7b825" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d121720-ebf9-4ed7-b150-fb340efba8ce" type="checkbox" ><label for="8d121720-ebf9-4ed7-b150-fb340efba8ce" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc231df4-15da-4796-ab96-7455b394d2f7" type="checkbox" ><label for="fc231df4-15da-4796-ab96-7455b394d2f7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a53a3ebf-6672-461d-b932-3825bb8c592d {color: black;background-color: white;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d pre{padding: 0;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-toggleable {background-color: white;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-estimator:hover {background-color: #d4ebff;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-item {z-index: 1;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-parallel-item:only-child::after {width: 0;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a53a3ebf-6672-461d-b932-3825bb8c592d div.sk-text-repr-fallback {display: none;}</style><div id="sk-a53a3ebf-6672-461d-b932-3825bb8c592d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9af3edac-0e39-496d-b10c-33189184fcba" type="checkbox" ><label for="9af3edac-0e39-496d-b10c-33189184fcba" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57ce4b37-d33e-4ad2-a08d-38a94248f029" type="checkbox" ><label for="57ce4b37-d33e-4ad2-a08d-38a94248f029" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14a28a47-3ecf-450d-af6a-7410df6d13d9" type="checkbox" ><label for="14a28a47-3ecf-450d-af6a-7410df6d13d9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3530439f-f803-4532-ad8d-f04ee3bb4577" type="checkbox" ><label for="3530439f-f803-4532-ad8d-f04ee3bb4577" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23d89620-388f-48f3-af6b-b965e77e64c0" type="checkbox" ><label for="23d89620-388f-48f3-af6b-b965e77e64c0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="407bca3d-c6c9-4c3d-99f8-87239e59e59a" type="checkbox" ><label for="407bca3d-c6c9-4c3d-99f8-87239e59e59a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e21baea-02f1-432c-b80c-18455f7f3898" type="checkbox" ><label for="3e21baea-02f1-432c-b80c-18455f7f3898" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4c9a7bd-4a01-4c59-b831-38ebbaa36a69" type="checkbox" ><label for="a4c9a7bd-4a01-4c59-b831-38ebbaa36a69" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ee33b2e-7286-4ee0-bf75-6439a0f6e433" type="checkbox" ><label for="2ee33b2e-7286-4ee0-bf75-6439a0f6e433" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.081 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
