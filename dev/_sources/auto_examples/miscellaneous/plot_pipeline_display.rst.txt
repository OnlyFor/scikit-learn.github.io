
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 {color: black;background-color: white;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 pre{padding: 0;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-toggleable {background-color: white;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-estimator:hover {background-color: #d4ebff;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-item {z-index: 1;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-parallel-item:only-child::after {width: 0;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-829f2b80-6d88-4a6a-af31-843a67a7b076 div.sk-text-repr-fallback {display: none;}</style><div id="sk-829f2b80-6d88-4a6a-af31-843a67a7b076" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d76ecc1-e972-40a6-8903-94929cea7b88" type="checkbox" ><label for="2d76ecc1-e972-40a6-8903-94929cea7b88" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf84e1d6-c7a5-416c-9039-a588821621a4" type="checkbox" ><label for="cf84e1d6-c7a5-416c-9039-a588821621a4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="194b6e68-434a-4369-88ff-a17f7086fbbd" type="checkbox" ><label for="194b6e68-434a-4369-88ff-a17f7086fbbd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2bca9614-8357-46fc-9804-0a3761a6706c {color: black;background-color: white;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c pre{padding: 0;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-toggleable {background-color: white;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-estimator:hover {background-color: #d4ebff;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-item {z-index: 1;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-parallel-item:only-child::after {width: 0;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2bca9614-8357-46fc-9804-0a3761a6706c div.sk-text-repr-fallback {display: none;}</style><div id="sk-2bca9614-8357-46fc-9804-0a3761a6706c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3eaa891f-10ef-4bba-86fa-c0908faac68f" type="checkbox" ><label for="3eaa891f-10ef-4bba-86fa-c0908faac68f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a83d4d4f-fcc7-4cd3-a2d9-d26af6d77b7b" type="checkbox" ><label for="a83d4d4f-fcc7-4cd3-a2d9-d26af6d77b7b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1ada098-1031-4945-8602-9bed5cc5749a" type="checkbox" ><label for="e1ada098-1031-4945-8602-9bed5cc5749a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="daacce24-2f08-4b8a-8704-bb8f792ce552" type="checkbox" ><label for="daacce24-2f08-4b8a-8704-bb8f792ce552" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc {color: black;background-color: white;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc pre{padding: 0;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-toggleable {background-color: white;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-estimator:hover {background-color: #d4ebff;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-item {z-index: 1;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-parallel-item:only-child::after {width: 0;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc div.sk-text-repr-fallback {display: none;}</style><div id="sk-1b005ffc-17d8-44a8-a0ff-5ffb8b2353bc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1eb163f2-83be-4006-85e0-eed794c96bc3" type="checkbox" ><label for="1eb163f2-83be-4006-85e0-eed794c96bc3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d6b09b4-175f-40d1-af14-7e70d6212782" type="checkbox" ><label for="3d6b09b4-175f-40d1-af14-7e70d6212782" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6418f9ad-ca01-42f3-b528-90b1ed3f044e" type="checkbox" ><label for="6418f9ad-ca01-42f3-b528-90b1ed3f044e" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-91d60170-a01a-4a25-9b4b-b599383d6577 {color: black;background-color: white;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 pre{padding: 0;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-toggleable {background-color: white;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-estimator:hover {background-color: #d4ebff;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-item {z-index: 1;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-parallel-item:only-child::after {width: 0;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-91d60170-a01a-4a25-9b4b-b599383d6577 div.sk-text-repr-fallback {display: none;}</style><div id="sk-91d60170-a01a-4a25-9b4b-b599383d6577" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22119854-5e45-40c8-b61f-2256aebe8ead" type="checkbox" ><label for="22119854-5e45-40c8-b61f-2256aebe8ead" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53935595-825f-4b40-8f90-00e2f77a0c60" type="checkbox" ><label for="53935595-825f-4b40-8f90-00e2f77a0c60" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="682460aa-0a7a-469b-a88e-20dcb55576f0" type="checkbox" ><label for="682460aa-0a7a-469b-a88e-20dcb55576f0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b735d03b-7e9a-4119-8f48-621f5c681ace" type="checkbox" ><label for="b735d03b-7e9a-4119-8f48-621f5c681ace" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5ac7577-dd7e-424f-848f-09df6e1966d0" type="checkbox" ><label for="c5ac7577-dd7e-424f-848f-09df6e1966d0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e00fb01c-8465-40f4-a8c7-ef9e704d67ca" type="checkbox" ><label for="e00fb01c-8465-40f4-a8c7-ef9e704d67ca" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="452d8bdd-d6c1-4b5a-aaad-348ceb185f47" type="checkbox" ><label for="452d8bdd-d6c1-4b5a-aaad-348ceb185f47" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c49dfc9-96e4-4695-bb5d-4ff0f127afa0" type="checkbox" ><label for="5c49dfc9-96e4-4695-bb5d-4ff0f127afa0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e496bee5-abf1-4152-b1ff-f6598569aae8" type="checkbox" ><label for="e496bee5-abf1-4152-b1ff-f6598569aae8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8113b58c-f663-4b35-8744-b23593c94ba2 {color: black;background-color: white;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 pre{padding: 0;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-toggleable {background-color: white;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-item {z-index: 1;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-parallel-item:only-child::after {width: 0;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8113b58c-f663-4b35-8744-b23593c94ba2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8113b58c-f663-4b35-8744-b23593c94ba2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a28dea97-28d9-4df7-91f8-e6e8df64f4c8" type="checkbox" ><label for="a28dea97-28d9-4df7-91f8-e6e8df64f4c8" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e8ec2ba-2b63-41c7-9947-1c64b04dc12f" type="checkbox" ><label for="3e8ec2ba-2b63-41c7-9947-1c64b04dc12f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48b7546a-abfc-4f27-a0e2-787dde80ded9" type="checkbox" ><label for="48b7546a-abfc-4f27-a0e2-787dde80ded9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dacf4c97-a552-4ecf-9db2-f49339977acd" type="checkbox" ><label for="dacf4c97-a552-4ecf-9db2-f49339977acd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e187d77a-40b2-4a32-ab6e-dca406dfa1cc" type="checkbox" ><label for="e187d77a-40b2-4a32-ab6e-dca406dfa1cc" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bbc5646-d4a5-416d-87ee-1776862f17dc" type="checkbox" ><label for="4bbc5646-d4a5-416d-87ee-1776862f17dc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b8e328b-bf30-4450-8c11-670a945b343c" type="checkbox" ><label for="1b8e328b-bf30-4450-8c11-670a945b343c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f13faaf8-0b07-4950-873d-00dc5d91cbea" type="checkbox" ><label for="f13faaf8-0b07-4950-873d-00dc5d91cbea" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73df5635-8361-4366-86cf-f7dd9f113084" type="checkbox" ><label for="73df5635-8361-4366-86cf-f7dd9f113084" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.078 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
