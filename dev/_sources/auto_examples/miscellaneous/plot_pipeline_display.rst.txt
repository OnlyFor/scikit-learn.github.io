
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 {color: black;background-color: white;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 pre{padding: 0;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-toggleable {background-color: white;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-item {z-index: 1;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-parallel-item:only-child::after {width: 0;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-container {display: inline-block;position: relative;}#sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8c4fc570-63fb-4cd0-ac8b-06fc9e29fa83" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a493ef6-0bca-4e0d-915b-1a7a79f2cbb5" type="checkbox" ><label class="sk-toggleable__label" for="5a493ef6-0bca-4e0d-915b-1a7a79f2cbb5">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="322abc7f-5ac9-4d8f-af4a-819b0f35a644" type="checkbox" ><label class="sk-toggleable__label" for="322abc7f-5ac9-4d8f-af4a-819b0f35a644">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea15dba6-846d-4a28-878f-c97bf7ab4eb8" type="checkbox" ><label class="sk-toggleable__label" for="ea15dba6-846d-4a28-878f-c97bf7ab4eb8">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced {color: black;background-color: white;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced pre{padding: 0;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-toggleable {background-color: white;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-estimator:hover {background-color: #d4ebff;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-item {z-index: 1;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-parallel-item:only-child::after {width: 0;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-container {display: inline-block;position: relative;}#sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced div.sk-text-repr-fallback {display: none;}</style><div id="sk-7e14c7f3-dfab-4a8b-aa8d-048195162ced" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5deb3739-50ff-4734-8aca-365d6c7daa2f" type="checkbox" ><label class="sk-toggleable__label" for="5deb3739-50ff-4734-8aca-365d6c7daa2f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c369c13-f4f7-4395-9d32-419b2fd41ada" type="checkbox" ><label class="sk-toggleable__label" for="4c369c13-f4f7-4395-9d32-419b2fd41ada">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="819ea72e-b660-4736-bae1-f253bd9abd18" type="checkbox" ><label class="sk-toggleable__label" for="819ea72e-b660-4736-bae1-f253bd9abd18">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e10e933-000f-4678-94e4-7261ff937be6" type="checkbox" ><label class="sk-toggleable__label" for="1e10e933-000f-4678-94e4-7261ff937be6">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 {color: black;background-color: white;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 pre{padding: 0;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-toggleable {background-color: white;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-estimator:hover {background-color: #d4ebff;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-item {z-index: 1;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-parallel-item:only-child::after {width: 0;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-container {display: inline-block;position: relative;}#sk-36a92b02-f4dd-4c27-a6a6-5dd661297106 div.sk-text-repr-fallback {display: none;}</style><div id="sk-36a92b02-f4dd-4c27-a6a6-5dd661297106" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bf43937-3c44-49d3-a882-0948d95f3511" type="checkbox" ><label class="sk-toggleable__label" for="3bf43937-3c44-49d3-a882-0948d95f3511">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f00cd75a-4566-4b58-a789-4aec340aa021" type="checkbox" ><label class="sk-toggleable__label" for="f00cd75a-4566-4b58-a789-4aec340aa021">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c013d3f-28cf-4e41-9204-9fab8a72b074" type="checkbox" ><label class="sk-toggleable__label" for="2c013d3f-28cf-4e41-9204-9fab8a72b074">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb {color: black;background-color: white;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb pre{padding: 0;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-toggleable {background-color: white;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-estimator:hover {background-color: #d4ebff;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-item {z-index: 1;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-parallel-item:only-child::after {width: 0;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-container {display: inline-block;position: relative;}#sk-eb093c14-4927-4082-9037-fc3dd15dc4bb div.sk-text-repr-fallback {display: none;}</style><div id="sk-eb093c14-4927-4082-9037-fc3dd15dc4bb" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a75d92ee-6b4d-4ed4-8913-b842eb6887f9" type="checkbox" ><label class="sk-toggleable__label" for="a75d92ee-6b4d-4ed4-8913-b842eb6887f9">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a819d29e-1535-4468-88f8-a3aeb68cb6d0" type="checkbox" ><label class="sk-toggleable__label" for="a819d29e-1535-4468-88f8-a3aeb68cb6d0">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74742de8-553c-4db0-93fd-0c3a18d0f5d0" type="checkbox" ><label class="sk-toggleable__label" for="74742de8-553c-4db0-93fd-0c3a18d0f5d0">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e967b7e5-a2f6-439f-86a6-c9797d9842f9" type="checkbox" ><label class="sk-toggleable__label" for="e967b7e5-a2f6-439f-86a6-c9797d9842f9">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b02b1f19-ef8b-4498-8868-3a1375329e02" type="checkbox" ><label class="sk-toggleable__label" for="b02b1f19-ef8b-4498-8868-3a1375329e02">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="727c5f97-7fe1-4063-877d-d213f2627835" type="checkbox" ><label class="sk-toggleable__label" for="727c5f97-7fe1-4063-877d-d213f2627835">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfacef6e-f387-4aa7-988a-b5fd4609bd07" type="checkbox" ><label class="sk-toggleable__label" for="cfacef6e-f387-4aa7-988a-b5fd4609bd07">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="401d516e-0ee5-4112-9a52-a46028a13347" type="checkbox" ><label class="sk-toggleable__label" for="401d516e-0ee5-4112-9a52-a46028a13347">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5beaa374-89d3-4f08-b093-220dbbeacb79" type="checkbox" ><label class="sk-toggleable__label" for="5beaa374-89d3-4f08-b093-220dbbeacb79">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f {color: black;background-color: white;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f pre{padding: 0;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-toggleable {background-color: white;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-estimator:hover {background-color: #d4ebff;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-item {z-index: 1;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-parallel-item:only-child::after {width: 0;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-container {display: inline-block;position: relative;}#sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f div.sk-text-repr-fallback {display: none;}</style><div id="sk-e7fadb17-101a-49c3-bbd7-432c63f5a31f" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a66ac353-7e8c-4210-ac49-bb931cc4fd0c" type="checkbox" ><label class="sk-toggleable__label" for="a66ac353-7e8c-4210-ac49-bb931cc4fd0c">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e216ba1f-dbf0-432a-a3b4-fc9d9cc7bb6b" type="checkbox" ><label class="sk-toggleable__label" for="e216ba1f-dbf0-432a-a3b4-fc9d9cc7bb6b">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a62e182-41ad-4eca-b670-9ffc7bef8690" type="checkbox" ><label class="sk-toggleable__label" for="2a62e182-41ad-4eca-b670-9ffc7bef8690">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5de7201-36b6-48a0-81a9-b7619e901d8b" type="checkbox" ><label class="sk-toggleable__label" for="d5de7201-36b6-48a0-81a9-b7619e901d8b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="298349c1-8b10-4287-87cd-ca3ad4e93e03" type="checkbox" ><label class="sk-toggleable__label" for="298349c1-8b10-4287-87cd-ca3ad4e93e03">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d59f2ed-06d1-4cbc-a88b-b7c98702ff29" type="checkbox" ><label class="sk-toggleable__label" for="1d59f2ed-06d1-4cbc-a88b-b7c98702ff29">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48af9ddf-ee79-406f-be42-30429673b793" type="checkbox" ><label class="sk-toggleable__label" for="48af9ddf-ee79-406f-be42-30429673b793">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57edd6e8-025b-425d-be39-6ec51415dd52" type="checkbox" ><label class="sk-toggleable__label" for="57edd6e8-025b-425d-be39-6ec51415dd52">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8f0d69d-8587-4ab4-855f-f8a6ba5e2ac5" type="checkbox" ><label class="sk-toggleable__label" for="a8f0d69d-8587-4ab4-855f-f8a6ba5e2ac5">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.124 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
