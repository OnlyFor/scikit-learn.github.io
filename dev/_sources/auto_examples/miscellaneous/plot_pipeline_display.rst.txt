
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f837b9ed-b264-430c-b3c2-b107453a7994 {color: black;background-color: white;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 pre{padding: 0;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-toggleable {background-color: white;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-item {z-index: 1;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-parallel-item:only-child::after {width: 0;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f837b9ed-b264-430c-b3c2-b107453a7994 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f837b9ed-b264-430c-b3c2-b107453a7994" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7c171bd-f382-4bdb-9978-37c706048d84" type="checkbox" ><label for="d7c171bd-f382-4bdb-9978-37c706048d84" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="adb4c901-712c-4886-a755-ba674c2e2634" type="checkbox" ><label for="adb4c901-712c-4886-a755-ba674c2e2634" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c87b8dba-e8a1-4ab8-a1ef-f7ab83c8de58" type="checkbox" ><label for="c87b8dba-e8a1-4ab8-a1ef-f7ab83c8de58" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b257cb53-4029-47c6-93a1-30576cf16465 {color: black;background-color: white;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 pre{padding: 0;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-toggleable {background-color: white;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-item {z-index: 1;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-parallel-item:only-child::after {width: 0;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b257cb53-4029-47c6-93a1-30576cf16465 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b257cb53-4029-47c6-93a1-30576cf16465" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12b372e7-1d0a-4463-b722-1a005e690f4d" type="checkbox" ><label for="12b372e7-1d0a-4463-b722-1a005e690f4d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b18d3b30-a1b8-4bb5-ab29-0c7dd5f5af1b" type="checkbox" ><label for="b18d3b30-a1b8-4bb5-ab29-0c7dd5f5af1b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea6a7e62-c7ca-4645-a39a-5fae7e5bf522" type="checkbox" ><label for="ea6a7e62-c7ca-4645-a39a-5fae7e5bf522" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a58dc17-c932-4749-9791-a1d81394a50d" type="checkbox" ><label for="3a58dc17-c932-4749-9791-a1d81394a50d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b4c0611b-73ab-414b-b00b-a229b9873914 {color: black;background-color: white;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 pre{padding: 0;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-toggleable {background-color: white;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-item {z-index: 1;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-parallel-item:only-child::after {width: 0;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b4c0611b-73ab-414b-b00b-a229b9873914 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b4c0611b-73ab-414b-b00b-a229b9873914" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38e5ba9f-0b0e-45c1-98e6-dc67e95d0ae9" type="checkbox" ><label for="38e5ba9f-0b0e-45c1-98e6-dc67e95d0ae9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cef6cc07-bc86-4d2e-ba1a-7ff0e5b175cd" type="checkbox" ><label for="cef6cc07-bc86-4d2e-ba1a-7ff0e5b175cd" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad6e3f8d-1382-47de-850f-a117a005cbb0" type="checkbox" ><label for="ad6e3f8d-1382-47de-850f-a117a005cbb0" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b {color: black;background-color: white;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b pre{padding: 0;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-toggleable {background-color: white;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-estimator:hover {background-color: #d4ebff;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-item {z-index: 1;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-parallel-item:only-child::after {width: 0;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b108cbf0-6991-4be8-b391-48ae59da5b4b div.sk-text-repr-fallback {display: none;}</style><div id="sk-b108cbf0-6991-4be8-b391-48ae59da5b4b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6adc9d47-3d22-4125-bb67-afa630c071c1" type="checkbox" ><label for="6adc9d47-3d22-4125-bb67-afa630c071c1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae5804ab-8f88-40f8-9218-a1637a030505" type="checkbox" ><label for="ae5804ab-8f88-40f8-9218-a1637a030505" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ff4f86a-891d-45a8-a12d-d2e2dc825267" type="checkbox" ><label for="7ff4f86a-891d-45a8-a12d-d2e2dc825267" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3337da67-4383-4df0-aefa-529df60036dd" type="checkbox" ><label for="3337da67-4383-4df0-aefa-529df60036dd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e0757d3-abac-4c8b-8f67-61eb3a9787e1" type="checkbox" ><label for="7e0757d3-abac-4c8b-8f67-61eb3a9787e1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9a2fce5-4f36-42e0-95d4-a7027cca2340" type="checkbox" ><label for="f9a2fce5-4f36-42e0-95d4-a7027cca2340" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96e477e8-c6ee-41f3-9c6e-6b3c71ad7e58" type="checkbox" ><label for="96e477e8-c6ee-41f3-9c6e-6b3c71ad7e58" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b140b6b0-4922-4f62-9a33-c7cb183ea7e0" type="checkbox" ><label for="b140b6b0-4922-4f62-9a33-c7cb183ea7e0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63e88110-ed5a-4793-b143-ae594af74422" type="checkbox" ><label for="63e88110-ed5a-4793-b143-ae594af74422" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf {color: black;background-color: white;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf pre{padding: 0;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-toggleable {background-color: white;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-estimator:hover {background-color: #d4ebff;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-item {z-index: 1;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-parallel-item:only-child::after {width: 0;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf div.sk-text-repr-fallback {display: none;}</style><div id="sk-be2da7bd-514d-4a5e-a875-93e4e7aecedf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9d56041-87de-4168-9dbb-521c5dfb16fe" type="checkbox" ><label for="b9d56041-87de-4168-9dbb-521c5dfb16fe" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5742f59e-bcbc-41d9-b65d-0678643952c7" type="checkbox" ><label for="5742f59e-bcbc-41d9-b65d-0678643952c7" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce654df0-8e89-4d75-9a3a-3faf5d73bbaf" type="checkbox" ><label for="ce654df0-8e89-4d75-9a3a-3faf5d73bbaf" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8db9abae-b80c-44c8-a2b2-8eac28ad75dc" type="checkbox" ><label for="8db9abae-b80c-44c8-a2b2-8eac28ad75dc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80116921-5067-4ff1-bce6-42330e4237fd" type="checkbox" ><label for="80116921-5067-4ff1-bce6-42330e4237fd" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8ae1c05-d6ff-4af8-a3e2-e9a865bf0157" type="checkbox" ><label for="e8ae1c05-d6ff-4af8-a3e2-e9a865bf0157" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92892e20-4c93-4866-9cf5-85608cb9e2c0" type="checkbox" ><label for="92892e20-4c93-4866-9cf5-85608cb9e2c0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22876609-ade3-46e5-91a9-39facda74aa9" type="checkbox" ><label for="22876609-ade3-46e5-91a9-39facda74aa9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44cd93e5-1c93-401f-bed4-0c943a6a9ad9" type="checkbox" ><label for="44cd93e5-1c93-401f-bed4-0c943a6a9ad9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
