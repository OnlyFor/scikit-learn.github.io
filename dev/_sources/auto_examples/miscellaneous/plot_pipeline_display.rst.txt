
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 {color: black;background-color: white;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 pre{padding: 0;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-toggleable {background-color: white;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-item {z-index: 1;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-parallel-item:only-child::after {width: 0;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b2c71f7-1c6e-4901-b7e3-cebd34774a11" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b76301b-27e4-4973-b09d-46d76c3d5789" type="checkbox" ><label for="0b76301b-27e4-4973-b09d-46d76c3d5789" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bed78bf-8431-4637-b6b0-425e0121ffa0" type="checkbox" ><label for="5bed78bf-8431-4637-b6b0-425e0121ffa0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29622d06-6255-40d5-8733-3829ae9b5192" type="checkbox" ><label for="29622d06-6255-40d5-8733-3829ae9b5192" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-26110e1c-043f-4411-9f34-f57716e68ffb {color: black;background-color: white;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb pre{padding: 0;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-toggleable {background-color: white;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-estimator:hover {background-color: #d4ebff;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-item {z-index: 1;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-parallel-item:only-child::after {width: 0;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-26110e1c-043f-4411-9f34-f57716e68ffb div.sk-text-repr-fallback {display: none;}</style><div id="sk-26110e1c-043f-4411-9f34-f57716e68ffb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5490cc91-3192-4915-97db-8e020141e340" type="checkbox" ><label for="5490cc91-3192-4915-97db-8e020141e340" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fca9c28-8bb8-444a-832c-c320fa231422" type="checkbox" ><label for="4fca9c28-8bb8-444a-832c-c320fa231422" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6314a71f-9aa1-4d79-a5ca-b75e10bd1bad" type="checkbox" ><label for="6314a71f-9aa1-4d79-a5ca-b75e10bd1bad" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98eb2d8b-af21-44aa-9bfa-6a2e18a50150" type="checkbox" ><label for="98eb2d8b-af21-44aa-9bfa-6a2e18a50150" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f8adf41d-0106-4212-90d5-254b914954aa {color: black;background-color: white;}#sk-f8adf41d-0106-4212-90d5-254b914954aa pre{padding: 0;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-toggleable {background-color: white;}#sk-f8adf41d-0106-4212-90d5-254b914954aa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f8adf41d-0106-4212-90d5-254b914954aa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f8adf41d-0106-4212-90d5-254b914954aa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f8adf41d-0106-4212-90d5-254b914954aa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f8adf41d-0106-4212-90d5-254b914954aa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8adf41d-0106-4212-90d5-254b914954aa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-estimator:hover {background-color: #d4ebff;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-item {z-index: 1;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-parallel-item:only-child::after {width: 0;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f8adf41d-0106-4212-90d5-254b914954aa div.sk-text-repr-fallback {display: none;}</style><div id="sk-f8adf41d-0106-4212-90d5-254b914954aa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26013998-76f3-41f1-81e9-b50adce00593" type="checkbox" ><label for="26013998-76f3-41f1-81e9-b50adce00593" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7915f4a6-f060-441d-9577-c111ebcc7428" type="checkbox" ><label for="7915f4a6-f060-441d-9577-c111ebcc7428" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c366355f-1f90-4ec6-bb25-6e3411e0770a" type="checkbox" ><label for="c366355f-1f90-4ec6-bb25-6e3411e0770a" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc {color: black;background-color: white;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc pre{padding: 0;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-toggleable {background-color: white;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-estimator:hover {background-color: #d4ebff;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-item {z-index: 1;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-parallel-item:only-child::after {width: 0;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc div.sk-text-repr-fallback {display: none;}</style><div id="sk-cc21f718-f6fc-49ff-bc09-dcd1658a36bc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e7e9b95-92b3-4f69-b7c8-ee9683c6b164" type="checkbox" ><label for="5e7e9b95-92b3-4f69-b7c8-ee9683c6b164" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4ce9a35-67c5-4038-8118-e4a4ca094b45" type="checkbox" ><label for="c4ce9a35-67c5-4038-8118-e4a4ca094b45" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0af9461c-1463-4f51-9051-ce17df49b008" type="checkbox" ><label for="0af9461c-1463-4f51-9051-ce17df49b008" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60a70540-8934-4bc8-8796-8d6be0bed3c9" type="checkbox" ><label for="60a70540-8934-4bc8-8796-8d6be0bed3c9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e997ae3-76ca-4f34-a715-f3ca0212f813" type="checkbox" ><label for="6e997ae3-76ca-4f34-a715-f3ca0212f813" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cf5a201-c61f-4a52-b78b-ab70bba68312" type="checkbox" ><label for="1cf5a201-c61f-4a52-b78b-ab70bba68312" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13534b4e-c3f9-4137-be5a-edf12b9ed59a" type="checkbox" ><label for="13534b4e-c3f9-4137-be5a-edf12b9ed59a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa9961d5-3792-4e00-ba34-6a1ab85e9409" type="checkbox" ><label for="aa9961d5-3792-4e00-ba34-6a1ab85e9409" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a39ad0b3-f522-4094-be7e-b0a43dc71f93" type="checkbox" ><label for="a39ad0b3-f522-4094-be7e-b0a43dc71f93" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 {color: black;background-color: white;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 pre{padding: 0;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-toggleable {background-color: white;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-estimator:hover {background-color: #d4ebff;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-item {z-index: 1;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-parallel-item:only-child::after {width: 0;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-102a50c1-e4e0-4d82-9bda-a55d198f6316 div.sk-text-repr-fallback {display: none;}</style><div id="sk-102a50c1-e4e0-4d82-9bda-a55d198f6316" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ede3487b-fb41-400c-8532-2c1125b57e88" type="checkbox" ><label for="ede3487b-fb41-400c-8532-2c1125b57e88" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="798ad467-929a-4651-9672-fd12a8f35b54" type="checkbox" ><label for="798ad467-929a-4651-9672-fd12a8f35b54" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0017b43-d4e7-452e-9e05-54c639d937c8" type="checkbox" ><label for="f0017b43-d4e7-452e-9e05-54c639d937c8" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc1ce38c-2fb4-4f14-b2ef-496523f36ef4" type="checkbox" ><label for="cc1ce38c-2fb4-4f14-b2ef-496523f36ef4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f628ef21-bbf1-4447-b7c0-28222d08466b" type="checkbox" ><label for="f628ef21-bbf1-4447-b7c0-28222d08466b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec6b940c-4b77-47eb-935b-ea10d5723ac0" type="checkbox" ><label for="ec6b940c-4b77-47eb-935b-ea10d5723ac0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e1dd6bd-8004-408a-99ae-6631b930d6a0" type="checkbox" ><label for="0e1dd6bd-8004-408a-99ae-6631b930d6a0" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71917a78-71c5-41aa-831b-57f76c44b8a7" type="checkbox" ><label for="71917a78-71c5-41aa-831b-57f76c44b8a7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88604fdc-934f-40d0-879d-b628838a7e77" type="checkbox" ><label for="88604fdc-934f-40d0-879d-b628838a7e77" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6991f46d-d8a1-45d2-bd4d-c4094c9b7fbb" type="checkbox" ><label for="6991f46d-d8a1-45d2-bd4d-c4094c9b7fbb" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.094 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
