
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac {color: black;background-color: white;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac pre{padding: 0;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-toggleable {background-color: white;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-estimator:hover {background-color: #d4ebff;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-item {z-index: 1;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-parallel-item:only-child::after {width: 0;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-container {display: inline-block;position: relative;}#sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac div.sk-text-repr-fallback {display: none;}</style><div id="sk-d38eacc4-bdbf-4c1e-89d4-b3a6102ac7ac" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75fdc9d1-0af2-418a-869f-0bab3edadd6f" type="checkbox" ><label class="sk-toggleable__label" for="75fdc9d1-0af2-418a-869f-0bab3edadd6f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb0709da-2c66-44b4-a58b-34adeac61e74" type="checkbox" ><label class="sk-toggleable__label" for="fb0709da-2c66-44b4-a58b-34adeac61e74">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdc0d41a-ba49-4423-9c31-1dbac7ac6a3f" type="checkbox" ><label class="sk-toggleable__label" for="cdc0d41a-ba49-4423-9c31-1dbac7ac6a3f">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 {color: black;background-color: white;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 pre{padding: 0;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-toggleable {background-color: white;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-item {z-index: 1;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-parallel-item:only-child::after {width: 0;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-container {display: inline-block;position: relative;}#sk-ca591619-4bf7-472a-a5ef-aa5c55989115 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ca591619-4bf7-472a-a5ef-aa5c55989115" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="005fb379-d2d6-4c1e-9c8e-bc49642d4eeb" type="checkbox" ><label class="sk-toggleable__label" for="005fb379-d2d6-4c1e-9c8e-bc49642d4eeb">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1561fed3-8887-43b9-9b58-d4084f151baa" type="checkbox" ><label class="sk-toggleable__label" for="1561fed3-8887-43b9-9b58-d4084f151baa">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea5aba0e-0fef-4f10-86ee-643759f39402" type="checkbox" ><label class="sk-toggleable__label" for="ea5aba0e-0fef-4f10-86ee-643759f39402">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a2a9b6e-5569-44cf-9dc2-3370765bb2bc" type="checkbox" ><label class="sk-toggleable__label" for="6a2a9b6e-5569-44cf-9dc2-3370765bb2bc">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd {color: black;background-color: white;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd pre{padding: 0;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-toggleable {background-color: white;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-estimator:hover {background-color: #d4ebff;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-item {z-index: 1;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-parallel-item:only-child::after {width: 0;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-container {display: inline-block;position: relative;}#sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd div.sk-text-repr-fallback {display: none;}</style><div id="sk-35f0524a-45c5-4a95-9daa-0e468c85ccfd" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb90c80c-99cd-432b-8f28-1dfa24e0a216" type="checkbox" ><label class="sk-toggleable__label" for="eb90c80c-99cd-432b-8f28-1dfa24e0a216">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b4c6e82-b41d-4c6e-a93d-eec9f4a098d9" type="checkbox" ><label class="sk-toggleable__label" for="8b4c6e82-b41d-4c6e-a93d-eec9f4a098d9">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73048363-168f-4b1b-b457-761ce7148de7" type="checkbox" ><label class="sk-toggleable__label" for="73048363-168f-4b1b-b457-761ce7148de7">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f749432d-cf49-4afd-ac28-50837927cf87 {color: black;background-color: white;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 pre{padding: 0;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-toggleable {background-color: white;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-item {z-index: 1;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-parallel-item:only-child::after {width: 0;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-container {display: inline-block;position: relative;}#sk-f749432d-cf49-4afd-ac28-50837927cf87 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f749432d-cf49-4afd-ac28-50837927cf87" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5235ddf-0e0d-485a-964c-1997c8fe948f" type="checkbox" ><label class="sk-toggleable__label" for="f5235ddf-0e0d-485a-964c-1997c8fe948f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ce81e8d-2140-43f2-931b-6b7514de8bd6" type="checkbox" ><label class="sk-toggleable__label" for="8ce81e8d-2140-43f2-931b-6b7514de8bd6">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7ed34d8-3c2a-40fe-af21-1afe9f56e3f7" type="checkbox" ><label class="sk-toggleable__label" for="d7ed34d8-3c2a-40fe-af21-1afe9f56e3f7">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2458c6e-e83c-4fb2-9de3-4a89243320cd" type="checkbox" ><label class="sk-toggleable__label" for="e2458c6e-e83c-4fb2-9de3-4a89243320cd">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01fc363c-2b05-44e4-8dab-c7682ad20f9d" type="checkbox" ><label class="sk-toggleable__label" for="01fc363c-2b05-44e4-8dab-c7682ad20f9d">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16d684c8-484f-416b-befd-5c6d1f99c12b" type="checkbox" ><label class="sk-toggleable__label" for="16d684c8-484f-416b-befd-5c6d1f99c12b">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e35eaeb6-f18f-4bdd-b2c4-e9b2f43c213e" type="checkbox" ><label class="sk-toggleable__label" for="e35eaeb6-f18f-4bdd-b2c4-e9b2f43c213e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75462ca6-89b9-4d64-991d-a43e8204bd82" type="checkbox" ><label class="sk-toggleable__label" for="75462ca6-89b9-4d64-991d-a43e8204bd82">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e3c409b-7781-4cec-af88-d57f5c6495f6" type="checkbox" ><label class="sk-toggleable__label" for="3e3c409b-7781-4cec-af88-d57f5c6495f6">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e73df35f-5b2b-4446-9669-1b339834893e {color: black;background-color: white;}#sk-e73df35f-5b2b-4446-9669-1b339834893e pre{padding: 0;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-toggleable {background-color: white;}#sk-e73df35f-5b2b-4446-9669-1b339834893e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e73df35f-5b2b-4446-9669-1b339834893e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e73df35f-5b2b-4446-9669-1b339834893e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-estimator:hover {background-color: #d4ebff;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-item {z-index: 1;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-parallel-item:only-child::after {width: 0;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-container {display: inline-block;position: relative;}#sk-e73df35f-5b2b-4446-9669-1b339834893e div.sk-text-repr-fallback {display: none;}</style><div id="sk-e73df35f-5b2b-4446-9669-1b339834893e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ead38b23-7956-48e0-83e9-279e6d9edd24" type="checkbox" ><label class="sk-toggleable__label" for="ead38b23-7956-48e0-83e9-279e6d9edd24">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b6eea36-15f0-4542-913e-57acbcac53b6" type="checkbox" ><label class="sk-toggleable__label" for="9b6eea36-15f0-4542-913e-57acbcac53b6">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bfae4f5-3aca-4d32-a834-d951031682f0" type="checkbox" ><label class="sk-toggleable__label" for="6bfae4f5-3aca-4d32-a834-d951031682f0">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63af7020-3057-48b5-9a43-8152552365e9" type="checkbox" ><label class="sk-toggleable__label" for="63af7020-3057-48b5-9a43-8152552365e9">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb45fa5a-bc78-4068-a6a5-628f5a803873" type="checkbox" ><label class="sk-toggleable__label" for="cb45fa5a-bc78-4068-a6a5-628f5a803873">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3af41569-d4dd-4dd3-a629-902e0c6aaf54" type="checkbox" ><label class="sk-toggleable__label" for="3af41569-d4dd-4dd3-a629-902e0c6aaf54">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="148e5956-db91-4f34-ab55-62457d6765d8" type="checkbox" ><label class="sk-toggleable__label" for="148e5956-db91-4f34-ab55-62457d6765d8">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c666dd62-57eb-477f-8573-09257e9d8fc2" type="checkbox" ><label class="sk-toggleable__label" for="c666dd62-57eb-477f-8573-09257e9d8fc2">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c45b670-fa21-42f3-afa6-8b096a551c49" type="checkbox" ><label class="sk-toggleable__label" for="8c45b670-fa21-42f3-afa6-8b096a551c49">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.135 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
