
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b {color: black;background-color: white;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b pre{padding: 0;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-toggleable {background-color: white;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-estimator:hover {background-color: #d4ebff;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-item {z-index: 1;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-parallel-item:only-child::after {width: 0;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-97d4a4fc-621f-41ba-8f2f-4484feab456b div.sk-text-repr-fallback {display: none;}</style><div id="sk-97d4a4fc-621f-41ba-8f2f-4484feab456b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ef2b642-b3ec-46a8-9e24-52c8b56d0b6f" type="checkbox" ><label for="2ef2b642-b3ec-46a8-9e24-52c8b56d0b6f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d04808a5-7006-4619-af52-64ba027ea8a1" type="checkbox" ><label for="d04808a5-7006-4619-af52-64ba027ea8a1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7d88e6e-1971-4e3b-ad46-72de38d87674" type="checkbox" ><label for="b7d88e6e-1971-4e3b-ad46-72de38d87674" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-91426f45-afe8-44e1-89b4-665f590f844b {color: black;background-color: white;}#sk-91426f45-afe8-44e1-89b4-665f590f844b pre{padding: 0;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-toggleable {background-color: white;}#sk-91426f45-afe8-44e1-89b4-665f590f844b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-91426f45-afe8-44e1-89b4-665f590f844b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-91426f45-afe8-44e1-89b4-665f590f844b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-91426f45-afe8-44e1-89b4-665f590f844b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-91426f45-afe8-44e1-89b4-665f590f844b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91426f45-afe8-44e1-89b4-665f590f844b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-estimator:hover {background-color: #d4ebff;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-item {z-index: 1;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-parallel-item:only-child::after {width: 0;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-91426f45-afe8-44e1-89b4-665f590f844b div.sk-text-repr-fallback {display: none;}</style><div id="sk-91426f45-afe8-44e1-89b4-665f590f844b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="755efbc9-3a19-450f-9f8d-4ad2d988e59b" type="checkbox" ><label for="755efbc9-3a19-450f-9f8d-4ad2d988e59b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14af58ca-0a8d-457b-8456-50c17d45de84" type="checkbox" ><label for="14af58ca-0a8d-457b-8456-50c17d45de84" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73150e58-347d-4751-b1a3-70a3799f4628" type="checkbox" ><label for="73150e58-347d-4751-b1a3-70a3799f4628" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63865a20-61bd-47e0-93b6-2e66be9c2f44" type="checkbox" ><label for="63865a20-61bd-47e0-93b6-2e66be9c2f44" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-99377351-4b07-4ce9-beda-0095c90f0304 {color: black;background-color: white;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 pre{padding: 0;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-toggleable {background-color: white;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-estimator:hover {background-color: #d4ebff;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-item {z-index: 1;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-parallel-item:only-child::after {width: 0;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-99377351-4b07-4ce9-beda-0095c90f0304 div.sk-text-repr-fallback {display: none;}</style><div id="sk-99377351-4b07-4ce9-beda-0095c90f0304" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71985c83-6650-4e52-88c7-80a1aa21f1e7" type="checkbox" ><label for="71985c83-6650-4e52-88c7-80a1aa21f1e7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a2bd199-c355-426f-9dc0-eb128dd30696" type="checkbox" ><label for="7a2bd199-c355-426f-9dc0-eb128dd30696" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f128b0e4-1da9-40e2-b5c5-c33681ff8ad1" type="checkbox" ><label for="f128b0e4-1da9-40e2-b5c5-c33681ff8ad1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-085d9b60-169b-48bc-84e9-930345ec43ef {color: black;background-color: white;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef pre{padding: 0;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-toggleable {background-color: white;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-estimator:hover {background-color: #d4ebff;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-item {z-index: 1;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-parallel-item:only-child::after {width: 0;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-085d9b60-169b-48bc-84e9-930345ec43ef div.sk-text-repr-fallback {display: none;}</style><div id="sk-085d9b60-169b-48bc-84e9-930345ec43ef" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c23cfa54-cc68-43cf-aa4f-ead9ceecaaa8" type="checkbox" ><label for="c23cfa54-cc68-43cf-aa4f-ead9ceecaaa8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a66660b6-f371-404c-9a2c-9f747c57ee1d" type="checkbox" ><label for="a66660b6-f371-404c-9a2c-9f747c57ee1d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c88be53a-9f04-4e4f-8b45-066fc3aeb8f9" type="checkbox" ><label for="c88be53a-9f04-4e4f-8b45-066fc3aeb8f9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b654aee-fcdf-49dd-aaf1-dba9af931a9c" type="checkbox" ><label for="1b654aee-fcdf-49dd-aaf1-dba9af931a9c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf123590-1a65-416d-8dec-8b226bc7abf0" type="checkbox" ><label for="bf123590-1a65-416d-8dec-8b226bc7abf0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ccbd550-0eb3-4852-9620-75752d830e8d" type="checkbox" ><label for="3ccbd550-0eb3-4852-9620-75752d830e8d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89028c5b-ce4d-42a4-b0dc-cb3d2966af02" type="checkbox" ><label for="89028c5b-ce4d-42a4-b0dc-cb3d2966af02" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4669b032-eff4-4923-8d3e-4e03e8a04dc5" type="checkbox" ><label for="4669b032-eff4-4923-8d3e-4e03e8a04dc5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c696f179-3a40-4e0d-a32f-6875eb60e05c" type="checkbox" ><label for="c696f179-3a40-4e0d-a32f-6875eb60e05c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e {color: black;background-color: white;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e pre{padding: 0;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-toggleable {background-color: white;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-estimator:hover {background-color: #d4ebff;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-item {z-index: 1;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-parallel-item:only-child::after {width: 0;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ea38c7fb-3d2c-412e-bb35-24a60890452e div.sk-text-repr-fallback {display: none;}</style><div id="sk-ea38c7fb-3d2c-412e-bb35-24a60890452e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7847e43-bea8-48f1-b4cd-2efd98c67e67" type="checkbox" ><label for="b7847e43-bea8-48f1-b4cd-2efd98c67e67" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96478443-3675-41b2-811a-6e26db93cb7c" type="checkbox" ><label for="96478443-3675-41b2-811a-6e26db93cb7c" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b482cf36-c030-4295-aab8-85c8371ef3a5" type="checkbox" ><label for="b482cf36-c030-4295-aab8-85c8371ef3a5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="243b9872-dd2f-4ef1-b802-62349f9d8ed2" type="checkbox" ><label for="243b9872-dd2f-4ef1-b802-62349f9d8ed2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7646b607-ef93-4133-9ab7-29d51d544115" type="checkbox" ><label for="7646b607-ef93-4133-9ab7-29d51d544115" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f5598d4-9ce1-4430-8c07-0fb1b8672bbd" type="checkbox" ><label for="2f5598d4-9ce1-4430-8c07-0fb1b8672bbd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d40b1c1-bb7f-4068-902d-42ba43e9b5f1" type="checkbox" ><label for="4d40b1c1-bb7f-4068-902d-42ba43e9b5f1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96a8987d-c6fe-4008-af4a-2dd28c11ca60" type="checkbox" ><label for="96a8987d-c6fe-4008-af4a-2dd28c11ca60" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6122f921-95b7-42ec-ad10-6b68b9507452" type="checkbox" ><label for="6122f921-95b7-42ec-ad10-6b68b9507452" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.079 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
