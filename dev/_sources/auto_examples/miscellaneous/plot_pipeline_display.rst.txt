
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-81d05e4a-6eb9-4057-b4b6-694276380369 {color: black;background-color: white;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 pre{padding: 0;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-toggleable {background-color: white;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-estimator:hover {background-color: #d4ebff;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-item {z-index: 1;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-parallel-item:only-child::after {width: 0;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-81d05e4a-6eb9-4057-b4b6-694276380369 div.sk-text-repr-fallback {display: none;}</style><div id="sk-81d05e4a-6eb9-4057-b4b6-694276380369" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cd6e0f2-b745-44bc-8911-c2573ae543f5" type="checkbox" ><label for="5cd6e0f2-b745-44bc-8911-c2573ae543f5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f326321-19b5-426f-9716-7b1842d9165a" type="checkbox" ><label for="6f326321-19b5-426f-9716-7b1842d9165a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e577ba97-68a8-4cfe-9884-f0edf797b02f" type="checkbox" ><label for="e577ba97-68a8-4cfe-9884-f0edf797b02f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-514fb930-2737-48de-a991-9c6c6e46587d {color: black;background-color: white;}#sk-514fb930-2737-48de-a991-9c6c6e46587d pre{padding: 0;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-toggleable {background-color: white;}#sk-514fb930-2737-48de-a991-9c6c6e46587d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-514fb930-2737-48de-a991-9c6c6e46587d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-514fb930-2737-48de-a991-9c6c6e46587d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-514fb930-2737-48de-a991-9c6c6e46587d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-514fb930-2737-48de-a991-9c6c6e46587d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-514fb930-2737-48de-a991-9c6c6e46587d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-estimator:hover {background-color: #d4ebff;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-item {z-index: 1;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-parallel-item:only-child::after {width: 0;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-514fb930-2737-48de-a991-9c6c6e46587d div.sk-text-repr-fallback {display: none;}</style><div id="sk-514fb930-2737-48de-a991-9c6c6e46587d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c916cb7c-0b38-4cde-a772-99c406c9e50f" type="checkbox" ><label for="c916cb7c-0b38-4cde-a772-99c406c9e50f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="072e946d-d807-4d76-9172-da89a9097e3c" type="checkbox" ><label for="072e946d-d807-4d76-9172-da89a9097e3c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36c20dc6-81d7-48a4-a5f5-bf57cef5ffa9" type="checkbox" ><label for="36c20dc6-81d7-48a4-a5f5-bf57cef5ffa9" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b2a911a-5fa1-4646-b633-60a292bf7a2a" type="checkbox" ><label for="9b2a911a-5fa1-4646-b633-60a292bf7a2a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 {color: black;background-color: white;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 pre{padding: 0;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-toggleable {background-color: white;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-item {z-index: 1;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-parallel-item:only-child::after {width: 0;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dfebd991-b22a-4a06-8f05-e1ceffdec931 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dfebd991-b22a-4a06-8f05-e1ceffdec931" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d148146-9d7a-4d00-adb9-aa5f92cf89cb" type="checkbox" ><label for="2d148146-9d7a-4d00-adb9-aa5f92cf89cb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6a10c97-034a-47a2-a8ad-f573c4271279" type="checkbox" ><label for="b6a10c97-034a-47a2-a8ad-f573c4271279" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b554778-0520-4bc6-8557-5507749425a1" type="checkbox" ><label for="6b554778-0520-4bc6-8557-5507749425a1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 {color: black;background-color: white;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 pre{padding: 0;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-toggleable {background-color: white;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-estimator:hover {background-color: #d4ebff;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-item {z-index: 1;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-parallel-item:only-child::after {width: 0;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-17f313bb-76d0-4c60-83e9-03921d41fc98 div.sk-text-repr-fallback {display: none;}</style><div id="sk-17f313bb-76d0-4c60-83e9-03921d41fc98" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e2773db-28de-4b52-bafe-02fbe7e60cac" type="checkbox" ><label for="2e2773db-28de-4b52-bafe-02fbe7e60cac" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e211c665-4725-42a0-ac28-45a2a2c04d50" type="checkbox" ><label for="e211c665-4725-42a0-ac28-45a2a2c04d50" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d04b1936-15c0-497d-ba2e-b660180783ce" type="checkbox" ><label for="d04b1936-15c0-497d-ba2e-b660180783ce" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47bb424d-592e-47c0-b75b-745476e5f587" type="checkbox" ><label for="47bb424d-592e-47c0-b75b-745476e5f587" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7bfb0c3-31dd-4429-8d64-08005da9042c" type="checkbox" ><label for="a7bfb0c3-31dd-4429-8d64-08005da9042c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fd94e2f-e5aa-4bad-a2af-bff5c95a85fa" type="checkbox" ><label for="3fd94e2f-e5aa-4bad-a2af-bff5c95a85fa" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9d96e27-f25f-4b02-906e-c0c7da410f2a" type="checkbox" ><label for="f9d96e27-f25f-4b02-906e-c0c7da410f2a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f43f9d1f-6d89-4b2e-beff-7207ff22d631" type="checkbox" ><label for="f43f9d1f-6d89-4b2e-beff-7207ff22d631" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09f41b5d-3e73-4592-8628-7e07f1636cde" type="checkbox" ><label for="09f41b5d-3e73-4592-8628-7e07f1636cde" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf {color: black;background-color: white;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf pre{padding: 0;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-toggleable {background-color: white;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-estimator:hover {background-color: #d4ebff;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-item {z-index: 1;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-parallel-item:only-child::after {width: 0;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf div.sk-text-repr-fallback {display: none;}</style><div id="sk-af5c1df2-27e2-427c-8173-34fea0a8cfdf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d93f7951-a7fd-4f9d-b3b5-770472c1587e" type="checkbox" ><label for="d93f7951-a7fd-4f9d-b3b5-770472c1587e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="809c3f32-8043-41f1-85f7-6db50954f9d5" type="checkbox" ><label for="809c3f32-8043-41f1-85f7-6db50954f9d5" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0c4ce33-0471-444c-9625-bc42841f446f" type="checkbox" ><label for="a0c4ce33-0471-444c-9625-bc42841f446f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="882d2b8e-dfbc-4fa9-b408-c27491a56a3d" type="checkbox" ><label for="882d2b8e-dfbc-4fa9-b408-c27491a56a3d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29d3cb6f-088f-402e-a7a5-6add0911a0db" type="checkbox" ><label for="29d3cb6f-088f-402e-a7a5-6add0911a0db" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a26cf99-3b37-466f-86ca-61f465484903" type="checkbox" ><label for="0a26cf99-3b37-466f-86ca-61f465484903" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f03487cd-b9d5-4720-9b4b-47fce5883127" type="checkbox" ><label for="f03487cd-b9d5-4720-9b4b-47fce5883127" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cd284e1-4eef-4e1f-ba88-fdc9f93ca656" type="checkbox" ><label for="8cd284e1-4eef-4e1f-ba88-fdc9f93ca656" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba639921-e05e-459b-9636-d8b5e1e05e24" type="checkbox" ><label for="ba639921-e05e-459b-9636-d8b5e1e05e24" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
