
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1086aecc-32c5-47ed-a98c-843b252f5917 {color: black;background-color: white;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 pre{padding: 0;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-toggleable {background-color: white;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-item {z-index: 1;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-parallel-item:only-child::after {width: 0;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-container {display: inline-block;position: relative;}#sk-1086aecc-32c5-47ed-a98c-843b252f5917 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1086aecc-32c5-47ed-a98c-843b252f5917" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3795e5af-9040-4002-9ee4-b892b6f619ff" type="checkbox" ><label class="sk-toggleable__label" for="3795e5af-9040-4002-9ee4-b892b6f619ff">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2c506d9-6e03-41ad-a36e-b046c0512ba9" type="checkbox" ><label class="sk-toggleable__label" for="e2c506d9-6e03-41ad-a36e-b046c0512ba9">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="216e69e2-a8a2-4896-89d2-08d7594b44d8" type="checkbox" ><label class="sk-toggleable__label" for="216e69e2-a8a2-4896-89d2-08d7594b44d8">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e48fc302-fa07-4519-b289-afb2b34db157 {color: black;background-color: white;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 pre{padding: 0;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-toggleable {background-color: white;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-item {z-index: 1;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-parallel-item:only-child::after {width: 0;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-container {display: inline-block;position: relative;}#sk-e48fc302-fa07-4519-b289-afb2b34db157 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e48fc302-fa07-4519-b289-afb2b34db157" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a95575f9-fe21-42f0-aa66-2c122c0a51bb" type="checkbox" ><label class="sk-toggleable__label" for="a95575f9-fe21-42f0-aa66-2c122c0a51bb">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1863c982-8f21-45c8-a454-d70b61f1cab5" type="checkbox" ><label class="sk-toggleable__label" for="1863c982-8f21-45c8-a454-d70b61f1cab5">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e8c3979-1ca7-436d-9761-d6da099f66e1" type="checkbox" ><label class="sk-toggleable__label" for="0e8c3979-1ca7-436d-9761-d6da099f66e1">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6cd3200-d487-4930-b11d-02dc0b5d4353" type="checkbox" ><label class="sk-toggleable__label" for="d6cd3200-d487-4930-b11d-02dc0b5d4353">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 {color: black;background-color: white;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 pre{padding: 0;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-toggleable {background-color: white;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-item {z-index: 1;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-parallel-item:only-child::after {width: 0;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-container {display: inline-block;position: relative;}#sk-51726eb9-63a5-4478-a041-aee0d63e60d5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-51726eb9-63a5-4478-a041-aee0d63e60d5" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f122e8b6-bf9c-4661-8f76-55e3ae5ffcff" type="checkbox" ><label class="sk-toggleable__label" for="f122e8b6-bf9c-4661-8f76-55e3ae5ffcff">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65bd9c7c-508d-4cc1-a542-a1b9163b8af9" type="checkbox" ><label class="sk-toggleable__label" for="65bd9c7c-508d-4cc1-a542-a1b9163b8af9">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d39dbb43-a2e6-41b6-b6b3-31668a9f8b15" type="checkbox" ><label class="sk-toggleable__label" for="d39dbb43-a2e6-41b6-b6b3-31668a9f8b15">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-410e7bbc-67af-41cd-9a44-d15134630caf {color: black;background-color: white;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf pre{padding: 0;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-toggleable {background-color: white;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-estimator:hover {background-color: #d4ebff;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-item {z-index: 1;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-parallel-item:only-child::after {width: 0;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-container {display: inline-block;position: relative;}#sk-410e7bbc-67af-41cd-9a44-d15134630caf div.sk-text-repr-fallback {display: none;}</style><div id="sk-410e7bbc-67af-41cd-9a44-d15134630caf" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="961d6f21-68d9-4161-bb23-c33600d102d8" type="checkbox" ><label class="sk-toggleable__label" for="961d6f21-68d9-4161-bb23-c33600d102d8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6ab8901-6574-4e86-9ece-566dba5a66eb" type="checkbox" ><label class="sk-toggleable__label" for="e6ab8901-6574-4e86-9ece-566dba5a66eb">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24c425a5-fc9d-40c3-aac3-2a7c6308279c" type="checkbox" ><label class="sk-toggleable__label" for="24c425a5-fc9d-40c3-aac3-2a7c6308279c">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ac2c265-74cb-4cdb-8fc9-caa40d1c389d" type="checkbox" ><label class="sk-toggleable__label" for="7ac2c265-74cb-4cdb-8fc9-caa40d1c389d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af227fa2-cab9-4057-84d5-e1bc4f37777b" type="checkbox" ><label class="sk-toggleable__label" for="af227fa2-cab9-4057-84d5-e1bc4f37777b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34500064-06b2-498c-8ec5-919cb60d2ce5" type="checkbox" ><label class="sk-toggleable__label" for="34500064-06b2-498c-8ec5-919cb60d2ce5">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="119acae9-2462-4260-8848-24b9ad6951c2" type="checkbox" ><label class="sk-toggleable__label" for="119acae9-2462-4260-8848-24b9ad6951c2">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d83df36d-a910-455c-b7cf-5fcf906957eb" type="checkbox" ><label class="sk-toggleable__label" for="d83df36d-a910-455c-b7cf-5fcf906957eb">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4435bcf-beef-43cf-a662-e7d3d29e163c" type="checkbox" ><label class="sk-toggleable__label" for="d4435bcf-beef-43cf-a662-e7d3d29e163c">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b686f637-eb88-4166-8a7e-908537cd77bc {color: black;background-color: white;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc pre{padding: 0;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-toggleable {background-color: white;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-estimator:hover {background-color: #d4ebff;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-item {z-index: 1;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-parallel-item:only-child::after {width: 0;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-container {display: inline-block;position: relative;}#sk-b686f637-eb88-4166-8a7e-908537cd77bc div.sk-text-repr-fallback {display: none;}</style><div id="sk-b686f637-eb88-4166-8a7e-908537cd77bc" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c393ffa-e131-460c-aa6a-917055c8d1ef" type="checkbox" ><label class="sk-toggleable__label" for="1c393ffa-e131-460c-aa6a-917055c8d1ef">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0256fe72-de2a-41f9-bf87-9d7b592631ee" type="checkbox" ><label class="sk-toggleable__label" for="0256fe72-de2a-41f9-bf87-9d7b592631ee">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e415f370-ee00-44dd-9497-33a553c0cdb9" type="checkbox" ><label class="sk-toggleable__label" for="e415f370-ee00-44dd-9497-33a553c0cdb9">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd6b480b-46b9-4fc7-ae7f-d3f34b3149d9" type="checkbox" ><label class="sk-toggleable__label" for="fd6b480b-46b9-4fc7-ae7f-d3f34b3149d9">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2624764-7b2e-4da2-aa76-688da58de243" type="checkbox" ><label class="sk-toggleable__label" for="b2624764-7b2e-4da2-aa76-688da58de243">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14975c0a-6ffb-43d0-bb13-210ba8e58a05" type="checkbox" ><label class="sk-toggleable__label" for="14975c0a-6ffb-43d0-bb13-210ba8e58a05">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d7200ab-8a07-447c-8077-ebbe0357a60a" type="checkbox" ><label class="sk-toggleable__label" for="0d7200ab-8a07-447c-8077-ebbe0357a60a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38b93c04-fb59-41f9-90c0-d7245f0da318" type="checkbox" ><label class="sk-toggleable__label" for="38b93c04-fb59-41f9-90c0-d7245f0da318">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aef15e53-7ad1-46d3-8266-5ce8b77fb54e" type="checkbox" ><label class="sk-toggleable__label" for="aef15e53-7ad1-46d3-8266-5ce8b77fb54e">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
