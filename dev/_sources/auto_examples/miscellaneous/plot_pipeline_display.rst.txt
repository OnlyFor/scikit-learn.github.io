
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc {color: black;background-color: white;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc pre{padding: 0;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-toggleable {background-color: white;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-estimator:hover {background-color: #d4ebff;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-item {z-index: 1;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-parallel-item:only-child::after {width: 0;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc div.sk-text-repr-fallback {display: none;}</style><div id="sk-8040beb2-72d7-4ab9-b8b2-72a5b97461dc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9e028dc-7c63-488c-97c4-49ea3946d238" type="checkbox" ><label for="f9e028dc-7c63-488c-97c4-49ea3946d238" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fd2d24c-c8c9-4d2b-b6f8-1c011f036ff6" type="checkbox" ><label for="9fd2d24c-c8c9-4d2b-b6f8-1c011f036ff6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfdae05e-eea6-4ecd-9c72-69e677372fe9" type="checkbox" ><label for="cfdae05e-eea6-4ecd-9c72-69e677372fe9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-77a199db-6173-4269-ba81-7d12fae40cbb {color: black;background-color: white;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb pre{padding: 0;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-toggleable {background-color: white;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-estimator:hover {background-color: #d4ebff;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-item {z-index: 1;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-parallel-item:only-child::after {width: 0;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-77a199db-6173-4269-ba81-7d12fae40cbb div.sk-text-repr-fallback {display: none;}</style><div id="sk-77a199db-6173-4269-ba81-7d12fae40cbb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c421990-9b59-4db0-a26f-d93ab7a0d105" type="checkbox" ><label for="0c421990-9b59-4db0-a26f-d93ab7a0d105" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c75a77cf-746c-4688-a1ea-ec3bb0af197c" type="checkbox" ><label for="c75a77cf-746c-4688-a1ea-ec3bb0af197c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="644a44d3-e170-4df2-a217-1957554d6885" type="checkbox" ><label for="644a44d3-e170-4df2-a217-1957554d6885" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0afd47db-984b-465b-a53b-3fd7479187c3" type="checkbox" ><label for="0afd47db-984b-465b-a53b-3fd7479187c3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd {color: black;background-color: white;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd pre{padding: 0;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-toggleable {background-color: white;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-estimator:hover {background-color: #d4ebff;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-item {z-index: 1;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-parallel-item:only-child::after {width: 0;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd div.sk-text-repr-fallback {display: none;}</style><div id="sk-bb1f7a13-48c4-400d-a520-4b49d189c8fd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8c70dbc-9621-43fc-9c2a-82bf917e9187" type="checkbox" ><label for="f8c70dbc-9621-43fc-9c2a-82bf917e9187" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1647bf3-7d71-4dd0-ac20-c01f0cca556e" type="checkbox" ><label for="b1647bf3-7d71-4dd0-ac20-c01f0cca556e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="002f974b-c879-4eb7-bfdf-21d754c284d7" type="checkbox" ><label for="002f974b-c879-4eb7-bfdf-21d754c284d7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1c109495-4c21-49f1-8e49-f02b4065326d {color: black;background-color: white;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d pre{padding: 0;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-toggleable {background-color: white;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-estimator:hover {background-color: #d4ebff;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-item {z-index: 1;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-parallel-item:only-child::after {width: 0;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1c109495-4c21-49f1-8e49-f02b4065326d div.sk-text-repr-fallback {display: none;}</style><div id="sk-1c109495-4c21-49f1-8e49-f02b4065326d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1c8ddb0-a811-4161-9f58-fb7730411652" type="checkbox" ><label for="f1c8ddb0-a811-4161-9f58-fb7730411652" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99e41f1d-544a-44a1-8285-07571a9c66f0" type="checkbox" ><label for="99e41f1d-544a-44a1-8285-07571a9c66f0" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ea3a600-b523-47a1-aba0-c3c863072448" type="checkbox" ><label for="6ea3a600-b523-47a1-aba0-c3c863072448" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21f06758-7f3c-4665-91f0-98a174ee3ca7" type="checkbox" ><label for="21f06758-7f3c-4665-91f0-98a174ee3ca7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a122fd53-addf-4803-9af7-a1a9c5cc51b9" type="checkbox" ><label for="a122fd53-addf-4803-9af7-a1a9c5cc51b9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb2295f6-422a-4d3b-9972-57625a8d3435" type="checkbox" ><label for="cb2295f6-422a-4d3b-9972-57625a8d3435" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="345bf83e-fcf4-42ef-8459-889b9955afd2" type="checkbox" ><label for="345bf83e-fcf4-42ef-8459-889b9955afd2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a8b9ee8-548b-41b6-bfcf-15b78d63f0f1" type="checkbox" ><label for="0a8b9ee8-548b-41b6-bfcf-15b78d63f0f1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f235a976-8c46-4031-8ceb-19598c0cada6" type="checkbox" ><label for="f235a976-8c46-4031-8ceb-19598c0cada6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2165c998-daf4-48e1-933b-68d21f241e3d {color: black;background-color: white;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d pre{padding: 0;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-toggleable {background-color: white;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-estimator:hover {background-color: #d4ebff;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-item {z-index: 1;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-parallel-item:only-child::after {width: 0;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2165c998-daf4-48e1-933b-68d21f241e3d div.sk-text-repr-fallback {display: none;}</style><div id="sk-2165c998-daf4-48e1-933b-68d21f241e3d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3ab87bd-7e5d-4aa0-b4d0-fc1deee440bf" type="checkbox" ><label for="b3ab87bd-7e5d-4aa0-b4d0-fc1deee440bf" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a36a0939-1fe0-41a1-9a0d-606f0bc49508" type="checkbox" ><label for="a36a0939-1fe0-41a1-9a0d-606f0bc49508" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="604a401d-4c43-4388-bf9a-a7d6dae19198" type="checkbox" ><label for="604a401d-4c43-4388-bf9a-a7d6dae19198" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2df01023-2acf-4935-a5b1-faaad089956b" type="checkbox" ><label for="2df01023-2acf-4935-a5b1-faaad089956b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="999a100d-b65e-4a2a-934b-0b421d88c809" type="checkbox" ><label for="999a100d-b65e-4a2a-934b-0b421d88c809" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22fe2147-7831-4218-8920-7929522ca3c7" type="checkbox" ><label for="22fe2147-7831-4218-8920-7929522ca3c7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc664326-c93a-47c2-a0f1-f3720ada913b" type="checkbox" ><label for="bc664326-c93a-47c2-a0f1-f3720ada913b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ea1a4d5-6201-471a-8fe8-c4c277d76f15" type="checkbox" ><label for="7ea1a4d5-6201-471a-8fe8-c4c277d76f15" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="febae155-1790-4ab0-bea4-324dd74312af" type="checkbox" ><label for="febae155-1790-4ab0-bea4-324dd74312af" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.082 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
