
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 {color: black;background-color: white;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 pre{padding: 0;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-toggleable {background-color: white;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-item {z-index: 1;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-parallel-item:only-child::after {width: 0;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f826ae0d-206a-4d71-8faa-eaa24f989f25 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f826ae0d-206a-4d71-8faa-eaa24f989f25" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a14b2a39-b113-4951-a67f-5021e6620439" type="checkbox" ><label for="a14b2a39-b113-4951-a67f-5021e6620439" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d259da2-8074-43ec-9a01-df76afc644e7" type="checkbox" ><label for="6d259da2-8074-43ec-9a01-df76afc644e7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21b5c54b-246b-4b54-bc46-dbfbfdb3c755" type="checkbox" ><label for="21b5c54b-246b-4b54-bc46-dbfbfdb3c755" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-59f42f93-486a-411a-9e99-db29631bfa75 {color: black;background-color: white;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 pre{padding: 0;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-toggleable {background-color: white;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-estimator:hover {background-color: #d4ebff;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-item {z-index: 1;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-parallel-item:only-child::after {width: 0;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-59f42f93-486a-411a-9e99-db29631bfa75 div.sk-text-repr-fallback {display: none;}</style><div id="sk-59f42f93-486a-411a-9e99-db29631bfa75" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d51d9795-3aa0-4622-ac23-987485a1426e" type="checkbox" ><label for="d51d9795-3aa0-4622-ac23-987485a1426e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cbe2c9b-1173-45c7-8d9c-376506011fbe" type="checkbox" ><label for="4cbe2c9b-1173-45c7-8d9c-376506011fbe" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d68f9f2-19e5-4189-9022-eb57dbf9ecf3" type="checkbox" ><label for="9d68f9f2-19e5-4189-9022-eb57dbf9ecf3" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24f652ce-156c-4dab-a434-456bf5a25766" type="checkbox" ><label for="24f652ce-156c-4dab-a434-456bf5a25766" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 {color: black;background-color: white;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 pre{padding: 0;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-toggleable {background-color: white;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-item {z-index: 1;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-parallel-item:only-child::after {width: 0;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f9c9ff90-7a42-4a8a-9d3b-8a5980a17984" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f496648e-a3ed-43d2-8637-67cefa1ea44b" type="checkbox" ><label for="f496648e-a3ed-43d2-8637-67cefa1ea44b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b67793a3-2367-46e7-8bba-11847d83e447" type="checkbox" ><label for="b67793a3-2367-46e7-8bba-11847d83e447" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6546571d-fd2b-40d7-bf79-35117ee173ee" type="checkbox" ><label for="6546571d-fd2b-40d7-bf79-35117ee173ee" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 {color: black;background-color: white;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 pre{padding: 0;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-toggleable {background-color: white;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-estimator:hover {background-color: #d4ebff;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-item {z-index: 1;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-parallel-item:only-child::after {width: 0;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629 div.sk-text-repr-fallback {display: none;}</style><div id="sk-64a8fe78-c0cd-48b3-a5c8-7521c2d79629" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa5ef346-ee12-4735-94d7-d4db46869434" type="checkbox" ><label for="aa5ef346-ee12-4735-94d7-d4db46869434" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f712da03-e819-4f00-9984-4da833c52c34" type="checkbox" ><label for="f712da03-e819-4f00-9984-4da833c52c34" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="769021e4-8eb3-4bb2-b2b0-e756e98a0cb2" type="checkbox" ><label for="769021e4-8eb3-4bb2-b2b0-e756e98a0cb2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b914ab4-9c85-4d0a-87cf-48ea53a1577e" type="checkbox" ><label for="3b914ab4-9c85-4d0a-87cf-48ea53a1577e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0fff281-2215-4831-a3fd-9f2388474ae6" type="checkbox" ><label for="c0fff281-2215-4831-a3fd-9f2388474ae6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f49cc1b3-a89b-40bc-b6e4-9406230658be" type="checkbox" ><label for="f49cc1b3-a89b-40bc-b6e4-9406230658be" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bfb40d8-e2d6-4d99-99a3-36a2ba0cad4c" type="checkbox" ><label for="3bfb40d8-e2d6-4d99-99a3-36a2ba0cad4c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="496e8461-7598-4332-a450-079ffc6ac57a" type="checkbox" ><label for="496e8461-7598-4332-a450-079ffc6ac57a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d793103e-6728-4c39-9cbc-36aac8b5ec3b" type="checkbox" ><label for="d793103e-6728-4c39-9cbc-36aac8b5ec3b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 {color: black;background-color: white;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 pre{padding: 0;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-toggleable {background-color: white;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-item {z-index: 1;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-parallel-item:only-child::after {width: 0;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8f9841e5-6140-4787-b7c2-5164c3994f54 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8f9841e5-6140-4787-b7c2-5164c3994f54" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0840f4b3-6508-4b0a-b938-47ea1778eac5" type="checkbox" ><label for="0840f4b3-6508-4b0a-b938-47ea1778eac5" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0964240b-4b67-474c-8cab-917fcc5d5ff1" type="checkbox" ><label for="0964240b-4b67-474c-8cab-917fcc5d5ff1" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68363920-4ebf-40fa-aa43-41ae06ad9df8" type="checkbox" ><label for="68363920-4ebf-40fa-aa43-41ae06ad9df8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="267f7f0e-d5d6-472d-bca2-ea8edfed57eb" type="checkbox" ><label for="267f7f0e-d5d6-472d-bca2-ea8edfed57eb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a572606-4022-48e3-863b-326fb8f2597a" type="checkbox" ><label for="8a572606-4022-48e3-863b-326fb8f2597a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f4e7a81-69b2-4b49-85c0-44c805ae6098" type="checkbox" ><label for="9f4e7a81-69b2-4b49-85c0-44c805ae6098" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bdb0ace-9cd4-44e9-9adc-ae8ed258f375" type="checkbox" ><label for="6bdb0ace-9cd4-44e9-9adc-ae8ed258f375" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b270023-80e0-47a9-af13-967dce2345d6" type="checkbox" ><label for="5b270023-80e0-47a9-af13-967dce2345d6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc44857d-7f0f-4955-ad36-a1bfdbfd0eea" type="checkbox" ><label for="bc44857d-7f0f-4955-ad36-a1bfdbfd0eea" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
