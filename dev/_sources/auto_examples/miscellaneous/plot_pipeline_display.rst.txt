
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-28098caa-297b-4832-97af-d35853865b3f {color: black;background-color: white;}#sk-28098caa-297b-4832-97af-d35853865b3f pre{padding: 0;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-toggleable {background-color: white;}#sk-28098caa-297b-4832-97af-d35853865b3f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-28098caa-297b-4832-97af-d35853865b3f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-28098caa-297b-4832-97af-d35853865b3f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-28098caa-297b-4832-97af-d35853865b3f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-28098caa-297b-4832-97af-d35853865b3f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-28098caa-297b-4832-97af-d35853865b3f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-estimator:hover {background-color: #d4ebff;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-item {z-index: 1;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-parallel-item:only-child::after {width: 0;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-28098caa-297b-4832-97af-d35853865b3f div.sk-text-repr-fallback {display: none;}</style><div id="sk-28098caa-297b-4832-97af-d35853865b3f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fc30508-50d9-439f-8813-95f68ca72452" type="checkbox" ><label for="5fc30508-50d9-439f-8813-95f68ca72452" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5380080d-8b8a-4e78-a742-74bca1c2312d" type="checkbox" ><label for="5380080d-8b8a-4e78-a742-74bca1c2312d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f7ebb4c-d740-4e98-b8f6-05efda3da2a4" type="checkbox" ><label for="3f7ebb4c-d740-4e98-b8f6-05efda3da2a4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-585c46d9-1342-4880-b1a1-f955bd818a3e {color: black;background-color: white;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e pre{padding: 0;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-toggleable {background-color: white;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-estimator:hover {background-color: #d4ebff;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-item {z-index: 1;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-parallel-item:only-child::after {width: 0;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-585c46d9-1342-4880-b1a1-f955bd818a3e div.sk-text-repr-fallback {display: none;}</style><div id="sk-585c46d9-1342-4880-b1a1-f955bd818a3e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69d560cc-465c-4e40-a815-b0e9a40e9e22" type="checkbox" ><label for="69d560cc-465c-4e40-a815-b0e9a40e9e22" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="197b1548-28f4-4615-8511-568a7d36dfc5" type="checkbox" ><label for="197b1548-28f4-4615-8511-568a7d36dfc5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d73feb24-b3dd-463e-ad09-dab3c3d5ab65" type="checkbox" ><label for="d73feb24-b3dd-463e-ad09-dab3c3d5ab65" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7193f5ba-d329-4015-805c-d452873182b8" type="checkbox" ><label for="7193f5ba-d329-4015-805c-d452873182b8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb {color: black;background-color: white;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb pre{padding: 0;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-toggleable {background-color: white;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-estimator:hover {background-color: #d4ebff;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-item {z-index: 1;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-parallel-item:only-child::after {width: 0;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb div.sk-text-repr-fallback {display: none;}</style><div id="sk-d77adbaa-1b6e-4b0b-bf2b-1bf7c691b4eb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3246816d-e137-4a3c-9201-c7a1f7ced6a4" type="checkbox" ><label for="3246816d-e137-4a3c-9201-c7a1f7ced6a4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91237ed0-6d27-46a3-a826-ba91c9449fc0" type="checkbox" ><label for="91237ed0-6d27-46a3-a826-ba91c9449fc0" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd0aad22-1b32-4ab9-ba7e-5b70398c988d" type="checkbox" ><label for="fd0aad22-1b32-4ab9-ba7e-5b70398c988d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 {color: black;background-color: white;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 pre{padding: 0;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-toggleable {background-color: white;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-item {z-index: 1;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-parallel-item:only-child::after {width: 0;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5e43a65e-3f62-45ee-9091-525ae8b00b50 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5e43a65e-3f62-45ee-9091-525ae8b00b50" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37fb3e44-7304-41ee-98c7-1e02570fe65e" type="checkbox" ><label for="37fb3e44-7304-41ee-98c7-1e02570fe65e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="199ce4aa-c37a-4c42-aa5c-713c20aeff1f" type="checkbox" ><label for="199ce4aa-c37a-4c42-aa5c-713c20aeff1f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67b5ef2c-f242-4be1-8af2-37dff01dbba3" type="checkbox" ><label for="67b5ef2c-f242-4be1-8af2-37dff01dbba3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5b30d03-6dae-4ee6-bfe5-c7e12a52ae69" type="checkbox" ><label for="e5b30d03-6dae-4ee6-bfe5-c7e12a52ae69" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d052ac8-bfcc-4bb5-bedd-63c4aa0ce352" type="checkbox" ><label for="1d052ac8-bfcc-4bb5-bedd-63c4aa0ce352" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="819ce242-3f1f-4b77-8334-6ef34ea9737e" type="checkbox" ><label for="819ce242-3f1f-4b77-8334-6ef34ea9737e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2e014bb-decd-49e3-be85-1b3f35c13033" type="checkbox" ><label for="d2e014bb-decd-49e3-be85-1b3f35c13033" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="479796e9-1e56-4930-b929-58d8ca6975a8" type="checkbox" ><label for="479796e9-1e56-4930-b929-58d8ca6975a8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e317197-586e-478d-b5a1-78fe9c17a3d3" type="checkbox" ><label for="6e317197-586e-478d-b5a1-78fe9c17a3d3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa {color: black;background-color: white;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa pre{padding: 0;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-toggleable {background-color: white;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-estimator:hover {background-color: #d4ebff;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-item {z-index: 1;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-parallel-item:only-child::after {width: 0;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-24321971-8bfd-4299-b7b5-0fcad18e96fa div.sk-text-repr-fallback {display: none;}</style><div id="sk-24321971-8bfd-4299-b7b5-0fcad18e96fa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbc015f8-dae6-4fb7-bb13-da2e61f53efe" type="checkbox" ><label for="cbc015f8-dae6-4fb7-bb13-da2e61f53efe" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea0d539b-904b-44ee-8f6b-88e011a62661" type="checkbox" ><label for="ea0d539b-904b-44ee-8f6b-88e011a62661" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7cbc39c-767a-4a0e-a36f-58be7106e9a9" type="checkbox" ><label for="c7cbc39c-767a-4a0e-a36f-58be7106e9a9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0dda77f-4d57-473c-8a4e-c1cc9715cab2" type="checkbox" ><label for="e0dda77f-4d57-473c-8a4e-c1cc9715cab2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84e755ba-0c61-44b2-86a2-d56db45c3b06" type="checkbox" ><label for="84e755ba-0c61-44b2-86a2-d56db45c3b06" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c71095c-99d6-4a2a-a40c-1e2a9e17079d" type="checkbox" ><label for="7c71095c-99d6-4a2a-a40c-1e2a9e17079d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a80d327-a7d8-4794-a123-1890ae7203a9" type="checkbox" ><label for="5a80d327-a7d8-4794-a123-1890ae7203a9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8af73ba-8d1f-4dd8-be34-7d4df749ea9e" type="checkbox" ><label for="e8af73ba-8d1f-4dd8-be34-7d4df749ea9e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4b6eb94-e26f-4e42-b6f2-6d25ace4a76a" type="checkbox" ><label for="e4b6eb94-e26f-4e42-b6f2-6d25ace4a76a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
