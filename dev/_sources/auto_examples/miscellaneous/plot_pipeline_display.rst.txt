
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc {color: black;background-color: white;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc pre{padding: 0;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-toggleable {background-color: white;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-estimator:hover {background-color: #d4ebff;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-item {z-index: 1;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-parallel-item:only-child::after {width: 0;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc div.sk-text-repr-fallback {display: none;}</style><div id="sk-811b3985-e1f3-4cd4-b78f-8dd0a54a6adc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19d45ad4-34e5-4b72-98f5-176e4e8850c3" type="checkbox" ><label for="19d45ad4-34e5-4b72-98f5-176e4e8850c3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7d6130f-f2c6-4533-9c98-f72fa7f3c07a" type="checkbox" ><label for="a7d6130f-f2c6-4533-9c98-f72fa7f3c07a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bb24030-aaf7-4a5b-9b23-3c353ec9a8c2" type="checkbox" ><label for="0bb24030-aaf7-4a5b-9b23-3c353ec9a8c2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-60b14135-c43c-474a-9f18-c556a73c67e3 {color: black;background-color: white;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 pre{padding: 0;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-toggleable {background-color: white;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-item {z-index: 1;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-parallel-item:only-child::after {width: 0;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-60b14135-c43c-474a-9f18-c556a73c67e3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-60b14135-c43c-474a-9f18-c556a73c67e3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9c7cba9-8a03-4161-beea-98cea7e22731" type="checkbox" ><label for="d9c7cba9-8a03-4161-beea-98cea7e22731" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a04f4816-3838-4ae3-9cd3-7bba0323fb41" type="checkbox" ><label for="a04f4816-3838-4ae3-9cd3-7bba0323fb41" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fc16999-504d-482c-a230-1e31ef2b7388" type="checkbox" ><label for="9fc16999-504d-482c-a230-1e31ef2b7388" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f68b589-961e-40bb-92c6-1c4d9e65d714" type="checkbox" ><label for="9f68b589-961e-40bb-92c6-1c4d9e65d714" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f {color: black;background-color: white;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f pre{padding: 0;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-toggleable {background-color: white;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-estimator:hover {background-color: #d4ebff;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-item {z-index: 1;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-parallel-item:only-child::after {width: 0;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f div.sk-text-repr-fallback {display: none;}</style><div id="sk-8b7fd89d-dc59-48aa-a4be-cb4e9093056f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e811675-2b7f-4a0f-a6e6-3adc4b8fab1b" type="checkbox" ><label for="6e811675-2b7f-4a0f-a6e6-3adc4b8fab1b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2844453-ff30-4334-be35-75a8f6512342" type="checkbox" ><label for="a2844453-ff30-4334-be35-75a8f6512342" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54ca171c-c7b6-42f4-a039-f713810e2228" type="checkbox" ><label for="54ca171c-c7b6-42f4-a039-f713810e2228" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 {color: black;background-color: white;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 pre{padding: 0;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-toggleable {background-color: white;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-item {z-index: 1;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-parallel-item:only-child::after {width: 0;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7c5ce4dd-8fe4-4c2d-a9e8-8e2a98706b11" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="207a6a1f-84f8-4782-9960-0934e6b62918" type="checkbox" ><label for="207a6a1f-84f8-4782-9960-0934e6b62918" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e77ca8a-58a4-4df9-b792-310fe4972365" type="checkbox" ><label for="1e77ca8a-58a4-4df9-b792-310fe4972365" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d61fcd04-3077-46a5-8d32-749993e0a325" type="checkbox" ><label for="d61fcd04-3077-46a5-8d32-749993e0a325" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2630e8c-1721-4ad6-9eb9-514c93d3b4ae" type="checkbox" ><label for="e2630e8c-1721-4ad6-9eb9-514c93d3b4ae" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79a2fd02-daef-452f-9960-e8d36b46cb63" type="checkbox" ><label for="79a2fd02-daef-452f-9960-e8d36b46cb63" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2aa91ee0-8509-4432-93c9-147f92befe06" type="checkbox" ><label for="2aa91ee0-8509-4432-93c9-147f92befe06" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="016ce1b0-f519-4969-9667-1b777fee4e47" type="checkbox" ><label for="016ce1b0-f519-4969-9667-1b777fee4e47" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26250883-6542-4d2a-aaa3-4bcb2cd486bf" type="checkbox" ><label for="26250883-6542-4d2a-aaa3-4bcb2cd486bf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1724d12b-c227-401a-82ec-04c9e6e4c99b" type="checkbox" ><label for="1724d12b-c227-401a-82ec-04c9e6e4c99b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8ff97d11-18f2-448d-a002-3a0b40607497 {color: black;background-color: white;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 pre{padding: 0;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-toggleable {background-color: white;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-item {z-index: 1;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-parallel-item:only-child::after {width: 0;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8ff97d11-18f2-448d-a002-3a0b40607497 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8ff97d11-18f2-448d-a002-3a0b40607497" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb3ef99a-b4d2-419a-8951-6bd03829d0c5" type="checkbox" ><label for="fb3ef99a-b4d2-419a-8951-6bd03829d0c5" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d18b08e8-9c19-4396-9e7a-ec020afa8915" type="checkbox" ><label for="d18b08e8-9c19-4396-9e7a-ec020afa8915" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="517e246e-9c6d-4733-9821-e108e62a903b" type="checkbox" ><label for="517e246e-9c6d-4733-9821-e108e62a903b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfcfea14-c729-484b-9146-67e5ec9147df" type="checkbox" ><label for="cfcfea14-c729-484b-9146-67e5ec9147df" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d176c10-e94f-4451-9eb3-c2882a35bc6b" type="checkbox" ><label for="7d176c10-e94f-4451-9eb3-c2882a35bc6b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccfd7718-28df-488c-a6eb-b96a77ffc825" type="checkbox" ><label for="ccfd7718-28df-488c-a6eb-b96a77ffc825" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21d37d94-1e83-4129-a9d4-8b3442b9a6fb" type="checkbox" ><label for="21d37d94-1e83-4129-a9d4-8b3442b9a6fb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3b94b66-9727-4371-88ea-5265c612ce2f" type="checkbox" ><label for="d3b94b66-9727-4371-88ea-5265c612ce2f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fc30802-6a9a-41c5-ba49-8340c445332e" type="checkbox" ><label for="1fc30802-6a9a-41c5-ba49-8340c445332e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
