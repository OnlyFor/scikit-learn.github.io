
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 {color: black;background-color: white;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 pre{padding: 0;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-toggleable {background-color: white;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-estimator:hover {background-color: #d4ebff;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-item {z-index: 1;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-parallel-item:only-child::after {width: 0;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-168dd3c0-17ed-4e00-8544-0b25888c1d17 div.sk-text-repr-fallback {display: none;}</style><div id="sk-168dd3c0-17ed-4e00-8544-0b25888c1d17" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b495d32-2b55-4191-81b5-18578e6cb977" type="checkbox" ><label for="6b495d32-2b55-4191-81b5-18578e6cb977" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ea2d336-cc30-425b-8ccc-e1625b42cf12" type="checkbox" ><label for="9ea2d336-cc30-425b-8ccc-e1625b42cf12" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ff8fc4a-f305-47ac-bd41-ae67d4f52c53" type="checkbox" ><label for="4ff8fc4a-f305-47ac-bd41-ae67d4f52c53" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8257d8df-4498-4403-ba04-a89eca387b41 {color: black;background-color: white;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 pre{padding: 0;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-toggleable {background-color: white;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-item {z-index: 1;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-parallel-item:only-child::after {width: 0;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8257d8df-4498-4403-ba04-a89eca387b41 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8257d8df-4498-4403-ba04-a89eca387b41" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="394dfcdd-76bd-4b44-bba8-c43f40a66a52" type="checkbox" ><label for="394dfcdd-76bd-4b44-bba8-c43f40a66a52" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c14ebfb-852d-4fc5-b18a-935fcd450985" type="checkbox" ><label for="5c14ebfb-852d-4fc5-b18a-935fcd450985" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2f21874-9c2d-4ed3-9f6e-2fa0ab254af4" type="checkbox" ><label for="a2f21874-9c2d-4ed3-9f6e-2fa0ab254af4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3417fda-e540-49cc-a9f4-4e7aada1d7f4" type="checkbox" ><label for="c3417fda-e540-49cc-a9f4-4e7aada1d7f4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f {color: black;background-color: white;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f pre{padding: 0;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-toggleable {background-color: white;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-estimator:hover {background-color: #d4ebff;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-item {z-index: 1;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-parallel-item:only-child::after {width: 0;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f div.sk-text-repr-fallback {display: none;}</style><div id="sk-7cd1a619-d1d4-4fb9-9b65-8da114bc9a0f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f892f10-f0f6-4781-b723-ae4d25b4a27e" type="checkbox" ><label for="1f892f10-f0f6-4781-b723-ae4d25b4a27e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a8e5107-fe5e-470e-86cd-67b9f49a357f" type="checkbox" ><label for="4a8e5107-fe5e-470e-86cd-67b9f49a357f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed6dc29b-311a-45b7-af6b-54129d528445" type="checkbox" ><label for="ed6dc29b-311a-45b7-af6b-54129d528445" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-324cff17-2ae3-4158-865e-650a151d0659 {color: black;background-color: white;}#sk-324cff17-2ae3-4158-865e-650a151d0659 pre{padding: 0;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-toggleable {background-color: white;}#sk-324cff17-2ae3-4158-865e-650a151d0659 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-324cff17-2ae3-4158-865e-650a151d0659 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-324cff17-2ae3-4158-865e-650a151d0659 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-324cff17-2ae3-4158-865e-650a151d0659 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-324cff17-2ae3-4158-865e-650a151d0659 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-324cff17-2ae3-4158-865e-650a151d0659 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-estimator:hover {background-color: #d4ebff;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-item {z-index: 1;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-parallel-item:only-child::after {width: 0;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-324cff17-2ae3-4158-865e-650a151d0659 div.sk-text-repr-fallback {display: none;}</style><div id="sk-324cff17-2ae3-4158-865e-650a151d0659" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc793ab9-051e-4f3c-9990-265f97d1c09e" type="checkbox" ><label for="dc793ab9-051e-4f3c-9990-265f97d1c09e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2802b556-4105-4cf8-aa4c-75e00826a8cc" type="checkbox" ><label for="2802b556-4105-4cf8-aa4c-75e00826a8cc" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b6806ed-20eb-4e34-9330-3debe6e1b693" type="checkbox" ><label for="2b6806ed-20eb-4e34-9330-3debe6e1b693" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17537f47-1627-4eb2-a18d-ff31936e7b45" type="checkbox" ><label for="17537f47-1627-4eb2-a18d-ff31936e7b45" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31d45d3c-f75d-4acd-bbf4-887963c3188b" type="checkbox" ><label for="31d45d3c-f75d-4acd-bbf4-887963c3188b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4170155a-a7e9-4749-9977-e4cf08b978f7" type="checkbox" ><label for="4170155a-a7e9-4749-9977-e4cf08b978f7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a680313e-ac87-45b9-85b1-5256db2c5285" type="checkbox" ><label for="a680313e-ac87-45b9-85b1-5256db2c5285" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90117361-8d7e-47ba-a45b-b79fa2ec873a" type="checkbox" ><label for="90117361-8d7e-47ba-a45b-b79fa2ec873a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a5ebe9e-1cbf-400a-828f-55a2498bab71" type="checkbox" ><label for="5a5ebe9e-1cbf-400a-828f-55a2498bab71" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 {color: black;background-color: white;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 pre{padding: 0;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-toggleable {background-color: white;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-item {z-index: 1;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-parallel-item:only-child::after {width: 0;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f0d9a34b-a2a6-4330-b4bc-7582312cf5e1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d06ed16b-d9fc-4186-a111-10a66e393cfc" type="checkbox" ><label for="d06ed16b-d9fc-4186-a111-10a66e393cfc" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="316c9dc2-c9c6-462d-9c56-99f5167e0e25" type="checkbox" ><label for="316c9dc2-c9c6-462d-9c56-99f5167e0e25" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="caca7ce9-8bec-4e44-8a2b-ea3da24846da" type="checkbox" ><label for="caca7ce9-8bec-4e44-8a2b-ea3da24846da" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52c5ab3f-e4ed-4d11-b732-c47b0a2db8c7" type="checkbox" ><label for="52c5ab3f-e4ed-4d11-b732-c47b0a2db8c7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c58a9e2e-4c79-4f87-83f9-00b032faeae7" type="checkbox" ><label for="c58a9e2e-4c79-4f87-83f9-00b032faeae7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49d72a2d-3880-41a9-8393-b1062ab1fa59" type="checkbox" ><label for="49d72a2d-3880-41a9-8393-b1062ab1fa59" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba8144c3-76b2-4bfd-9e99-fe96dc1ee5aa" type="checkbox" ><label for="ba8144c3-76b2-4bfd-9e99-fe96dc1ee5aa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b41daa73-7037-472b-a5d4-1b9c28ecb2cc" type="checkbox" ><label for="b41daa73-7037-472b-a5d4-1b9c28ecb2cc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="608a8a8f-28ca-4ce0-b7b0-0f72cc8d8743" type="checkbox" ><label for="608a8a8f-28ca-4ce0-b7b0-0f72cc8d8743" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
