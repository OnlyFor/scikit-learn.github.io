
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7be05df7-4558-436f-89bc-75c3feee86cb {color: black;background-color: white;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb pre{padding: 0;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-toggleable {background-color: white;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-estimator:hover {background-color: #d4ebff;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-item {z-index: 1;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-parallel-item:only-child::after {width: 0;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7be05df7-4558-436f-89bc-75c3feee86cb div.sk-text-repr-fallback {display: none;}</style><div id="sk-7be05df7-4558-436f-89bc-75c3feee86cb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64370388-2023-4ae6-9f0e-b1c7825cbb3c" type="checkbox" ><label for="64370388-2023-4ae6-9f0e-b1c7825cbb3c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b87ac5a7-dd2c-4dd6-9889-84a4858a9290" type="checkbox" ><label for="b87ac5a7-dd2c-4dd6-9889-84a4858a9290" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8b2c719-e6c5-4325-99a2-282b1de885a5" type="checkbox" ><label for="c8b2c719-e6c5-4325-99a2-282b1de885a5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d {color: black;background-color: white;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d pre{padding: 0;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-toggleable {background-color: white;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-estimator:hover {background-color: #d4ebff;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-item {z-index: 1;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-parallel-item:only-child::after {width: 0;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-29312d1f-5cc9-4cb5-9327-1c600c99060d div.sk-text-repr-fallback {display: none;}</style><div id="sk-29312d1f-5cc9-4cb5-9327-1c600c99060d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef86eb6d-d7c4-4009-8b5f-e5ff30b18484" type="checkbox" ><label for="ef86eb6d-d7c4-4009-8b5f-e5ff30b18484" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55504d7a-44a5-4697-8b06-7cb361d8d0aa" type="checkbox" ><label for="55504d7a-44a5-4697-8b06-7cb361d8d0aa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3921f913-1b58-4510-94e0-2d0dfee0328f" type="checkbox" ><label for="3921f913-1b58-4510-94e0-2d0dfee0328f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fff21fd-85f0-4b86-a1c1-0c2f84706342" type="checkbox" ><label for="0fff21fd-85f0-4b86-a1c1-0c2f84706342" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 {color: black;background-color: white;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 pre{padding: 0;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-toggleable {background-color: white;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-item {z-index: 1;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-parallel-item:only-child::after {width: 0;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-48b6e46b-d683-45df-8004-f14b187e2bf9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-48b6e46b-d683-45df-8004-f14b187e2bf9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbbe4daf-4b47-48ba-96ff-06228ed5dbb0" type="checkbox" ><label for="cbbe4daf-4b47-48ba-96ff-06228ed5dbb0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c523fd9-cb25-4f3b-86b3-5d036afcebc6" type="checkbox" ><label for="4c523fd9-cb25-4f3b-86b3-5d036afcebc6" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e8be7c5-98b3-4878-9014-b4573fa644db" type="checkbox" ><label for="7e8be7c5-98b3-4878-9014-b4573fa644db" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 {color: black;background-color: white;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 pre{padding: 0;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-toggleable {background-color: white;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-item {z-index: 1;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-parallel-item:only-child::after {width: 0;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b68af3d1-0dec-4d0c-9eda-a16a0ebbf125" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14e23bc3-266c-440b-ba1c-9aa2dfde6301" type="checkbox" ><label for="14e23bc3-266c-440b-ba1c-9aa2dfde6301" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="855fe84b-fa99-45d1-a57f-57217060d083" type="checkbox" ><label for="855fe84b-fa99-45d1-a57f-57217060d083" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09b23ced-5562-415a-ba0c-179a7630d905" type="checkbox" ><label for="09b23ced-5562-415a-ba0c-179a7630d905" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="950fb3a1-3ba8-4012-8b13-9e0e46dce674" type="checkbox" ><label for="950fb3a1-3ba8-4012-8b13-9e0e46dce674" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c321e8b-53ba-4446-8669-e7ce73c7d0bf" type="checkbox" ><label for="5c321e8b-53ba-4446-8669-e7ce73c7d0bf" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6405dc68-7cc7-4efc-a0ac-bb3f0560cf26" type="checkbox" ><label for="6405dc68-7cc7-4efc-a0ac-bb3f0560cf26" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbd20325-64b7-476a-8713-cb354cf7746d" type="checkbox" ><label for="bbd20325-64b7-476a-8713-cb354cf7746d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2a94256-6721-4f9a-8f7d-e499f39dbe5d" type="checkbox" ><label for="d2a94256-6721-4f9a-8f7d-e499f39dbe5d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a4d9d58-ba52-40ac-86ab-f91a5ac7ddb9" type="checkbox" ><label for="4a4d9d58-ba52-40ac-86ab-f91a5ac7ddb9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6857ca32-67f9-415f-bd78-38a54d818a86 {color: black;background-color: white;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 pre{padding: 0;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-toggleable {background-color: white;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-item {z-index: 1;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-parallel-item:only-child::after {width: 0;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6857ca32-67f9-415f-bd78-38a54d818a86 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6857ca32-67f9-415f-bd78-38a54d818a86" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7a3bedd-382c-4f5c-9690-f0916dde0483" type="checkbox" ><label for="b7a3bedd-382c-4f5c-9690-f0916dde0483" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a2c6ff9-d82d-4d69-88e2-9ad3235c5339" type="checkbox" ><label for="5a2c6ff9-d82d-4d69-88e2-9ad3235c5339" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="464a1efb-af6e-4595-8e52-7e5db07fbe58" type="checkbox" ><label for="464a1efb-af6e-4595-8e52-7e5db07fbe58" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5876787f-56e4-43a1-80fa-fc5e5f512dab" type="checkbox" ><label for="5876787f-56e4-43a1-80fa-fc5e5f512dab" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94c9dd80-bf36-4d10-bab6-57c4a8738c28" type="checkbox" ><label for="94c9dd80-bf36-4d10-bab6-57c4a8738c28" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3508d5a2-a833-46a9-ab07-100ff7f139a2" type="checkbox" ><label for="3508d5a2-a833-46a9-ab07-100ff7f139a2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34d9682f-d695-40ee-8a0e-2472ee3ef45e" type="checkbox" ><label for="34d9682f-d695-40ee-8a0e-2472ee3ef45e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88be23e6-5dab-4706-976f-0bb9063b202b" type="checkbox" ><label for="88be23e6-5dab-4706-976f-0bb9063b202b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e93e5e0-0a39-40f1-b2ca-959e172365ad" type="checkbox" ><label for="8e93e5e0-0a39-40f1-b2ca-959e172365ad" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
