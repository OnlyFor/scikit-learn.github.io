
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c {color: black;background-color: white;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c pre{padding: 0;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-toggleable {background-color: white;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-item {z-index: 1;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-parallel-item:only-child::after {width: 0;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b65599b-7beb-4053-8a73-4c10763b1b4c div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b65599b-7beb-4053-8a73-4c10763b1b4c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b68ba05-9aca-4ac5-83c8-174a707c5554" type="checkbox" ><label for="0b68ba05-9aca-4ac5-83c8-174a707c5554" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e05ff2a8-0243-4bc4-afc3-fe5010418127" type="checkbox" ><label for="e05ff2a8-0243-4bc4-afc3-fe5010418127" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e23284b-26af-44d9-8fa7-ff174bb4b22d" type="checkbox" ><label for="7e23284b-26af-44d9-8fa7-ff174bb4b22d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e {color: black;background-color: white;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e pre{padding: 0;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-toggleable {background-color: white;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-estimator:hover {background-color: #d4ebff;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-item {z-index: 1;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-parallel-item:only-child::after {width: 0;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e div.sk-text-repr-fallback {display: none;}</style><div id="sk-0c773dd4-7e1d-44cf-9f3e-291005ec2d2e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="739d1efa-dd26-4469-9c1c-15f229b9c9fe" type="checkbox" ><label for="739d1efa-dd26-4469-9c1c-15f229b9c9fe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1309050-df85-45f0-bf10-743b15b42221" type="checkbox" ><label for="c1309050-df85-45f0-bf10-743b15b42221" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccf4678c-a7a9-4857-8635-9713dd4909fa" type="checkbox" ><label for="ccf4678c-a7a9-4857-8635-9713dd4909fa" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7b2504f-78cc-4fad-b233-3f8728c7524d" type="checkbox" ><label for="b7b2504f-78cc-4fad-b233-3f8728c7524d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 {color: black;background-color: white;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 pre{padding: 0;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-toggleable {background-color: white;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-item {z-index: 1;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-parallel-item:only-child::after {width: 0;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5edbc637-eccf-4f8a-95a6-6bd6a159b166" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6452bc6-af7a-44b1-a62a-0392807252ca" type="checkbox" ><label for="e6452bc6-af7a-44b1-a62a-0392807252ca" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46489948-353e-43d6-99f7-01a43cc600a8" type="checkbox" ><label for="46489948-353e-43d6-99f7-01a43cc600a8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcf718e2-c87c-4f2d-b3e8-a24356b2b8f7" type="checkbox" ><label for="fcf718e2-c87c-4f2d-b3e8-a24356b2b8f7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6db2cd88-6241-478f-b90c-752db374eb78 {color: black;background-color: white;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 pre{padding: 0;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-toggleable {background-color: white;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-item {z-index: 1;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-parallel-item:only-child::after {width: 0;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6db2cd88-6241-478f-b90c-752db374eb78 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6db2cd88-6241-478f-b90c-752db374eb78" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b24c696b-39a6-431e-9a4a-ce951e84704a" type="checkbox" ><label for="b24c696b-39a6-431e-9a4a-ce951e84704a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0558a04b-5a00-41cb-9f06-260bb460c083" type="checkbox" ><label for="0558a04b-5a00-41cb-9f06-260bb460c083" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61bca188-083e-4e37-87ae-3b6c9d56f944" type="checkbox" ><label for="61bca188-083e-4e37-87ae-3b6c9d56f944" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f2fe999-75d2-46af-86b2-029547bbe6d4" type="checkbox" ><label for="8f2fe999-75d2-46af-86b2-029547bbe6d4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ac91f9e-3671-4537-b891-e227de62219f" type="checkbox" ><label for="4ac91f9e-3671-4537-b891-e227de62219f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="274c38cf-2a80-4056-9638-85cd72627efb" type="checkbox" ><label for="274c38cf-2a80-4056-9638-85cd72627efb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3cd8fffc-50bd-48bc-8759-2c3e6382a4ae" type="checkbox" ><label for="3cd8fffc-50bd-48bc-8759-2c3e6382a4ae" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6111619-9df1-4222-9848-04fe32fb6ead" type="checkbox" ><label for="f6111619-9df1-4222-9848-04fe32fb6ead" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1783e0c-daee-4213-96a5-d9332705b712" type="checkbox" ><label for="d1783e0c-daee-4213-96a5-d9332705b712" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d627ed5b-f377-4d48-938f-d87131d966db {color: black;background-color: white;}#sk-d627ed5b-f377-4d48-938f-d87131d966db pre{padding: 0;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-toggleable {background-color: white;}#sk-d627ed5b-f377-4d48-938f-d87131d966db label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d627ed5b-f377-4d48-938f-d87131d966db label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d627ed5b-f377-4d48-938f-d87131d966db label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d627ed5b-f377-4d48-938f-d87131d966db input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d627ed5b-f377-4d48-938f-d87131d966db input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d627ed5b-f377-4d48-938f-d87131d966db input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-estimator:hover {background-color: #d4ebff;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-item {z-index: 1;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-parallel-item:only-child::after {width: 0;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d627ed5b-f377-4d48-938f-d87131d966db div.sk-text-repr-fallback {display: none;}</style><div id="sk-d627ed5b-f377-4d48-938f-d87131d966db" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45c0bd9d-1fd5-4f73-a7db-5c79b82a5a64" type="checkbox" ><label for="45c0bd9d-1fd5-4f73-a7db-5c79b82a5a64" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f9153a2-6afc-4302-b585-f4f706ec3577" type="checkbox" ><label for="9f9153a2-6afc-4302-b585-f4f706ec3577" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91aef65a-7713-4580-a8a0-895b1fead877" type="checkbox" ><label for="91aef65a-7713-4580-a8a0-895b1fead877" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9eee2a9d-af6e-4f82-96a5-66df2831e106" type="checkbox" ><label for="9eee2a9d-af6e-4f82-96a5-66df2831e106" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59812d5a-c33a-4e7b-a5ea-369e2e6a600a" type="checkbox" ><label for="59812d5a-c33a-4e7b-a5ea-369e2e6a600a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ff21c7f-afc4-4f52-977f-648c9ae326c6" type="checkbox" ><label for="3ff21c7f-afc4-4f52-977f-648c9ae326c6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01f892c9-c59b-41c2-a316-9cdfb836e0b9" type="checkbox" ><label for="01f892c9-c59b-41c2-a316-9cdfb836e0b9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a76472eb-3d23-4e64-bb0f-3f54a3890c89" type="checkbox" ><label for="a76472eb-3d23-4e64-bb0f-3f54a3890c89" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="368e6779-1750-4a3b-b3e6-69d33ee25f08" type="checkbox" ><label for="368e6779-1750-4a3b-b3e6-69d33ee25f08" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
