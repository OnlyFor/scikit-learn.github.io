
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline in a Jupyter Notebook is
`'diagram'` where `set_config(display='diagram')`. To deactivate HTML representation,
use `set_config(display='text')`.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To visualize the diagram, the default is `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 {color: black;background-color: white;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 pre{padding: 0;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-toggleable {background-color: white;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-item {z-index: 1;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-parallel-item:only-child::after {width: 0;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9740b4b7-de92-4f98-a6e3-a6f67cf12100" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d7efce7-bea4-402b-ac99-9c11ddbcdcf8" type="checkbox" ><label for="3d7efce7-bea4-402b-ac99-9c11ddbcdcf8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fda3f081-830c-4b8d-b618-5dae9a0842c5" type="checkbox" ><label for="fda3f081-830c-4b8d-b618-5dae9a0842c5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c18366b-f3cc-4ada-96bb-40e5a239c57b" type="checkbox" ><label for="9c18366b-f3cc-4ada-96bb-40e5a239c57b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 39-40

To view the text pipeline, change to `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 44-45

Put back the default display

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 48-55

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifier step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 55-68

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 {color: black;background-color: white;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 pre{padding: 0;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-toggleable {background-color: white;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-item {z-index: 1;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-parallel-item:only-child::after {width: 0;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7bdf7cba-052d-4001-b6a6-5ab86d2c23a6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fe21f4b-c85c-45da-a8f5-0f57785f8095" type="checkbox" ><label for="3fe21f4b-c85c-45da-a8f5-0f57785f8095" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73b728c7-0e8c-44ad-a53e-c7414281fe64" type="checkbox" ><label for="73b728c7-0e8c-44ad-a53e-c7414281fe64" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19b8d858-885a-412d-af10-d9c989c8964d" type="checkbox" ><label for="19b8d858-885a-412d-af10-d9c989c8964d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eaa4b143-3086-4e36-9fa6-32728c68fd54" type="checkbox" ><label for="eaa4b143-3086-4e36-9fa6-32728c68fd54" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-75

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 75-84

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 {color: black;background-color: white;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 pre{padding: 0;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-toggleable {background-color: white;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-item {z-index: 1;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-parallel-item:only-child::after {width: 0;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f81b22a8-7894-4f93-91aa-dbf249fda2a7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="770f21c6-d77f-4a2e-8573-2dfa08c40a80" type="checkbox" ><label for="770f21c6-d77f-4a2e-8573-2dfa08c40a80" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce3bad56-e4fe-4843-86c0-e1ff9de0054c" type="checkbox" ><label for="ce3bad56-e4fe-4843-86c0-e1ff9de0054c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64b3627e-03e7-4777-836f-31deda8aacdf" type="checkbox" ><label for="64b3627e-03e7-4777-836f-31deda8aacdf" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-91

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 91-127

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 {color: black;background-color: white;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 pre{padding: 0;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-toggleable {background-color: white;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-item {z-index: 1;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-parallel-item:only-child::after {width: 0;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-637d2d95-8ecc-4b2e-8628-58a3e1e589b0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c2ebf97-2835-4ce4-8173-5a27c4a164fa" type="checkbox" ><label for="9c2ebf97-2835-4ce4-8173-5a27c4a164fa" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7669a438-ca83-406c-bce9-5424c81546a8" type="checkbox" ><label for="7669a438-ca83-406c-bce9-5424c81546a8" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4df38c61-0aa2-48bb-9961-ef6f80afb8bb" type="checkbox" ><label for="4df38c61-0aa2-48bb-9961-ef6f80afb8bb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f4011e6-6417-4bee-8372-cb912d241ac8" type="checkbox" ><label for="1f4011e6-6417-4bee-8372-cb912d241ac8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="765a833a-1a83-434d-8689-d4145e646e37" type="checkbox" ><label for="765a833a-1a83-434d-8689-d4145e646e37" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1300234a-20cb-47fd-bffb-9339e0860102" type="checkbox" ><label for="1300234a-20cb-47fd-bffb-9339e0860102" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e95a6126-56e7-41cd-8a34-ee40675a18be" type="checkbox" ><label for="e95a6126-56e7-41cd-8a34-ee40675a18be" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc5848dd-0de9-4c64-9efc-41fa70b25feb" type="checkbox" ><label for="bc5848dd-0de9-4c64-9efc-41fa70b25feb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ff31a36-597a-48ab-ad0c-faa3c9b493fd" type="checkbox" ><label for="8ff31a36-597a-48ab-ad0c-faa3c9b493fd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 128-134

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 134-181

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8ed19463-efa3-4550-9d06-3ef30054cddd {color: black;background-color: white;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd pre{padding: 0;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-toggleable {background-color: white;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-estimator:hover {background-color: #d4ebff;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-item {z-index: 1;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-parallel-item:only-child::after {width: 0;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8ed19463-efa3-4550-9d06-3ef30054cddd div.sk-text-repr-fallback {display: none;}</style><div id="sk-8ed19463-efa3-4550-9d06-3ef30054cddd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e6e21ac-768e-49d1-9078-3209329d8935" type="checkbox" ><label for="9e6e21ac-768e-49d1-9078-3209329d8935" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce1bf076-7116-4b0d-9bca-2a0882dc00c0" type="checkbox" ><label for="ce1bf076-7116-4b0d-9bca-2a0882dc00c0" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="972be185-a3ab-4d87-b516-ce43861e7895" type="checkbox" ><label for="972be185-a3ab-4d87-b516-ce43861e7895" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb9159d3-f760-4284-bc26-96e3bf92b269" type="checkbox" ><label for="eb9159d3-f760-4284-bc26-96e3bf92b269" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68e3febe-7676-461b-bfa4-a354ea8da8ea" type="checkbox" ><label for="68e3febe-7676-461b-bfa4-a354ea8da8ea" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38bda432-5c6a-4e8e-b32c-8de0b4b68cec" type="checkbox" ><label for="38bda432-5c6a-4e8e-b32c-8de0b4b68cec" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e531173f-995d-4657-8856-c9a66284353c" type="checkbox" ><label for="e531173f-995d-4657-8856-c9a66284353c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e33e782a-36a1-4b8f-b173-6a54897b441d" type="checkbox" ><label for="e33e782a-36a1-4b8f-b173-6a54897b441d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a95d4775-78f3-4208-9144-1500560719fb" type="checkbox" ><label for="a95d4775-78f3-4208-9144-1500560719fb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d430bab-af33-4065-82fd-849304902edc" type="checkbox" ><label for="0d430bab-af33-4065-82fd-849304902edc" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
