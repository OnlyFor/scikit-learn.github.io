
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 {color: black;background-color: white;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 pre{padding: 0;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-toggleable {background-color: white;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-estimator:hover {background-color: #d4ebff;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-item {z-index: 1;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-parallel-item:only-child::after {width: 0;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-42a712ee-a6a5-41dc-86b3-152b0f756644 div.sk-text-repr-fallback {display: none;}</style><div id="sk-42a712ee-a6a5-41dc-86b3-152b0f756644" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be2db4f3-fed9-4a6f-9694-2968486bb3b9" type="checkbox" ><label for="be2db4f3-fed9-4a6f-9694-2968486bb3b9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ac5bf84-d667-4cec-8034-b45c88e8c147" type="checkbox" ><label for="1ac5bf84-d667-4cec-8034-b45c88e8c147" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e13f580a-d726-48ca-ac08-8ceee65dd682" type="checkbox" ><label for="e13f580a-d726-48ca-ac08-8ceee65dd682" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f6eed17a-6396-4b6c-a133-481dca62539e {color: black;background-color: white;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e pre{padding: 0;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-toggleable {background-color: white;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-estimator:hover {background-color: #d4ebff;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-item {z-index: 1;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-parallel-item:only-child::after {width: 0;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f6eed17a-6396-4b6c-a133-481dca62539e div.sk-text-repr-fallback {display: none;}</style><div id="sk-f6eed17a-6396-4b6c-a133-481dca62539e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7039a2e-fd1a-4ed4-b882-c2f6c99a9bf4" type="checkbox" ><label for="e7039a2e-fd1a-4ed4-b882-c2f6c99a9bf4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e315c45-172f-4e80-a2d6-f25db7e457b8" type="checkbox" ><label for="2e315c45-172f-4e80-a2d6-f25db7e457b8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1a28e50-139c-4798-9f31-e83dc3f3e84a" type="checkbox" ><label for="a1a28e50-139c-4798-9f31-e83dc3f3e84a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="591f4970-5315-4b64-a039-eef31cbb6054" type="checkbox" ><label for="591f4970-5315-4b64-a039-eef31cbb6054" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-237d94de-862d-4115-a851-55bc9304a601 {color: black;background-color: white;}#sk-237d94de-862d-4115-a851-55bc9304a601 pre{padding: 0;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-toggleable {background-color: white;}#sk-237d94de-862d-4115-a851-55bc9304a601 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-237d94de-862d-4115-a851-55bc9304a601 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-237d94de-862d-4115-a851-55bc9304a601 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-237d94de-862d-4115-a851-55bc9304a601 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-237d94de-862d-4115-a851-55bc9304a601 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-237d94de-862d-4115-a851-55bc9304a601 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-estimator:hover {background-color: #d4ebff;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-item {z-index: 1;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-parallel-item:only-child::after {width: 0;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-237d94de-862d-4115-a851-55bc9304a601 div.sk-text-repr-fallback {display: none;}</style><div id="sk-237d94de-862d-4115-a851-55bc9304a601" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc7a7c64-bdbc-4562-bfbb-87ace5a5591f" type="checkbox" ><label for="dc7a7c64-bdbc-4562-bfbb-87ace5a5591f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c59ee37-4877-4fa1-9093-c2e3e19227f1" type="checkbox" ><label for="6c59ee37-4877-4fa1-9093-c2e3e19227f1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1187c0b4-baa4-4b44-bb25-7ff6885fe628" type="checkbox" ><label for="1187c0b4-baa4-4b44-bb25-7ff6885fe628" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f {color: black;background-color: white;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f pre{padding: 0;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-toggleable {background-color: white;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-estimator:hover {background-color: #d4ebff;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-item {z-index: 1;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-parallel-item:only-child::after {width: 0;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f div.sk-text-repr-fallback {display: none;}</style><div id="sk-fdc786e6-d9f3-4eb8-8aa1-cb1693da723f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e93bd5d6-0f45-4fab-b1b0-f9ef0a93a1e6" type="checkbox" ><label for="e93bd5d6-0f45-4fab-b1b0-f9ef0a93a1e6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0b1b1d4-aad6-43ba-8fa6-8db4c88c5660" type="checkbox" ><label for="a0b1b1d4-aad6-43ba-8fa6-8db4c88c5660" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa2dc8f6-eefc-4884-964a-b4722b024a04" type="checkbox" ><label for="aa2dc8f6-eefc-4884-964a-b4722b024a04" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b495e7c-6d2f-4405-a0d8-f620f9499902" type="checkbox" ><label for="4b495e7c-6d2f-4405-a0d8-f620f9499902" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8fe69a0-f863-4512-9d19-5a5fe7958baa" type="checkbox" ><label for="d8fe69a0-f863-4512-9d19-5a5fe7958baa" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc7faf85-c247-4f88-a1e3-de7a786ca3fe" type="checkbox" ><label for="cc7faf85-c247-4f88-a1e3-de7a786ca3fe" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df69d751-725e-4322-a7e1-c6d01d158773" type="checkbox" ><label for="df69d751-725e-4322-a7e1-c6d01d158773" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27103456-55ec-4fd7-85df-cb1cf95360fc" type="checkbox" ><label for="27103456-55ec-4fd7-85df-cb1cf95360fc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e174c685-661a-4a20-b14e-04577daddad1" type="checkbox" ><label for="e174c685-661a-4a20-b14e-04577daddad1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-24438dac-0600-4987-b58c-f436a91b55e7 {color: black;background-color: white;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 pre{padding: 0;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-toggleable {background-color: white;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-item {z-index: 1;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-parallel-item:only-child::after {width: 0;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-24438dac-0600-4987-b58c-f436a91b55e7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-24438dac-0600-4987-b58c-f436a91b55e7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c929088-2e0b-4013-bb7e-f191618de8b7" type="checkbox" ><label for="0c929088-2e0b-4013-bb7e-f191618de8b7" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80e81726-dc7c-496d-8f27-dcac11c29d13" type="checkbox" ><label for="80e81726-dc7c-496d-8f27-dcac11c29d13" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe42c3a4-929a-4dc0-8d68-946e57ffb440" type="checkbox" ><label for="fe42c3a4-929a-4dc0-8d68-946e57ffb440" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd976489-c865-4b5f-bc28-287bd0e6ac4c" type="checkbox" ><label for="bd976489-c865-4b5f-bc28-287bd0e6ac4c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dedccf6b-8d4d-404f-88a2-c9e0f4a08e51" type="checkbox" ><label for="dedccf6b-8d4d-404f-88a2-c9e0f4a08e51" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6351a370-1806-4fba-872d-084298ba2a34" type="checkbox" ><label for="6351a370-1806-4fba-872d-084298ba2a34" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8aef70a-d83e-431b-97c7-b01954df23d1" type="checkbox" ><label for="d8aef70a-d83e-431b-97c7-b01954df23d1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12871a3a-c5bd-4307-b963-0562e93aeb33" type="checkbox" ><label for="12871a3a-c5bd-4307-b963-0562e93aeb33" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c10ab9f-9bab-46e3-90a7-4621f7961e92" type="checkbox" ><label for="5c10ab9f-9bab-46e3-90a7-4621f7961e92" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
