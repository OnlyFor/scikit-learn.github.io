
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6c8db1dd-2504-4484-8e77-4660250d4057 {color: black;background-color: white;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 pre{padding: 0;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-toggleable {background-color: white;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-item {z-index: 1;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-parallel-item:only-child::after {width: 0;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-container {display: inline-block;position: relative;}#sk-6c8db1dd-2504-4484-8e77-4660250d4057 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6c8db1dd-2504-4484-8e77-4660250d4057" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f626a4e-eafe-4d07-baa4-3710838ddceb" type="checkbox" ><label class="sk-toggleable__label" for="6f626a4e-eafe-4d07-baa4-3710838ddceb">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93cf4bed-3897-448a-8bd8-9a3e3b91ab35" type="checkbox" ><label class="sk-toggleable__label" for="93cf4bed-3897-448a-8bd8-9a3e3b91ab35">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57709e26-0eef-4a28-bf5d-98d577101656" type="checkbox" ><label class="sk-toggleable__label" for="57709e26-0eef-4a28-bf5d-98d577101656">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 {color: black;background-color: white;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 pre{padding: 0;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-toggleable {background-color: white;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-estimator:hover {background-color: #d4ebff;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-item {z-index: 1;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-parallel-item:only-child::after {width: 0;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-container {display: inline-block;position: relative;}#sk-85c90a03-7b75-4b35-ba81-edbfd491b859 div.sk-text-repr-fallback {display: none;}</style><div id="sk-85c90a03-7b75-4b35-ba81-edbfd491b859" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d2723cf-fda7-4d72-bd93-95fefe212483" type="checkbox" ><label class="sk-toggleable__label" for="8d2723cf-fda7-4d72-bd93-95fefe212483">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37bc17b1-4cf1-41f2-ba53-cf46c94a03cf" type="checkbox" ><label class="sk-toggleable__label" for="37bc17b1-4cf1-41f2-ba53-cf46c94a03cf">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3122c6a-c69b-449b-a17a-a90257a83c0f" type="checkbox" ><label class="sk-toggleable__label" for="a3122c6a-c69b-449b-a17a-a90257a83c0f">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3859c2dd-67cc-47d9-b2cd-186d13801f06" type="checkbox" ><label class="sk-toggleable__label" for="3859c2dd-67cc-47d9-b2cd-186d13801f06">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 {color: black;background-color: white;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 pre{padding: 0;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-toggleable {background-color: white;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-estimator:hover {background-color: #d4ebff;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-item {z-index: 1;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-parallel-item:only-child::after {width: 0;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-container {display: inline-block;position: relative;}#sk-63a23669-eff5-48f5-afdb-c65d5a6b6291 div.sk-text-repr-fallback {display: none;}</style><div id="sk-63a23669-eff5-48f5-afdb-c65d5a6b6291" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d203a93a-78f9-41d3-ba49-ad07ee68e3bc" type="checkbox" ><label class="sk-toggleable__label" for="d203a93a-78f9-41d3-ba49-ad07ee68e3bc">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26e837cc-0bf1-4491-8d1d-e15657905c6e" type="checkbox" ><label class="sk-toggleable__label" for="26e837cc-0bf1-4491-8d1d-e15657905c6e">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e5553aa-1470-43f6-9c10-a61f6bb91b8b" type="checkbox" ><label class="sk-toggleable__label" for="7e5553aa-1470-43f6-9c10-a61f6bb91b8b">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 {color: black;background-color: white;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 pre{padding: 0;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-toggleable {background-color: white;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-item {z-index: 1;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-parallel-item:only-child::after {width: 0;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-container {display: inline-block;position: relative;}#sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ff674bb5-58d8-4e80-aece-3cb9c1239db3" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44b3d9ec-9d90-47af-b282-e4de939653a6" type="checkbox" ><label class="sk-toggleable__label" for="44b3d9ec-9d90-47af-b282-e4de939653a6">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00c1f0b1-14bb-4f09-86cf-bd2780716fc7" type="checkbox" ><label class="sk-toggleable__label" for="00c1f0b1-14bb-4f09-86cf-bd2780716fc7">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb4be6a0-9231-4824-82df-4604b432fc3f" type="checkbox" ><label class="sk-toggleable__label" for="eb4be6a0-9231-4824-82df-4604b432fc3f">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7adb8095-037e-4094-8021-d3a4682b862d" type="checkbox" ><label class="sk-toggleable__label" for="7adb8095-037e-4094-8021-d3a4682b862d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b235becd-9783-4989-9dc7-9b269e253817" type="checkbox" ><label class="sk-toggleable__label" for="b235becd-9783-4989-9dc7-9b269e253817">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f91382b-825e-4a27-b16b-03066a4a55a7" type="checkbox" ><label class="sk-toggleable__label" for="6f91382b-825e-4a27-b16b-03066a4a55a7">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00804e6b-e6ac-4722-be06-7df626aa2541" type="checkbox" ><label class="sk-toggleable__label" for="00804e6b-e6ac-4722-be06-7df626aa2541">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d8e05ff-e589-4c3a-b1b4-e8ea7553da71" type="checkbox" ><label class="sk-toggleable__label" for="5d8e05ff-e589-4c3a-b1b4-e8ea7553da71">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1002385-866a-44b6-a1f4-372ac43e22df" type="checkbox" ><label class="sk-toggleable__label" for="c1002385-866a-44b6-a1f4-372ac43e22df">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 {color: black;background-color: white;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 pre{padding: 0;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-toggleable {background-color: white;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-item {z-index: 1;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-parallel-item:only-child::after {width: 0;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-container {display: inline-block;position: relative;}#sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9e9e4d9b-65b2-4b66-9224-b5ece6af32d3" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce418c14-6421-4758-8118-6a1d49d20be0" type="checkbox" ><label class="sk-toggleable__label" for="ce418c14-6421-4758-8118-6a1d49d20be0">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5c7da7c-6cfe-406c-a9c4-6f9d424cf395" type="checkbox" ><label class="sk-toggleable__label" for="c5c7da7c-6cfe-406c-a9c4-6f9d424cf395">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6687844-a301-472e-a8ff-6085597160d6" type="checkbox" ><label class="sk-toggleable__label" for="f6687844-a301-472e-a8ff-6085597160d6">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b645c9a-a5e0-4fe7-b774-133b06e6b855" type="checkbox" ><label class="sk-toggleable__label" for="7b645c9a-a5e0-4fe7-b774-133b06e6b855">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb271f01-a1bd-4bba-9b93-3c9f06f11465" type="checkbox" ><label class="sk-toggleable__label" for="fb271f01-a1bd-4bba-9b93-3c9f06f11465">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f2328ec-2dd2-412d-b745-d453cc8761ce" type="checkbox" ><label class="sk-toggleable__label" for="0f2328ec-2dd2-412d-b745-d453cc8761ce">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb39f698-074e-4d12-a8ec-9c0ce7cbec0f" type="checkbox" ><label class="sk-toggleable__label" for="bb39f698-074e-4d12-a8ec-9c0ce7cbec0f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f9468f8-abb7-43f8-ba26-9aea44f06a7e" type="checkbox" ><label class="sk-toggleable__label" for="1f9468f8-abb7-43f8-ba26-9aea44f06a7e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8901126-a9a7-4eb2-9b51-7661f4925840" type="checkbox" ><label class="sk-toggleable__label" for="c8901126-a9a7-4eb2-9b51-7661f4925840">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.139 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
