
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab {color: black;background-color: white;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab pre{padding: 0;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-toggleable {background-color: white;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-estimator:hover {background-color: #d4ebff;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-item {z-index: 1;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-parallel-item:only-child::after {width: 0;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cdce2a83-8f67-40c3-89d5-ccb90951efab div.sk-text-repr-fallback {display: none;}</style><div id="sk-cdce2a83-8f67-40c3-89d5-ccb90951efab" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6863f7d9-c534-44ec-82f4-cc6444851626" type="checkbox" ><label for="6863f7d9-c534-44ec-82f4-cc6444851626" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1da980be-0a4f-4376-9de9-fbb676fdf69c" type="checkbox" ><label for="1da980be-0a4f-4376-9de9-fbb676fdf69c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="744c6d78-fd9e-4804-ae51-af2541ae9375" type="checkbox" ><label for="744c6d78-fd9e-4804-ae51-af2541ae9375" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da {color: black;background-color: white;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da pre{padding: 0;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-toggleable {background-color: white;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-estimator:hover {background-color: #d4ebff;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-item {z-index: 1;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-parallel-item:only-child::after {width: 0;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-de29c77a-2bf5-45d6-994e-0cbad607f8da div.sk-text-repr-fallback {display: none;}</style><div id="sk-de29c77a-2bf5-45d6-994e-0cbad607f8da" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c502aa6c-6fb7-4db1-b4f1-e4f79c3387cb" type="checkbox" ><label for="c502aa6c-6fb7-4db1-b4f1-e4f79c3387cb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="915febcc-7d51-4213-8bcd-af524ea255ec" type="checkbox" ><label for="915febcc-7d51-4213-8bcd-af524ea255ec" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="149c4c05-e4a4-4e7a-ae8d-73e453d7f5a2" type="checkbox" ><label for="149c4c05-e4a4-4e7a-ae8d-73e453d7f5a2" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1c28670-a990-4c01-99b5-2ede2648afc1" type="checkbox" ><label for="c1c28670-a990-4c01-99b5-2ede2648afc1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 {color: black;background-color: white;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 pre{padding: 0;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-toggleable {background-color: white;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-item {z-index: 1;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-parallel-item:only-child::after {width: 0;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-19d1d469-b8c8-4337-8b0c-b4fa908965b5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="854d0aaf-e9b4-4d27-9349-d495930a4395" type="checkbox" ><label for="854d0aaf-e9b4-4d27-9349-d495930a4395" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b5f4407-234e-4578-b49d-f02ea00b97ae" type="checkbox" ><label for="8b5f4407-234e-4578-b49d-f02ea00b97ae" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="489bcd3a-7d28-447a-9802-22c2f9f32687" type="checkbox" ><label for="489bcd3a-7d28-447a-9802-22c2f9f32687" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fc105220-b811-4355-97fd-396548ddf5e0 {color: black;background-color: white;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 pre{padding: 0;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-toggleable {background-color: white;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-item {z-index: 1;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-parallel-item:only-child::after {width: 0;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fc105220-b811-4355-97fd-396548ddf5e0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fc105220-b811-4355-97fd-396548ddf5e0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21be8ce0-5b4a-42bb-aa73-d85cb1526ba3" type="checkbox" ><label for="21be8ce0-5b4a-42bb-aa73-d85cb1526ba3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d765217a-fcb9-41c5-bfa5-cb98f7f32a2e" type="checkbox" ><label for="d765217a-fcb9-41c5-bfa5-cb98f7f32a2e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f1627a5-a40e-44b4-80ba-c0febeb5be56" type="checkbox" ><label for="9f1627a5-a40e-44b4-80ba-c0febeb5be56" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36638d33-97d5-473f-964a-39019b1add87" type="checkbox" ><label for="36638d33-97d5-473f-964a-39019b1add87" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb6e3a33-433d-4b06-bc03-a48135c43f90" type="checkbox" ><label for="bb6e3a33-433d-4b06-bc03-a48135c43f90" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fee93e1-3fa6-4aed-a657-ada4db896151" type="checkbox" ><label for="0fee93e1-3fa6-4aed-a657-ada4db896151" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95039366-7b47-400f-a1b9-8a2cafc70dba" type="checkbox" ><label for="95039366-7b47-400f-a1b9-8a2cafc70dba" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58baa3ec-cc49-4fe0-9981-754db49bfa0d" type="checkbox" ><label for="58baa3ec-cc49-4fe0-9981-754db49bfa0d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eedb374c-241e-4885-81ad-f8c38cdcc5ba" type="checkbox" ><label for="eedb374c-241e-4885-81ad-f8c38cdcc5ba" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 {color: black;background-color: white;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 pre{padding: 0;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-toggleable {background-color: white;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-item {z-index: 1;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-parallel-item:only-child::after {width: 0;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5ebc19cf-69c9-4876-9653-40129c110ff6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5ebc19cf-69c9-4876-9653-40129c110ff6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5929a2e8-ccf5-4e14-9c4f-fd7ca05e401d" type="checkbox" ><label for="5929a2e8-ccf5-4e14-9c4f-fd7ca05e401d" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60e0cf8a-ba9c-4b7d-949e-1546b22b0721" type="checkbox" ><label for="60e0cf8a-ba9c-4b7d-949e-1546b22b0721" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1750d4e1-8b2d-442f-9ba8-51f69f94f784" type="checkbox" ><label for="1750d4e1-8b2d-442f-9ba8-51f69f94f784" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27b2ca4d-50ff-4e95-8d14-f14b01b5c922" type="checkbox" ><label for="27b2ca4d-50ff-4e95-8d14-f14b01b5c922" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="caa9da4b-ca74-45d1-b26c-d005dc38dabb" type="checkbox" ><label for="caa9da4b-ca74-45d1-b26c-d005dc38dabb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbb64536-3196-48dc-a364-b0450b6b0ae7" type="checkbox" ><label for="dbb64536-3196-48dc-a364-b0450b6b0ae7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41638aca-c4fd-4871-b5e9-e79dfa97ef56" type="checkbox" ><label for="41638aca-c4fd-4871-b5e9-e79dfa97ef56" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cfa2343-8d1e-49e8-8577-b3e9cd88d873" type="checkbox" ><label for="0cfa2343-8d1e-49e8-8577-b3e9cd88d873" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a2ef34c-1f3d-4ca3-b041-a82271e4da72" type="checkbox" ><label for="7a2ef34c-1f3d-4ca3-b041-a82271e4da72" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
