
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 {color: black;background-color: white;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 pre{padding: 0;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-toggleable {background-color: white;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-item {z-index: 1;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-parallel-item:only-child::after {width: 0;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ec2d3486-3427-4c2e-8e34-98bc73d4a4e1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47d100ba-6236-4e46-aced-88edd81b04b7" type="checkbox" ><label for="47d100ba-6236-4e46-aced-88edd81b04b7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05984ef0-0424-4b66-b2c5-7cfae6800403" type="checkbox" ><label for="05984ef0-0424-4b66-b2c5-7cfae6800403" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed368eb7-f671-47d6-af66-608096193328" type="checkbox" ><label for="ed368eb7-f671-47d6-af66-608096193328" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee {color: black;background-color: white;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee pre{padding: 0;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-toggleable {background-color: white;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-estimator:hover {background-color: #d4ebff;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-item {z-index: 1;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-parallel-item:only-child::after {width: 0;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee div.sk-text-repr-fallback {display: none;}</style><div id="sk-e2bbb689-5745-4c5f-adfe-f308bbe2a8ee" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53a0c9b3-cdee-4f56-b581-5f489f28b4b8" type="checkbox" ><label for="53a0c9b3-cdee-4f56-b581-5f489f28b4b8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d30fc13-1e5f-4d17-8e5e-abe06bd36706" type="checkbox" ><label for="6d30fc13-1e5f-4d17-8e5e-abe06bd36706" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67b44994-d85b-4890-9f3b-7e88ccaa7c83" type="checkbox" ><label for="67b44994-d85b-4890-9f3b-7e88ccaa7c83" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d75d9f13-7dd1-43f5-a88a-f7bc64dc2600" type="checkbox" ><label for="d75d9f13-7dd1-43f5-a88a-f7bc64dc2600" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 {color: black;background-color: white;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 pre{padding: 0;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-toggleable {background-color: white;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-estimator:hover {background-color: #d4ebff;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-item {z-index: 1;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-parallel-item:only-child::after {width: 0;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000 div.sk-text-repr-fallback {display: none;}</style><div id="sk-731095cd-da2e-4f5a-9079-2f6f3f9fb000" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf4a8c6b-05e2-40e2-b310-a7357e1079ba" type="checkbox" ><label for="cf4a8c6b-05e2-40e2-b310-a7357e1079ba" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9127eee-089a-4b88-8111-3fbbb69e1e75" type="checkbox" ><label for="d9127eee-089a-4b88-8111-3fbbb69e1e75" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3319079-891c-4050-8edd-dd5768a455fd" type="checkbox" ><label for="e3319079-891c-4050-8edd-dd5768a455fd" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 {color: black;background-color: white;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 pre{padding: 0;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-toggleable {background-color: white;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-item {z-index: 1;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-parallel-item:only-child::after {width: 0;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-40828176-6d7b-4b7e-ba94-0ceb85fffeb6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e13b53a3-8c15-4aa5-83c8-166e0caa4580" type="checkbox" ><label for="e13b53a3-8c15-4aa5-83c8-166e0caa4580" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5786df6-f59a-4c67-9ca5-b6f6fbd8f52b" type="checkbox" ><label for="e5786df6-f59a-4c67-9ca5-b6f6fbd8f52b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fb59682-8a94-4a23-9ac8-f2b3d56ecf18" type="checkbox" ><label for="7fb59682-8a94-4a23-9ac8-f2b3d56ecf18" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="317d0002-2b58-418c-8fb6-86b2450b2f37" type="checkbox" ><label for="317d0002-2b58-418c-8fb6-86b2450b2f37" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a410fa64-a678-41da-acf4-5898eb62d3e6" type="checkbox" ><label for="a410fa64-a678-41da-acf4-5898eb62d3e6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57cc5dc8-e88a-4efa-86c3-f7070452b0a8" type="checkbox" ><label for="57cc5dc8-e88a-4efa-86c3-f7070452b0a8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14919757-44fe-46e8-b899-12ac03874e4c" type="checkbox" ><label for="14919757-44fe-46e8-b899-12ac03874e4c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5d21fc1-6184-4116-b52b-1b9ce7ef65b4" type="checkbox" ><label for="d5d21fc1-6184-4116-b52b-1b9ce7ef65b4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72817d9a-bbe3-44f5-9a19-de5411850aab" type="checkbox" ><label for="72817d9a-bbe3-44f5-9a19-de5411850aab" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 {color: black;background-color: white;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 pre{padding: 0;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-toggleable {background-color: white;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-item {z-index: 1;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-parallel-item:only-child::after {width: 0;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-002ff5ee-34ce-4bbd-868d-2c84cd1e93f1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11cb4e9a-0801-45d9-b127-6643bde493de" type="checkbox" ><label for="11cb4e9a-0801-45d9-b127-6643bde493de" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4564b954-085d-485b-98fa-899187cfe220" type="checkbox" ><label for="4564b954-085d-485b-98fa-899187cfe220" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec856e0f-f3bd-4af6-8677-fffa34e7c605" type="checkbox" ><label for="ec856e0f-f3bd-4af6-8677-fffa34e7c605" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71b9d996-fc33-4254-b728-bac01539070d" type="checkbox" ><label for="71b9d996-fc33-4254-b728-bac01539070d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81216fec-11a2-45e6-9e45-fe450fcb010f" type="checkbox" ><label for="81216fec-11a2-45e6-9e45-fe450fcb010f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a80ac07a-6cfb-4afb-88a8-e14b68a2aa72" type="checkbox" ><label for="a80ac07a-6cfb-4afb-88a8-e14b68a2aa72" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce6d6ecc-beaf-4417-a6d9-f05fc8f649dc" type="checkbox" ><label for="ce6d6ecc-beaf-4417-a6d9-f05fc8f649dc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6c61464-23d3-4a7e-b859-8ac17db7fc58" type="checkbox" ><label for="a6c61464-23d3-4a7e-b859-8ac17db7fc58" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69ebb812-a75b-4a6d-942c-99cf9f1b6a1a" type="checkbox" ><label for="69ebb812-a75b-4a6d-942c-99cf9f1b6a1a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
