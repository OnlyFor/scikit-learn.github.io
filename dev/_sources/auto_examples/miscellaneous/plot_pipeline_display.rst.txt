
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a {color: black;background-color: white;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a pre{padding: 0;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-toggleable {background-color: white;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-estimator:hover {background-color: #d4ebff;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-item {z-index: 1;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-parallel-item:only-child::after {width: 0;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-650ca6c2-cd48-4fcf-a81d-a021519df29a div.sk-text-repr-fallback {display: none;}</style><div id="sk-650ca6c2-cd48-4fcf-a81d-a021519df29a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39430b47-954f-4f53-8944-e7a754bac5ff" type="checkbox" ><label for="39430b47-954f-4f53-8944-e7a754bac5ff" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ed7a595-0ea1-4a17-8624-fa9eebef3f21" type="checkbox" ><label for="5ed7a595-0ea1-4a17-8624-fa9eebef3f21" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3306127-0e24-4a18-8685-48fbf14f1af4" type="checkbox" ><label for="d3306127-0e24-4a18-8685-48fbf14f1af4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-14b4972d-16f0-4448-9346-05421bc740f6 {color: black;background-color: white;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 pre{padding: 0;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-toggleable {background-color: white;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-item {z-index: 1;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-parallel-item:only-child::after {width: 0;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-14b4972d-16f0-4448-9346-05421bc740f6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-14b4972d-16f0-4448-9346-05421bc740f6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="406449c7-ed4d-4c3d-865a-6bee76335e36" type="checkbox" ><label for="406449c7-ed4d-4c3d-865a-6bee76335e36" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99e48c3e-90c0-4af5-bc20-3f337942d9cc" type="checkbox" ><label for="99e48c3e-90c0-4af5-bc20-3f337942d9cc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99b4f08d-5597-43c6-b9ab-e794e26d0748" type="checkbox" ><label for="99b4f08d-5597-43c6-b9ab-e794e26d0748" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c08b24a-224c-4c3f-9d31-897b2af3be3d" type="checkbox" ><label for="7c08b24a-224c-4c3f-9d31-897b2af3be3d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 {color: black;background-color: white;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 pre{padding: 0;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-toggleable {background-color: white;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-item {z-index: 1;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-parallel-item:only-child::after {width: 0;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3c7c2d81-a4c0-4203-acd5-2e6d7b4f58c0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e9ef29a-1a28-4cc1-8547-556f5abad8c2" type="checkbox" ><label for="6e9ef29a-1a28-4cc1-8547-556f5abad8c2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6593649-1389-4227-92e4-bff004052567" type="checkbox" ><label for="e6593649-1389-4227-92e4-bff004052567" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="173a3d47-9af3-4588-b0eb-de612e6ed167" type="checkbox" ><label for="173a3d47-9af3-4588-b0eb-de612e6ed167" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-95c24259-e267-461c-a393-af0a3c0880ae {color: black;background-color: white;}#sk-95c24259-e267-461c-a393-af0a3c0880ae pre{padding: 0;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-toggleable {background-color: white;}#sk-95c24259-e267-461c-a393-af0a3c0880ae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-95c24259-e267-461c-a393-af0a3c0880ae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-95c24259-e267-461c-a393-af0a3c0880ae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-95c24259-e267-461c-a393-af0a3c0880ae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-95c24259-e267-461c-a393-af0a3c0880ae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-95c24259-e267-461c-a393-af0a3c0880ae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-estimator:hover {background-color: #d4ebff;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-item {z-index: 1;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-parallel-item:only-child::after {width: 0;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-95c24259-e267-461c-a393-af0a3c0880ae div.sk-text-repr-fallback {display: none;}</style><div id="sk-95c24259-e267-461c-a393-af0a3c0880ae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54851acb-44d4-4f43-9077-c207fb9ff1be" type="checkbox" ><label for="54851acb-44d4-4f43-9077-c207fb9ff1be" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30c91f2b-c2cc-4330-8758-ecd51ae3bb35" type="checkbox" ><label for="30c91f2b-c2cc-4330-8758-ecd51ae3bb35" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f69cc11b-1a9a-41e5-a9c1-72171474d8c0" type="checkbox" ><label for="f69cc11b-1a9a-41e5-a9c1-72171474d8c0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19780ae2-d032-473a-8ae0-2759040038da" type="checkbox" ><label for="19780ae2-d032-473a-8ae0-2759040038da" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96aa694f-2895-4afa-a812-bb2e1b0d615d" type="checkbox" ><label for="96aa694f-2895-4afa-a812-bb2e1b0d615d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a88b1452-d3b6-4f6d-a661-d066f8401c12" type="checkbox" ><label for="a88b1452-d3b6-4f6d-a661-d066f8401c12" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae206ecf-7b8f-4185-894a-7275a3d6c4e2" type="checkbox" ><label for="ae206ecf-7b8f-4185-894a-7275a3d6c4e2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96e16e46-68da-4268-bf74-1f90f9594fcf" type="checkbox" ><label for="96e16e46-68da-4268-bf74-1f90f9594fcf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c6c2d12-3657-40da-8a1f-8644c2e74ba1" type="checkbox" ><label for="8c6c2d12-3657-40da-8a1f-8644c2e74ba1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 {color: black;background-color: white;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 pre{padding: 0;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-toggleable {background-color: white;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-item {z-index: 1;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-parallel-item:only-child::after {width: 0;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9a809f8d-fa97-4a89-ab9d-aae2f2db3b09" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24634f29-ef64-407d-9f64-eac5de0be0fc" type="checkbox" ><label for="24634f29-ef64-407d-9f64-eac5de0be0fc" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="156826db-4385-4eb6-b5bd-e335c2926997" type="checkbox" ><label for="156826db-4385-4eb6-b5bd-e335c2926997" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6717d4d0-0254-437b-8cf7-1cb801e5d499" type="checkbox" ><label for="6717d4d0-0254-437b-8cf7-1cb801e5d499" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b364de76-5d1c-4fb3-a5d4-7bbcc3747299" type="checkbox" ><label for="b364de76-5d1c-4fb3-a5d4-7bbcc3747299" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="614f53c5-f0f6-4d5f-9333-3ddbe8c26c5b" type="checkbox" ><label for="614f53c5-f0f6-4d5f-9333-3ddbe8c26c5b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74d579ec-25bf-44c1-bd40-95fbcba098ac" type="checkbox" ><label for="74d579ec-25bf-44c1-bd40-95fbcba098ac" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b44d93dd-61e1-4280-a915-1cb19b5a9e7d" type="checkbox" ><label for="b44d93dd-61e1-4280-a915-1cb19b5a9e7d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f46b944-a7c3-4039-90cb-9cc137b42c30" type="checkbox" ><label for="1f46b944-a7c3-4039-90cb-9cc137b42c30" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00a4ea98-cdd3-478f-8b05-066e5a63cfde" type="checkbox" ><label for="00a4ea98-cdd3-478f-8b05-066e5a63cfde" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
