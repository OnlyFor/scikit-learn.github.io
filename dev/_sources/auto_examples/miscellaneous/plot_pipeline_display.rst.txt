
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d {color: black;background-color: white;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d pre{padding: 0;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-toggleable {background-color: white;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-estimator:hover {background-color: #d4ebff;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-item {z-index: 1;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-parallel-item:only-child::after {width: 0;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-container {display: inline-block;position: relative;}#sk-0c0133b6-9781-4713-9d7f-09e2974cf62d div.sk-text-repr-fallback {display: none;}</style><div id="sk-0c0133b6-9781-4713-9d7f-09e2974cf62d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aca1d81c-2242-48da-a79c-8b7ceba42682" type="checkbox" ><label class="sk-toggleable__label" for="aca1d81c-2242-48da-a79c-8b7ceba42682">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1578988-466a-44cc-87ff-0353f662c877" type="checkbox" ><label class="sk-toggleable__label" for="f1578988-466a-44cc-87ff-0353f662c877">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58a98f2e-1c67-416c-be19-ea9d4e51c00d" type="checkbox" ><label class="sk-toggleable__label" for="58a98f2e-1c67-416c-be19-ea9d4e51c00d">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8b4e3096-5137-4e0d-8595-b40a478a329e {color: black;background-color: white;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e pre{padding: 0;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-toggleable {background-color: white;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-estimator:hover {background-color: #d4ebff;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-item {z-index: 1;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-parallel-item:only-child::after {width: 0;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-container {display: inline-block;position: relative;}#sk-8b4e3096-5137-4e0d-8595-b40a478a329e div.sk-text-repr-fallback {display: none;}</style><div id="sk-8b4e3096-5137-4e0d-8595-b40a478a329e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="571b9ba8-2af5-4cb8-b18f-1433f42618f7" type="checkbox" ><label class="sk-toggleable__label" for="571b9ba8-2af5-4cb8-b18f-1433f42618f7">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c79c611a-5e3a-4df3-a3cc-e3541a0b4207" type="checkbox" ><label class="sk-toggleable__label" for="c79c611a-5e3a-4df3-a3cc-e3541a0b4207">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83b880a4-802a-4960-bebc-aa18af0a3717" type="checkbox" ><label class="sk-toggleable__label" for="83b880a4-802a-4960-bebc-aa18af0a3717">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="036b34d0-ea9c-4cbc-ae2c-2001d21e8ab8" type="checkbox" ><label class="sk-toggleable__label" for="036b34d0-ea9c-4cbc-ae2c-2001d21e8ab8">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8525302e-cc22-4e2f-9a40-a6c287448806 {color: black;background-color: white;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 pre{padding: 0;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-toggleable {background-color: white;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-item {z-index: 1;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-parallel-item:only-child::after {width: 0;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-container {display: inline-block;position: relative;}#sk-8525302e-cc22-4e2f-9a40-a6c287448806 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8525302e-cc22-4e2f-9a40-a6c287448806" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58a17ff2-b943-4878-bca9-8949d1a654e8" type="checkbox" ><label class="sk-toggleable__label" for="58a17ff2-b943-4878-bca9-8949d1a654e8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13dfbc37-f465-46af-8ca4-6d1ab6c12292" type="checkbox" ><label class="sk-toggleable__label" for="13dfbc37-f465-46af-8ca4-6d1ab6c12292">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c2cfc3d-fe98-42a2-a387-5e730c0a6577" type="checkbox" ><label class="sk-toggleable__label" for="3c2cfc3d-fe98-42a2-a387-5e730c0a6577">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc {color: black;background-color: white;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc pre{padding: 0;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-toggleable {background-color: white;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-estimator:hover {background-color: #d4ebff;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-item {z-index: 1;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-parallel-item:only-child::after {width: 0;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-container {display: inline-block;position: relative;}#sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc div.sk-text-repr-fallback {display: none;}</style><div id="sk-df7979b2-b14c-4277-b6b3-dbc56e34e6fc" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6282f7b3-a721-40d1-8042-6026fccba839" type="checkbox" ><label class="sk-toggleable__label" for="6282f7b3-a721-40d1-8042-6026fccba839">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9eb6f938-dc0f-44b1-8a57-16c661990218" type="checkbox" ><label class="sk-toggleable__label" for="9eb6f938-dc0f-44b1-8a57-16c661990218">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ba7dffe-2efe-4367-8440-8478c50bb63a" type="checkbox" ><label class="sk-toggleable__label" for="4ba7dffe-2efe-4367-8440-8478c50bb63a">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59055d69-01f0-46d9-86a0-0acefc9f442a" type="checkbox" ><label class="sk-toggleable__label" for="59055d69-01f0-46d9-86a0-0acefc9f442a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="559e2266-7cc3-4b36-b7c1-cb782bb60b08" type="checkbox" ><label class="sk-toggleable__label" for="559e2266-7cc3-4b36-b7c1-cb782bb60b08">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f91de54e-4a5a-4adc-94cd-44a7f9ebabe3" type="checkbox" ><label class="sk-toggleable__label" for="f91de54e-4a5a-4adc-94cd-44a7f9ebabe3">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b5a8984-e25a-45c5-8006-31ec88b1ca31" type="checkbox" ><label class="sk-toggleable__label" for="7b5a8984-e25a-45c5-8006-31ec88b1ca31">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b792947-753d-4c5e-b072-0ab1fd9a1e52" type="checkbox" ><label class="sk-toggleable__label" for="0b792947-753d-4c5e-b072-0ab1fd9a1e52">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d66248d-f78c-40f9-984a-314557bd4ae0" type="checkbox" ><label class="sk-toggleable__label" for="2d66248d-f78c-40f9-984a-314557bd4ae0">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-37d07b53-747d-4fac-8b0f-89a19902619a {color: black;background-color: white;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a pre{padding: 0;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-toggleable {background-color: white;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-estimator:hover {background-color: #d4ebff;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-item {z-index: 1;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-parallel-item:only-child::after {width: 0;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-container {display: inline-block;position: relative;}#sk-37d07b53-747d-4fac-8b0f-89a19902619a div.sk-text-repr-fallback {display: none;}</style><div id="sk-37d07b53-747d-4fac-8b0f-89a19902619a" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07ee88e8-5ea0-48a8-9a37-7a3b6faba176" type="checkbox" ><label class="sk-toggleable__label" for="07ee88e8-5ea0-48a8-9a37-7a3b6faba176">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1b91923-226b-4783-90fc-51a58be25e88" type="checkbox" ><label class="sk-toggleable__label" for="a1b91923-226b-4783-90fc-51a58be25e88">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9e4307b-7ce3-441f-8ba2-556e07ad8ce5" type="checkbox" ><label class="sk-toggleable__label" for="d9e4307b-7ce3-441f-8ba2-556e07ad8ce5">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c288acfb-3d6b-4943-aae4-ff7f7f33c26e" type="checkbox" ><label class="sk-toggleable__label" for="c288acfb-3d6b-4943-aae4-ff7f7f33c26e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc56a660-69a4-4ae1-a7dc-ebf1f273d9ff" type="checkbox" ><label class="sk-toggleable__label" for="bc56a660-69a4-4ae1-a7dc-ebf1f273d9ff">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ccf359d-db23-4c49-b481-a6837512ef82" type="checkbox" ><label class="sk-toggleable__label" for="8ccf359d-db23-4c49-b481-a6837512ef82">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9a65398-63a9-4c15-a8a3-7c6a4f225829" type="checkbox" ><label class="sk-toggleable__label" for="b9a65398-63a9-4c15-a8a3-7c6a4f225829">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfdc1fb3-f567-4d53-bcb8-a88b45c6839c" type="checkbox" ><label class="sk-toggleable__label" for="cfdc1fb3-f567-4d53-bcb8-a88b45c6839c">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4360e066-a1fd-40a4-abd4-14afbcf991f1" type="checkbox" ><label class="sk-toggleable__label" for="4360e066-a1fd-40a4-abd4-14afbcf991f1">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.149 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
