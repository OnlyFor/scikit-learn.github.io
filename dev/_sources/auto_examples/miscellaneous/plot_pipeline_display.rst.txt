
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-998166c6-f884-4c10-933d-e02020390b14 {color: black;background-color: white;}#sk-998166c6-f884-4c10-933d-e02020390b14 pre{padding: 0;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-toggleable {background-color: white;}#sk-998166c6-f884-4c10-933d-e02020390b14 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-998166c6-f884-4c10-933d-e02020390b14 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-998166c6-f884-4c10-933d-e02020390b14 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-998166c6-f884-4c10-933d-e02020390b14 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-998166c6-f884-4c10-933d-e02020390b14 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-998166c6-f884-4c10-933d-e02020390b14 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-estimator:hover {background-color: #d4ebff;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-item {z-index: 1;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-parallel-item:only-child::after {width: 0;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-998166c6-f884-4c10-933d-e02020390b14 div.sk-text-repr-fallback {display: none;}</style><div id="sk-998166c6-f884-4c10-933d-e02020390b14" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7353e70c-c529-43f4-9a79-b45f07f1f9f2" type="checkbox" ><label for="7353e70c-c529-43f4-9a79-b45f07f1f9f2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="205fc89f-984a-4112-b9f3-ee15fae9c218" type="checkbox" ><label for="205fc89f-984a-4112-b9f3-ee15fae9c218" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78a5c71f-c340-47fb-8a6f-f58bcea3ba95" type="checkbox" ><label for="78a5c71f-c340-47fb-8a6f-f58bcea3ba95" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 {color: black;background-color: white;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 pre{padding: 0;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-toggleable {background-color: white;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-item {z-index: 1;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-parallel-item:only-child::after {width: 0;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9b5da4c5-1ae9-46e9-8a6f-74f4f486de19" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf713b66-d9fd-4e9c-91e1-b2d3f36488b9" type="checkbox" ><label for="cf713b66-d9fd-4e9c-91e1-b2d3f36488b9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6dd7f7cb-bcdb-4b17-b343-17b7a3ea3ae9" type="checkbox" ><label for="6dd7f7cb-bcdb-4b17-b343-17b7a3ea3ae9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c8b38dd-b783-4afb-bfaf-1e22e2254fb5" type="checkbox" ><label for="5c8b38dd-b783-4afb-bfaf-1e22e2254fb5" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6738ca73-e5b8-48f7-8e14-5ec2f5f84573" type="checkbox" ><label for="6738ca73-e5b8-48f7-8e14-5ec2f5f84573" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-34e37341-1c16-4131-8928-3a5018504721 {color: black;background-color: white;}#sk-34e37341-1c16-4131-8928-3a5018504721 pre{padding: 0;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-toggleable {background-color: white;}#sk-34e37341-1c16-4131-8928-3a5018504721 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-34e37341-1c16-4131-8928-3a5018504721 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-34e37341-1c16-4131-8928-3a5018504721 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-34e37341-1c16-4131-8928-3a5018504721 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-34e37341-1c16-4131-8928-3a5018504721 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34e37341-1c16-4131-8928-3a5018504721 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-estimator:hover {background-color: #d4ebff;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-item {z-index: 1;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-parallel-item:only-child::after {width: 0;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-34e37341-1c16-4131-8928-3a5018504721 div.sk-text-repr-fallback {display: none;}</style><div id="sk-34e37341-1c16-4131-8928-3a5018504721" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8131ddb-0d9e-43b1-a02a-50beb35acb8c" type="checkbox" ><label for="b8131ddb-0d9e-43b1-a02a-50beb35acb8c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f485ac47-49ba-4a9e-91d3-da3150dbca07" type="checkbox" ><label for="f485ac47-49ba-4a9e-91d3-da3150dbca07" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46a6a12b-bcbe-4e4f-b20c-a7fa2a8188af" type="checkbox" ><label for="46a6a12b-bcbe-4e4f-b20c-a7fa2a8188af" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 {color: black;background-color: white;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 pre{padding: 0;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-toggleable {background-color: white;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-item {z-index: 1;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-parallel-item:only-child::after {width: 0;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7628594b-b449-4ccc-8d95-ce1549cfa899 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7628594b-b449-4ccc-8d95-ce1549cfa899" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd0bc131-90db-4e98-a680-26704e7763c8" type="checkbox" ><label for="fd0bc131-90db-4e98-a680-26704e7763c8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab26b663-15ae-493b-b622-64e025d178dc" type="checkbox" ><label for="ab26b663-15ae-493b-b622-64e025d178dc" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9b34560-ed08-4a45-a7c3-e79d48c9d638" type="checkbox" ><label for="b9b34560-ed08-4a45-a7c3-e79d48c9d638" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e809b02-bbb9-4d22-a0da-670bd07a4fcc" type="checkbox" ><label for="8e809b02-bbb9-4d22-a0da-670bd07a4fcc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8065942-fbee-4c89-a207-e52ba4e6c0ef" type="checkbox" ><label for="f8065942-fbee-4c89-a207-e52ba4e6c0ef" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38caa608-2077-4e71-af64-25735af7a010" type="checkbox" ><label for="38caa608-2077-4e71-af64-25735af7a010" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b707f230-422b-46dc-b618-8622d521c6e6" type="checkbox" ><label for="b707f230-422b-46dc-b618-8622d521c6e6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb10eff3-5e7c-429e-9bd3-4a75a6fb4677" type="checkbox" ><label for="eb10eff3-5e7c-429e-9bd3-4a75a6fb4677" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c345ee5c-54ed-4a9d-b90c-2e689fc907db" type="checkbox" ><label for="c345ee5c-54ed-4a9d-b90c-2e689fc907db" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e {color: black;background-color: white;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e pre{padding: 0;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-toggleable {background-color: white;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-estimator:hover {background-color: #d4ebff;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-item {z-index: 1;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-parallel-item:only-child::after {width: 0;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e div.sk-text-repr-fallback {display: none;}</style><div id="sk-5f00c960-1122-4fa4-adcf-f6c674fdc32e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af26697a-338e-4e8e-a466-251a841161de" type="checkbox" ><label for="af26697a-338e-4e8e-a466-251a841161de" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0aee2188-9a15-4f36-96e7-07cb0fc6a1c3" type="checkbox" ><label for="0aee2188-9a15-4f36-96e7-07cb0fc6a1c3" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa25a7de-2cfd-4244-9fc7-acaec2712ddb" type="checkbox" ><label for="fa25a7de-2cfd-4244-9fc7-acaec2712ddb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a869d354-967c-4585-a255-1de9a6b74ac3" type="checkbox" ><label for="a869d354-967c-4585-a255-1de9a6b74ac3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6490839c-d137-4849-aa1f-1ff395cf4c5e" type="checkbox" ><label for="6490839c-d137-4849-aa1f-1ff395cf4c5e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba2677dd-08c1-458a-8559-ab3090a94ef1" type="checkbox" ><label for="ba2677dd-08c1-458a-8559-ab3090a94ef1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0ade54e-769c-439a-bd18-1497eba5397b" type="checkbox" ><label for="d0ade54e-769c-439a-bd18-1497eba5397b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acf0c5b4-7949-4322-9bc9-08c7e6f58c1e" type="checkbox" ><label for="acf0c5b4-7949-4322-9bc9-08c7e6f58c1e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c56f0ffd-2de4-4440-ac29-cdeaa8afa3d8" type="checkbox" ><label for="c56f0ffd-2de4-4440-ac29-cdeaa8afa3d8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.143 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
