
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c {color: black;background-color: white;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c pre{padding: 0;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-toggleable {background-color: white;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-estimator:hover {background-color: #d4ebff;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-item {z-index: 1;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-parallel-item:only-child::after {width: 0;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c div.sk-text-repr-fallback {display: none;}</style><div id="sk-b09d9bfc-68ce-4d5a-ad8c-637c53600d0c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92a053bf-0384-4c74-849c-c54503ce9194" type="checkbox" ><label for="92a053bf-0384-4c74-849c-c54503ce9194" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="107a6b8b-0d10-44ab-b944-efd47903fa51" type="checkbox" ><label for="107a6b8b-0d10-44ab-b944-efd47903fa51" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91f3c269-0086-45c6-96c8-6fe7804385c8" type="checkbox" ><label for="91f3c269-0086-45c6-96c8-6fe7804385c8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d {color: black;background-color: white;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d pre{padding: 0;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-toggleable {background-color: white;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-estimator:hover {background-color: #d4ebff;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-item {z-index: 1;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-parallel-item:only-child::after {width: 0;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d div.sk-text-repr-fallback {display: none;}</style><div id="sk-7940457d-1fac-455b-8a6e-c6fb3a907c1d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f172353a-2e73-4da1-bfb3-a03126157690" type="checkbox" ><label for="f172353a-2e73-4da1-bfb3-a03126157690" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee5d32c3-6eac-41ce-a520-05609ee2f7be" type="checkbox" ><label for="ee5d32c3-6eac-41ce-a520-05609ee2f7be" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="317e8ae4-cae5-4351-93b2-6e89382f8811" type="checkbox" ><label for="317e8ae4-cae5-4351-93b2-6e89382f8811" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54aab56a-0f69-4f67-8de7-88d5d6197785" type="checkbox" ><label for="54aab56a-0f69-4f67-8de7-88d5d6197785" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe {color: black;background-color: white;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe pre{padding: 0;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-toggleable {background-color: white;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-estimator:hover {background-color: #d4ebff;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-item {z-index: 1;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-parallel-item:only-child::after {width: 0;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a73fe40a-cd04-4574-a66d-801d3f208cfe div.sk-text-repr-fallback {display: none;}</style><div id="sk-a73fe40a-cd04-4574-a66d-801d3f208cfe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b557d563-8173-4868-8059-39efee27ab45" type="checkbox" ><label for="b557d563-8173-4868-8059-39efee27ab45" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be5a2558-b08a-4823-a45c-004c67cf0495" type="checkbox" ><label for="be5a2558-b08a-4823-a45c-004c67cf0495" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a4c8de2-4fde-498b-bce0-3ede25be9a5b" type="checkbox" ><label for="6a4c8de2-4fde-498b-bce0-3ede25be9a5b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 {color: black;background-color: white;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 pre{padding: 0;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-toggleable {background-color: white;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-item {z-index: 1;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-parallel-item:only-child::after {width: 0;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4c935cc9-3ce1-4e77-b7cf-ccbddde3e544" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da873246-184e-4141-b720-5b7afa381ecb" type="checkbox" ><label for="da873246-184e-4141-b720-5b7afa381ecb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f9c63f3-c63f-4e6d-b85d-41d499a1773d" type="checkbox" ><label for="7f9c63f3-c63f-4e6d-b85d-41d499a1773d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cfd5399-114f-4e63-97ff-79d3c7c32325" type="checkbox" ><label for="8cfd5399-114f-4e63-97ff-79d3c7c32325" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b62df679-3c62-4c05-807f-5d71bb5944e3" type="checkbox" ><label for="b62df679-3c62-4c05-807f-5d71bb5944e3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3c67827-23e2-459f-9399-9b137f4bffc5" type="checkbox" ><label for="e3c67827-23e2-459f-9399-9b137f4bffc5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92b16f9a-4cfc-4b87-a919-2f450429a6c2" type="checkbox" ><label for="92b16f9a-4cfc-4b87-a919-2f450429a6c2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b0b8a16-9af1-4fbd-81c8-13c23821b715" type="checkbox" ><label for="4b0b8a16-9af1-4fbd-81c8-13c23821b715" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d690c8c-c7cb-40cc-a9e4-3d291eb4967d" type="checkbox" ><label for="2d690c8c-c7cb-40cc-a9e4-3d291eb4967d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="744e0f68-b0e5-487f-90cf-63a0c6fa46b2" type="checkbox" ><label for="744e0f68-b0e5-487f-90cf-63a0c6fa46b2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 {color: black;background-color: white;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 pre{padding: 0;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-toggleable {background-color: white;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-item {z-index: 1;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-parallel-item:only-child::after {width: 0;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c0f73f32-faa2-481f-bb88-0833aad7b3b6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12f4801c-90e7-4939-9f31-d11ecbb23a4a" type="checkbox" ><label for="12f4801c-90e7-4939-9f31-d11ecbb23a4a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14a6ebad-b48b-4425-bd40-6886a494b7e5" type="checkbox" ><label for="14a6ebad-b48b-4425-bd40-6886a494b7e5" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9b7879e-d980-45dd-9377-84fede557ade" type="checkbox" ><label for="c9b7879e-d980-45dd-9377-84fede557ade" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d757d383-850d-4e59-8e06-e5c8221e5c0d" type="checkbox" ><label for="d757d383-850d-4e59-8e06-e5c8221e5c0d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44613083-3da1-4066-901f-dd98f7aafa2b" type="checkbox" ><label for="44613083-3da1-4066-901f-dd98f7aafa2b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c60d56dd-8caa-4c7d-88b3-677aa5810947" type="checkbox" ><label for="c60d56dd-8caa-4c7d-88b3-677aa5810947" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c68fc28f-d5b3-42a2-9490-473014c0434f" type="checkbox" ><label for="c68fc28f-d5b3-42a2-9490-473014c0434f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="437df1ad-d41d-42e2-b473-5f073b709fa2" type="checkbox" ><label for="437df1ad-d41d-42e2-b473-5f073b709fa2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f87ca6c1-ed8f-42ec-b851-a2b70cf9836d" type="checkbox" ><label for="f87ca6c1-ed8f-42ec-b851-a2b70cf9836d" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
