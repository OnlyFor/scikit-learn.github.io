
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline in a Jupyter Notebook is
`'diagram'` where `set_config(display='diagram')`. To deactivate HTML representation,
use `set_config(display='text')`.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To visualize the diagram, the default is `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 {color: black;background-color: white;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 pre{padding: 0;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-toggleable {background-color: white;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-item {z-index: 1;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-parallel-item:only-child::after {width: 0;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-11e88717-78ed-49c1-95f3-40b55c47dce0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-11e88717-78ed-49c1-95f3-40b55c47dce0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67a19611-016f-4140-8e17-89dba8ba08cc" type="checkbox" ><label for="67a19611-016f-4140-8e17-89dba8ba08cc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5eef8f9-b572-49e5-81e3-c74c189a0952" type="checkbox" ><label for="b5eef8f9-b572-49e5-81e3-c74c189a0952" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea043ac3-eac8-4d3e-aa14-a8b45bb8c2a7" type="checkbox" ><label for="ea043ac3-eac8-4d3e-aa14-a8b45bb8c2a7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 39-40

To view the text pipeline, change to `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 44-45

Put back the default display

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 48-55

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifier step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 55-68

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-348e21b9-30ba-47b9-93ca-664763491022 {color: black;background-color: white;}#sk-348e21b9-30ba-47b9-93ca-664763491022 pre{padding: 0;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-toggleable {background-color: white;}#sk-348e21b9-30ba-47b9-93ca-664763491022 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-348e21b9-30ba-47b9-93ca-664763491022 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-348e21b9-30ba-47b9-93ca-664763491022 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-348e21b9-30ba-47b9-93ca-664763491022 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-348e21b9-30ba-47b9-93ca-664763491022 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-348e21b9-30ba-47b9-93ca-664763491022 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-estimator:hover {background-color: #d4ebff;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-item {z-index: 1;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-parallel-item:only-child::after {width: 0;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-348e21b9-30ba-47b9-93ca-664763491022 div.sk-text-repr-fallback {display: none;}</style><div id="sk-348e21b9-30ba-47b9-93ca-664763491022" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="713626f5-bfb8-42f7-b7b8-10ba5bc74018" type="checkbox" ><label for="713626f5-bfb8-42f7-b7b8-10ba5bc74018" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90c2b083-01f1-49de-a3fb-30d721d83801" type="checkbox" ><label for="90c2b083-01f1-49de-a3fb-30d721d83801" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="270e5d7e-292d-4666-9626-0955d79713a2" type="checkbox" ><label for="270e5d7e-292d-4666-9626-0955d79713a2" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6dd9120e-a600-4278-8c00-545f6d973a41" type="checkbox" ><label for="6dd9120e-a600-4278-8c00-545f6d973a41" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-75

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 75-84

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bbbd1070-7639-4b03-916f-d126e04178ae {color: black;background-color: white;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae pre{padding: 0;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-toggleable {background-color: white;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-estimator:hover {background-color: #d4ebff;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-item {z-index: 1;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-parallel-item:only-child::after {width: 0;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bbbd1070-7639-4b03-916f-d126e04178ae div.sk-text-repr-fallback {display: none;}</style><div id="sk-bbbd1070-7639-4b03-916f-d126e04178ae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5a2ddaa-0760-4aee-9669-0990054aedd8" type="checkbox" ><label for="b5a2ddaa-0760-4aee-9669-0990054aedd8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfe9bd8f-a50c-4f58-bd21-b7ac5d473db8" type="checkbox" ><label for="bfe9bd8f-a50c-4f58-bd21-b7ac5d473db8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be9260a5-2bfe-4b2e-9b27-de49e5a3a8d6" type="checkbox" ><label for="be9260a5-2bfe-4b2e-9b27-de49e5a3a8d6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-91

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 91-127

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c35ab187-524c-47fd-8508-0457109eedd1 {color: black;background-color: white;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 pre{padding: 0;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-toggleable {background-color: white;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-item {z-index: 1;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-parallel-item:only-child::after {width: 0;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c35ab187-524c-47fd-8508-0457109eedd1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c35ab187-524c-47fd-8508-0457109eedd1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ad5e331-b5b8-4cdf-8db4-469e24f843d5" type="checkbox" ><label for="8ad5e331-b5b8-4cdf-8db4-469e24f843d5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7720dec9-2765-47d1-a3ff-a5df490e1535" type="checkbox" ><label for="7720dec9-2765-47d1-a3ff-a5df490e1535" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42113188-3e47-4ec0-8239-de2de2730a40" type="checkbox" ><label for="42113188-3e47-4ec0-8239-de2de2730a40" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab86a129-eb66-4f75-94e8-01678672dcee" type="checkbox" ><label for="ab86a129-eb66-4f75-94e8-01678672dcee" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="219009d1-6f12-45a3-a14d-bef361c28ea3" type="checkbox" ><label for="219009d1-6f12-45a3-a14d-bef361c28ea3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fab53b6-0dc6-4924-8637-ae4c5e6f7dbd" type="checkbox" ><label for="4fab53b6-0dc6-4924-8637-ae4c5e6f7dbd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aadc756a-6ec5-4873-988d-94665ed00b22" type="checkbox" ><label for="aadc756a-6ec5-4873-988d-94665ed00b22" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="447a2ca5-ef58-4bfb-8f80-142db07fa649" type="checkbox" ><label for="447a2ca5-ef58-4bfb-8f80-142db07fa649" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fcb2611-08b8-4797-809d-a6cece705ca8" type="checkbox" ><label for="1fcb2611-08b8-4797-809d-a6cece705ca8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 128-134

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 134-181

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc {color: black;background-color: white;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc pre{padding: 0;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-toggleable {background-color: white;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-estimator:hover {background-color: #d4ebff;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-item {z-index: 1;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-parallel-item:only-child::after {width: 0;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3f5327e7-dff9-4fba-b77e-81125c453bdc div.sk-text-repr-fallback {display: none;}</style><div id="sk-3f5327e7-dff9-4fba-b77e-81125c453bdc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f2b867a-b35c-4212-abaf-c7e32e298f18" type="checkbox" ><label for="7f2b867a-b35c-4212-abaf-c7e32e298f18" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6eda57f8-2c1d-4b96-a6a1-eed5fbf7a534" type="checkbox" ><label for="6eda57f8-2c1d-4b96-a6a1-eed5fbf7a534" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04b398fd-7665-4850-a0cc-a031f5d78db2" type="checkbox" ><label for="04b398fd-7665-4850-a0cc-a031f5d78db2" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b031108-f762-4559-a1a4-bf68bad455a2" type="checkbox" ><label for="9b031108-f762-4559-a1a4-bf68bad455a2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83ee34eb-f2fb-4836-9fd5-04483fe95647" type="checkbox" ><label for="83ee34eb-f2fb-4836-9fd5-04483fe95647" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e25f531-0742-4272-a6b9-7f8afd0f6e1e" type="checkbox" ><label for="9e25f531-0742-4272-a6b9-7f8afd0f6e1e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6f41b0b-74a3-4b89-b232-7f2de34fce16" type="checkbox" ><label for="d6f41b0b-74a3-4b89-b232-7f2de34fce16" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e063cabf-3050-4fb5-a410-6ff65e398c0b" type="checkbox" ><label for="e063cabf-3050-4fb5-a410-6ff65e398c0b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcae4b29-ad32-4490-a5b5-1b5a41c7a72d" type="checkbox" ><label for="bcae4b29-ad32-4490-a5b5-1b5a41c7a72d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9dfbad3-03ed-4f98-8791-ede200428d90" type="checkbox" ><label for="a9dfbad3-03ed-4f98-8791-ede200428d90" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.085 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
