
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 {color: black;background-color: white;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 pre{padding: 0;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-toggleable {background-color: white;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-item {z-index: 1;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-parallel-item:only-child::after {width: 0;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1798ecfa-7984-4011-aa7a-a570ff34a0b9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="200e36e1-7b25-4697-ab15-df488325c0ed" type="checkbox" ><label for="200e36e1-7b25-4697-ab15-df488325c0ed" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d19f6861-4438-4ad0-9c46-47884bb2da80" type="checkbox" ><label for="d19f6861-4438-4ad0-9c46-47884bb2da80" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c14f2059-c85e-4a86-a1aa-8ad76a882814" type="checkbox" ><label for="c14f2059-c85e-4a86-a1aa-8ad76a882814" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4471aad4-c570-41ae-928d-a323f557e742 {color: black;background-color: white;}#sk-4471aad4-c570-41ae-928d-a323f557e742 pre{padding: 0;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-toggleable {background-color: white;}#sk-4471aad4-c570-41ae-928d-a323f557e742 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4471aad4-c570-41ae-928d-a323f557e742 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4471aad4-c570-41ae-928d-a323f557e742 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4471aad4-c570-41ae-928d-a323f557e742 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4471aad4-c570-41ae-928d-a323f557e742 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4471aad4-c570-41ae-928d-a323f557e742 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-item {z-index: 1;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-parallel-item:only-child::after {width: 0;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4471aad4-c570-41ae-928d-a323f557e742 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4471aad4-c570-41ae-928d-a323f557e742" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79fa3292-c4b8-40ee-8d96-aa9450d1b8f7" type="checkbox" ><label for="79fa3292-c4b8-40ee-8d96-aa9450d1b8f7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="151a9f24-498a-4c3d-8ff9-cfb55967f7cd" type="checkbox" ><label for="151a9f24-498a-4c3d-8ff9-cfb55967f7cd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d859926-59a0-4141-8e1b-80376fb5f384" type="checkbox" ><label for="6d859926-59a0-4141-8e1b-80376fb5f384" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="addcd3cf-a4d9-4f2c-91ba-263b3107ee71" type="checkbox" ><label for="addcd3cf-a4d9-4f2c-91ba-263b3107ee71" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b {color: black;background-color: white;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b pre{padding: 0;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-toggleable {background-color: white;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-estimator:hover {background-color: #d4ebff;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-item {z-index: 1;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-parallel-item:only-child::after {width: 0;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b div.sk-text-repr-fallback {display: none;}</style><div id="sk-0f06fbf3-2723-4f94-a2f9-54e26a774e8b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13d83f96-d346-4666-9c4b-40c2277d30e7" type="checkbox" ><label for="13d83f96-d346-4666-9c4b-40c2277d30e7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6edb9270-1a51-40ca-95e8-2121e785fc4d" type="checkbox" ><label for="6edb9270-1a51-40ca-95e8-2121e785fc4d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a21b5000-2157-4404-a3fb-6e148652e8f7" type="checkbox" ><label for="a21b5000-2157-4404-a3fb-6e148652e8f7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba {color: black;background-color: white;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba pre{padding: 0;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-toggleable {background-color: white;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-estimator:hover {background-color: #d4ebff;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-item {z-index: 1;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-parallel-item:only-child::after {width: 0;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba div.sk-text-repr-fallback {display: none;}</style><div id="sk-07d382d2-cd32-49a6-b610-5f04eb4f87ba" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c6ae12c-b5e8-4412-9eef-c9656c61d495" type="checkbox" ><label for="6c6ae12c-b5e8-4412-9eef-c9656c61d495" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54f52b85-70b7-4306-85c4-9cebbf23ccd6" type="checkbox" ><label for="54f52b85-70b7-4306-85c4-9cebbf23ccd6" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="323b6fa4-fd8d-46e6-a838-a0e99d71e7f0" type="checkbox" ><label for="323b6fa4-fd8d-46e6-a838-a0e99d71e7f0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44fde34b-0c7e-4dc9-ae5e-6c282cb11fa7" type="checkbox" ><label for="44fde34b-0c7e-4dc9-ae5e-6c282cb11fa7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1f41bed-2602-4774-bac7-5ee54af9bcb5" type="checkbox" ><label for="d1f41bed-2602-4774-bac7-5ee54af9bcb5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="582b2157-576b-435f-8139-43315591f638" type="checkbox" ><label for="582b2157-576b-435f-8139-43315591f638" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c847d91-f66a-4ce8-ae4e-b5650f7a6ebb" type="checkbox" ><label for="1c847d91-f66a-4ce8-ae4e-b5650f7a6ebb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2756d4b0-a22b-44b7-a6c5-3da770dff29d" type="checkbox" ><label for="2756d4b0-a22b-44b7-a6c5-3da770dff29d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34db377e-70dd-4558-9184-b298f1657009" type="checkbox" ><label for="34db377e-70dd-4558-9184-b298f1657009" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e {color: black;background-color: white;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e pre{padding: 0;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-toggleable {background-color: white;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-estimator:hover {background-color: #d4ebff;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-item {z-index: 1;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-parallel-item:only-child::after {width: 0;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4a80f399-04a0-447d-a8ed-f1d052a8006e div.sk-text-repr-fallback {display: none;}</style><div id="sk-4a80f399-04a0-447d-a8ed-f1d052a8006e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad3bd56a-41bd-44dd-9e7c-95772ac6cfa4" type="checkbox" ><label for="ad3bd56a-41bd-44dd-9e7c-95772ac6cfa4" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1916e76-5479-4196-9542-167884938c75" type="checkbox" ><label for="e1916e76-5479-4196-9542-167884938c75" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40bac5c8-334a-4b32-a391-c2d588e5e6fa" type="checkbox" ><label for="40bac5c8-334a-4b32-a391-c2d588e5e6fa" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf7dfa38-fb84-45eb-91c8-45e9787a9e10" type="checkbox" ><label for="bf7dfa38-fb84-45eb-91c8-45e9787a9e10" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26afe0a5-9380-4ade-9af9-a915a90cbf27" type="checkbox" ><label for="26afe0a5-9380-4ade-9af9-a915a90cbf27" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbbb82b3-57bf-4ab5-964b-f8f7939a7d0a" type="checkbox" ><label for="cbbb82b3-57bf-4ab5-964b-f8f7939a7d0a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28dbfc84-3c2a-40df-96b2-91129bc7f628" type="checkbox" ><label for="28dbfc84-3c2a-40df-96b2-91129bc7f628" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55f32ea2-5ee3-44b2-94b0-597d7be8946a" type="checkbox" ><label for="55f32ea2-5ee3-44b2-94b0-597d7be8946a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b2f3862-0b17-43f9-8872-05ef9d839498" type="checkbox" ><label for="2b2f3862-0b17-43f9-8872-05ef9d839498" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
