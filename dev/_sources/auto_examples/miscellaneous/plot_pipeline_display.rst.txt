
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 {color: black;background-color: white;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 pre{padding: 0;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-toggleable {background-color: white;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-item {z-index: 1;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-parallel-item:only-child::after {width: 0;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-container {display: inline-block;position: relative;}#sk-b4464c65-98d0-4754-b671-6d8b4e135ca2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b4464c65-98d0-4754-b671-6d8b4e135ca2" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d4153ca-2fad-4a87-9731-49c3a1c9c36e" type="checkbox" ><label class="sk-toggleable__label" for="1d4153ca-2fad-4a87-9731-49c3a1c9c36e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8578c54-a1d6-4cd0-b619-bff7231a7896" type="checkbox" ><label class="sk-toggleable__label" for="c8578c54-a1d6-4cd0-b619-bff7231a7896">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbfe787c-2fb5-4b3b-b69e-48e34a4b2564" type="checkbox" ><label class="sk-toggleable__label" for="cbfe787c-2fb5-4b3b-b69e-48e34a4b2564">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 {color: black;background-color: white;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 pre{padding: 0;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-toggleable {background-color: white;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-estimator:hover {background-color: #d4ebff;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-item {z-index: 1;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-parallel-item:only-child::after {width: 0;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-container {display: inline-block;position: relative;}#sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519 div.sk-text-repr-fallback {display: none;}</style><div id="sk-97ee68c1-e4b9-4329-ba41-20c2e4cb3519" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbcc4b90-6d30-43d8-a348-c18ecbe1d79b" type="checkbox" ><label class="sk-toggleable__label" for="bbcc4b90-6d30-43d8-a348-c18ecbe1d79b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1bb8670e-1112-48c7-93a7-64afa5f67a4c" type="checkbox" ><label class="sk-toggleable__label" for="1bb8670e-1112-48c7-93a7-64afa5f67a4c">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce83aa7d-1403-4716-b68b-50768b3d86ee" type="checkbox" ><label class="sk-toggleable__label" for="ce83aa7d-1403-4716-b68b-50768b3d86ee">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="653b2dc8-7b00-49a9-b77e-ab5feb2c2cf5" type="checkbox" ><label class="sk-toggleable__label" for="653b2dc8-7b00-49a9-b77e-ab5feb2c2cf5">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab {color: black;background-color: white;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab pre{padding: 0;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-toggleable {background-color: white;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-estimator:hover {background-color: #d4ebff;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-item {z-index: 1;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-parallel-item:only-child::after {width: 0;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-container {display: inline-block;position: relative;}#sk-6262a8ff-3d40-4af7-829a-6eec35c895ab div.sk-text-repr-fallback {display: none;}</style><div id="sk-6262a8ff-3d40-4af7-829a-6eec35c895ab" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c8d2047-4856-4b98-b94f-6614b0b1e036" type="checkbox" ><label class="sk-toggleable__label" for="6c8d2047-4856-4b98-b94f-6614b0b1e036">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad4b9dba-86c7-4d29-8e4c-be31531b3342" type="checkbox" ><label class="sk-toggleable__label" for="ad4b9dba-86c7-4d29-8e4c-be31531b3342">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6da3576-3341-419e-9301-b0111bb5c06e" type="checkbox" ><label class="sk-toggleable__label" for="a6da3576-3341-419e-9301-b0111bb5c06e">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 {color: black;background-color: white;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 pre{padding: 0;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-toggleable {background-color: white;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-item {z-index: 1;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-parallel-item:only-child::after {width: 0;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-container {display: inline-block;position: relative;}#sk-46960a85-2b47-49db-98e3-58209f0ad4d5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-46960a85-2b47-49db-98e3-58209f0ad4d5" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e73c644-9541-4a89-82e1-e5f7cfcbef59" type="checkbox" ><label class="sk-toggleable__label" for="6e73c644-9541-4a89-82e1-e5f7cfcbef59">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="434ba722-d9d5-46cc-922a-0a74711d24b0" type="checkbox" ><label class="sk-toggleable__label" for="434ba722-d9d5-46cc-922a-0a74711d24b0">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74c64ae3-2265-452b-9a21-bc8039162c8f" type="checkbox" ><label class="sk-toggleable__label" for="74c64ae3-2265-452b-9a21-bc8039162c8f">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d0b93cb-8df9-42fa-bef9-eb3079b7582b" type="checkbox" ><label class="sk-toggleable__label" for="1d0b93cb-8df9-42fa-bef9-eb3079b7582b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8aa44b8-dd0b-444e-b7aa-9ebf1d7e3674" type="checkbox" ><label class="sk-toggleable__label" for="d8aa44b8-dd0b-444e-b7aa-9ebf1d7e3674">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a52df8b-52f6-41ee-9e8b-e5e15b2f4435" type="checkbox" ><label class="sk-toggleable__label" for="8a52df8b-52f6-41ee-9e8b-e5e15b2f4435">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d20a84b5-00b4-4eb9-abb4-c5ad551a5094" type="checkbox" ><label class="sk-toggleable__label" for="d20a84b5-00b4-4eb9-abb4-c5ad551a5094">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="509f8601-7b5b-4eef-b098-5458517610f3" type="checkbox" ><label class="sk-toggleable__label" for="509f8601-7b5b-4eef-b098-5458517610f3">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="288f34f7-5f06-4430-9376-de0f0ba5330d" type="checkbox" ><label class="sk-toggleable__label" for="288f34f7-5f06-4430-9376-de0f0ba5330d">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 {color: black;background-color: white;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 pre{padding: 0;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-toggleable {background-color: white;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-item {z-index: 1;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-parallel-item:only-child::after {width: 0;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-container {display: inline-block;position: relative;}#sk-3e9d5206-c1c3-47cf-8749-2804418042d3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3e9d5206-c1c3-47cf-8749-2804418042d3" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb90be17-bff1-4145-af27-e6995ee7df81" type="checkbox" ><label class="sk-toggleable__label" for="bb90be17-bff1-4145-af27-e6995ee7df81">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71433d69-58cb-4847-adf6-b00d428d21ca" type="checkbox" ><label class="sk-toggleable__label" for="71433d69-58cb-4847-adf6-b00d428d21ca">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08371515-39fa-4563-89c4-6297100198d6" type="checkbox" ><label class="sk-toggleable__label" for="08371515-39fa-4563-89c4-6297100198d6">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83c6e4e4-e392-4b47-a9c2-9b5afa82edd8" type="checkbox" ><label class="sk-toggleable__label" for="83c6e4e4-e392-4b47-a9c2-9b5afa82edd8">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2cb2ff3d-3a64-4709-b8a8-19db5b2429c0" type="checkbox" ><label class="sk-toggleable__label" for="2cb2ff3d-3a64-4709-b8a8-19db5b2429c0">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b7325fd-a7d0-429e-9f83-eaa2a1585f7d" type="checkbox" ><label class="sk-toggleable__label" for="8b7325fd-a7d0-429e-9f83-eaa2a1585f7d">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a8734b0-ee0f-4c4c-b67f-1658c6b130f0" type="checkbox" ><label class="sk-toggleable__label" for="7a8734b0-ee0f-4c4c-b67f-1658c6b130f0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0100beb-ddbf-480a-8721-c6235d2dc99b" type="checkbox" ><label class="sk-toggleable__label" for="b0100beb-ddbf-480a-8721-c6235d2dc99b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d031e60-615d-4c93-b988-eee3b84dd306" type="checkbox" ><label class="sk-toggleable__label" for="2d031e60-615d-4c93-b988-eee3b84dd306">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
