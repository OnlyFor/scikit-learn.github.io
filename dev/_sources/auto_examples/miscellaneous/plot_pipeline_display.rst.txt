
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-215db02b-8ff6-4c11-baaa-99b65584e301 {color: black;background-color: white;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 pre{padding: 0;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-toggleable {background-color: white;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-estimator:hover {background-color: #d4ebff;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-item {z-index: 1;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-parallel-item:only-child::after {width: 0;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-215db02b-8ff6-4c11-baaa-99b65584e301 div.sk-text-repr-fallback {display: none;}</style><div id="sk-215db02b-8ff6-4c11-baaa-99b65584e301" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89011e05-5380-45df-9491-ec91bfbdcd10" type="checkbox" ><label for="89011e05-5380-45df-9491-ec91bfbdcd10" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad761b1c-379d-4635-a262-a6152962a5d4" type="checkbox" ><label for="ad761b1c-379d-4635-a262-a6152962a5d4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="040273cb-37ac-4bbd-8626-3a0bbed4e805" type="checkbox" ><label for="040273cb-37ac-4bbd-8626-3a0bbed4e805" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc {color: black;background-color: white;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc pre{padding: 0;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-toggleable {background-color: white;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-estimator:hover {background-color: #d4ebff;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-item {z-index: 1;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-parallel-item:only-child::after {width: 0;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc div.sk-text-repr-fallback {display: none;}</style><div id="sk-25d65ea1-9972-42bc-b3e2-367ea281b9bc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d22ba42-5c75-46fa-a269-29668d326eb4" type="checkbox" ><label for="6d22ba42-5c75-46fa-a269-29668d326eb4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96dc52d4-5e58-4d62-8047-974a6affdf91" type="checkbox" ><label for="96dc52d4-5e58-4d62-8047-974a6affdf91" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01f6af0e-bcbb-4b17-9128-e7befebb03a7" type="checkbox" ><label for="01f6af0e-bcbb-4b17-9128-e7befebb03a7" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="405f1805-d7c0-4988-9d99-2399dc608e66" type="checkbox" ><label for="405f1805-d7c0-4988-9d99-2399dc608e66" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6be68820-f705-444c-8295-a13e0c597379 {color: black;background-color: white;}#sk-6be68820-f705-444c-8295-a13e0c597379 pre{padding: 0;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-toggleable {background-color: white;}#sk-6be68820-f705-444c-8295-a13e0c597379 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6be68820-f705-444c-8295-a13e0c597379 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6be68820-f705-444c-8295-a13e0c597379 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6be68820-f705-444c-8295-a13e0c597379 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6be68820-f705-444c-8295-a13e0c597379 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6be68820-f705-444c-8295-a13e0c597379 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-item {z-index: 1;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-parallel-item:only-child::after {width: 0;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6be68820-f705-444c-8295-a13e0c597379 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6be68820-f705-444c-8295-a13e0c597379" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3cef174a-50f3-4552-bf60-1a7149d3de00" type="checkbox" ><label for="3cef174a-50f3-4552-bf60-1a7149d3de00" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62f60f90-7735-42b8-83bf-f492e4f60d69" type="checkbox" ><label for="62f60f90-7735-42b8-83bf-f492e4f60d69" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="109ae5f6-9e59-4aba-ba4a-ad797b977d54" type="checkbox" ><label for="109ae5f6-9e59-4aba-ba4a-ad797b977d54" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a0c06121-c3b8-4394-92a4-545c707017a6 {color: black;background-color: white;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 pre{padding: 0;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-toggleable {background-color: white;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-item {z-index: 1;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-parallel-item:only-child::after {width: 0;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a0c06121-c3b8-4394-92a4-545c707017a6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a0c06121-c3b8-4394-92a4-545c707017a6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86d66ec3-371f-49c7-b379-e5a29a38553b" type="checkbox" ><label for="86d66ec3-371f-49c7-b379-e5a29a38553b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70603c1e-b3cf-41d1-a4d4-9145b725b658" type="checkbox" ><label for="70603c1e-b3cf-41d1-a4d4-9145b725b658" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73718ad0-dbd3-4513-83cd-ea3503d6c720" type="checkbox" ><label for="73718ad0-dbd3-4513-83cd-ea3503d6c720" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62a72f2a-5582-4430-be85-57c64c2fe93f" type="checkbox" ><label for="62a72f2a-5582-4430-be85-57c64c2fe93f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba0b52aa-cb5d-4a62-890c-681569b7cced" type="checkbox" ><label for="ba0b52aa-cb5d-4a62-890c-681569b7cced" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a33d0574-8d04-4302-a4e9-42eb36a40f80" type="checkbox" ><label for="a33d0574-8d04-4302-a4e9-42eb36a40f80" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bb15129-ed2d-4607-86f5-e3e4ac5a0a18" type="checkbox" ><label for="2bb15129-ed2d-4607-86f5-e3e4ac5a0a18" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8fd4bcd-d1a0-45f3-b333-8a545deeef8d" type="checkbox" ><label for="f8fd4bcd-d1a0-45f3-b333-8a545deeef8d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4a0a5f4-36bd-4d9b-99e5-a4a70847c545" type="checkbox" ><label for="f4a0a5f4-36bd-4d9b-99e5-a4a70847c545" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 {color: black;background-color: white;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 pre{padding: 0;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-toggleable {background-color: white;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-item {z-index: 1;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-parallel-item:only-child::after {width: 0;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-37f9222c-92fa-4f7a-8e5a-891fc6d325a0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7834a8d2-89d4-410e-a709-262469732c33" type="checkbox" ><label for="7834a8d2-89d4-410e-a709-262469732c33" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddc9fc5a-d12b-4846-90ff-05c3dbaac9c5" type="checkbox" ><label for="ddc9fc5a-d12b-4846-90ff-05c3dbaac9c5" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73222bfc-9af2-477f-8d42-57eb12c900d5" type="checkbox" ><label for="73222bfc-9af2-477f-8d42-57eb12c900d5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3c63d67-2278-47f2-b934-69623a76e5d6" type="checkbox" ><label for="b3c63d67-2278-47f2-b934-69623a76e5d6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66352a75-674d-477c-ade1-34b9f4a0fa55" type="checkbox" ><label for="66352a75-674d-477c-ade1-34b9f4a0fa55" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7e4e392-2c84-402d-b15e-f7363071bfb6" type="checkbox" ><label for="a7e4e392-2c84-402d-b15e-f7363071bfb6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdd1c735-8af9-4420-85b1-b1dd52c6ec15" type="checkbox" ><label for="cdd1c735-8af9-4420-85b1-b1dd52c6ec15" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0217ba50-db5e-4be1-976d-e334c9368f81" type="checkbox" ><label for="0217ba50-db5e-4be1-976d-e334c9368f81" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8d80f58-1f90-4d80-9bfb-f134ba89db60" type="checkbox" ><label for="f8d80f58-1f90-4d80-9bfb-f134ba89db60" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
