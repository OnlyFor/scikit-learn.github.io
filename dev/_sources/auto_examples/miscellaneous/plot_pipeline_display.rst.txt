
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline in a Jupyter Notebook is
`'diagram'` where `set_config(display='diagram')`. To deactivate HTML representation,
use `set_config(display='text')`.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To visualize the diagram, the default is `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 {color: black;background-color: white;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 pre{padding: 0;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-toggleable {background-color: white;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-item {z-index: 1;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-parallel-item:only-child::after {width: 0;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1adeac09-8247-4fa5-8351-8b143d71ebc8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1adeac09-8247-4fa5-8351-8b143d71ebc8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="588c67bd-1b7d-4bfd-a033-9781e07b2ac2" type="checkbox" ><label for="588c67bd-1b7d-4bfd-a033-9781e07b2ac2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="773111db-b3f3-4c36-b319-912ff08358f4" type="checkbox" ><label for="773111db-b3f3-4c36-b319-912ff08358f4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6673e83-27ba-4bf2-a82d-e077fc906312" type="checkbox" ><label for="a6673e83-27ba-4bf2-a82d-e077fc906312" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 39-40

To view the text pipeline, change to `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 44-45

Put back the default display

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 48-55

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifier step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 55-68

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b8420991-b24c-4f67-8ac1-475936963f99 {color: black;background-color: white;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 pre{padding: 0;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-toggleable {background-color: white;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-item {z-index: 1;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-parallel-item:only-child::after {width: 0;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b8420991-b24c-4f67-8ac1-475936963f99 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b8420991-b24c-4f67-8ac1-475936963f99" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f206ae13-abf3-4b4d-81df-21c9914f36e7" type="checkbox" ><label for="f206ae13-abf3-4b4d-81df-21c9914f36e7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1f5e733-abc4-48e9-95ab-8b3c5adf5926" type="checkbox" ><label for="c1f5e733-abc4-48e9-95ab-8b3c5adf5926" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31eb4260-16e1-4517-9942-53f673aded1e" type="checkbox" ><label for="31eb4260-16e1-4517-9942-53f673aded1e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a99b17a-8cb7-40bd-9a8d-21fdd7da2719" type="checkbox" ><label for="3a99b17a-8cb7-40bd-9a8d-21fdd7da2719" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-75

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 75-84

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 {color: black;background-color: white;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 pre{padding: 0;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-toggleable {background-color: white;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-item {z-index: 1;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-parallel-item:only-child::after {width: 0;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e3a14ae8-5dd4-4cc9-914e-925c9be06827" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aca23308-8412-4651-b6cd-730d90a2becf" type="checkbox" ><label for="aca23308-8412-4651-b6cd-730d90a2becf" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75471648-1091-498d-8b32-bc0c9ed1112c" type="checkbox" ><label for="75471648-1091-498d-8b32-bc0c9ed1112c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="456c0968-975c-4e59-830c-106684fe16c8" type="checkbox" ><label for="456c0968-975c-4e59-830c-106684fe16c8" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-91

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 91-127

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c {color: black;background-color: white;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c pre{padding: 0;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-toggleable {background-color: white;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-estimator:hover {background-color: #d4ebff;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-item {z-index: 1;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-parallel-item:only-child::after {width: 0;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c div.sk-text-repr-fallback {display: none;}</style><div id="sk-934ced87-fe98-4b7b-a525-cd6e2be1f38c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79c129bc-5b72-4457-ae2b-4429c7ad9122" type="checkbox" ><label for="79c129bc-5b72-4457-ae2b-4429c7ad9122" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="278cbef4-2279-487e-b27e-bac71d563b95" type="checkbox" ><label for="278cbef4-2279-487e-b27e-bac71d563b95" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd1aaaa7-1bbf-4e58-93f9-e54be2ef09e4" type="checkbox" ><label for="fd1aaaa7-1bbf-4e58-93f9-e54be2ef09e4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0ca1694-b07f-4ca9-be9c-81236e755103" type="checkbox" ><label for="c0ca1694-b07f-4ca9-be9c-81236e755103" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf675a67-fa0f-492f-a3e0-54015af6a623" type="checkbox" ><label for="cf675a67-fa0f-492f-a3e0-54015af6a623" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bbed870-fbe4-49c8-8579-20a5c6b1a07a" type="checkbox" ><label for="9bbed870-fbe4-49c8-8579-20a5c6b1a07a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c8bcfe9-b156-450f-b8eb-b8e4122e6560" type="checkbox" ><label for="7c8bcfe9-b156-450f-b8eb-b8e4122e6560" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a2ba757-95d0-4b4d-b222-08a7e927cf5f" type="checkbox" ><label for="2a2ba757-95d0-4b4d-b222-08a7e927cf5f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4c9055a-1f9c-45e6-8e82-819094a920b2" type="checkbox" ><label for="c4c9055a-1f9c-45e6-8e82-819094a920b2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 128-134

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 134-181

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d8244c33-1a9d-4174-8182-84d0d265f529 {color: black;background-color: white;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 pre{padding: 0;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-toggleable {background-color: white;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-item {z-index: 1;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-parallel-item:only-child::after {width: 0;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d8244c33-1a9d-4174-8182-84d0d265f529 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d8244c33-1a9d-4174-8182-84d0d265f529" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff972945-ec77-4293-81ac-b08e5f5fa8c0" type="checkbox" ><label for="ff972945-ec77-4293-81ac-b08e5f5fa8c0" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23486596-00f3-4c23-8366-f2348742aa6f" type="checkbox" ><label for="23486596-00f3-4c23-8366-f2348742aa6f" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eedd27ea-0255-47b7-be48-c5e064fe0b05" type="checkbox" ><label for="eedd27ea-0255-47b7-be48-c5e064fe0b05" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc77e128-cda8-45ab-8f3f-7fd46546b3a3" type="checkbox" ><label for="dc77e128-cda8-45ab-8f3f-7fd46546b3a3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bdd28df-d4c1-4df5-972b-de5b0334d6e2" type="checkbox" ><label for="5bdd28df-d4c1-4df5-972b-de5b0334d6e2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9255620e-30a0-4cf5-98b7-5732cdec8fd3" type="checkbox" ><label for="9255620e-30a0-4cf5-98b7-5732cdec8fd3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba6dfa25-e3fd-4c88-96e8-5788960e26bc" type="checkbox" ><label for="ba6dfa25-e3fd-4c88-96e8-5788960e26bc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9194574-de28-4f26-9a39-89793672c190" type="checkbox" ><label for="a9194574-de28-4f26-9a39-89793672c190" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54d793e7-57da-4f74-8465-57f426896cf1" type="checkbox" ><label for="54d793e7-57da-4f74-8465-57f426896cf1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cce73d54-4293-4bf6-8261-6b3e1f0c77f7" type="checkbox" ><label for="cce73d54-4293-4bf6-8261-6b3e1f0c77f7" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.088 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
