
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 {color: black;background-color: white;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 pre{padding: 0;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-toggleable {background-color: white;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-estimator:hover {background-color: #d4ebff;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-item {z-index: 1;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-parallel-item:only-child::after {width: 0;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-af0aff71-3ccf-48d0-8787-67a96b83ed77 div.sk-text-repr-fallback {display: none;}</style><div id="sk-af0aff71-3ccf-48d0-8787-67a96b83ed77" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e78bb645-edbd-4e16-8bdf-3a61d18db79b" type="checkbox" ><label for="e78bb645-edbd-4e16-8bdf-3a61d18db79b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02809ffe-5a27-468d-b67b-7bffe3166aec" type="checkbox" ><label for="02809ffe-5a27-468d-b67b-7bffe3166aec" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9df13da0-2930-4233-807c-5a7d28a3aab0" type="checkbox" ><label for="9df13da0-2930-4233-807c-5a7d28a3aab0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9d8ef35c-beaa-4038-ae11-3308469e883b {color: black;background-color: white;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b pre{padding: 0;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-toggleable {background-color: white;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-estimator:hover {background-color: #d4ebff;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-item {z-index: 1;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-parallel-item:only-child::after {width: 0;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9d8ef35c-beaa-4038-ae11-3308469e883b div.sk-text-repr-fallback {display: none;}</style><div id="sk-9d8ef35c-beaa-4038-ae11-3308469e883b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1eeffb3f-9763-4328-a447-a3be330d75ba" type="checkbox" ><label for="1eeffb3f-9763-4328-a447-a3be330d75ba" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f269d1e-0094-4626-94f6-2416fbcebf0b" type="checkbox" ><label for="0f269d1e-0094-4626-94f6-2416fbcebf0b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c57581b-9b46-4176-a440-ebf0b0a90666" type="checkbox" ><label for="0c57581b-9b46-4176-a440-ebf0b0a90666" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d729621e-30ef-48a1-8440-600468d0ddf5" type="checkbox" ><label for="d729621e-30ef-48a1-8440-600468d0ddf5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 {color: black;background-color: white;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 pre{padding: 0;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-toggleable {background-color: white;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-item {z-index: 1;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-parallel-item:only-child::after {width: 0;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bc499e85-e4f4-4cbe-b071-b03c2c9420c6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60cfd46c-6567-4a09-aed2-81a1738b2bb6" type="checkbox" ><label for="60cfd46c-6567-4a09-aed2-81a1738b2bb6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42a9cd07-8732-401c-8d05-494fa85f002d" type="checkbox" ><label for="42a9cd07-8732-401c-8d05-494fa85f002d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e00c427c-712a-4197-ae38-cc711dee6dcd" type="checkbox" ><label for="e00c427c-712a-4197-ae38-cc711dee6dcd" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-554283a2-174b-4479-8207-ebfc9c9526f4 {color: black;background-color: white;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 pre{padding: 0;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-toggleable {background-color: white;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-item {z-index: 1;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-parallel-item:only-child::after {width: 0;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-554283a2-174b-4479-8207-ebfc9c9526f4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-554283a2-174b-4479-8207-ebfc9c9526f4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d9f2d0b-9136-4f34-965b-a99deaecb388" type="checkbox" ><label for="3d9f2d0b-9136-4f34-965b-a99deaecb388" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="289b234a-4446-432c-9733-c5f6ec27ac94" type="checkbox" ><label for="289b234a-4446-432c-9733-c5f6ec27ac94" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f81eb3e3-94c0-4398-9927-ede106e19ade" type="checkbox" ><label for="f81eb3e3-94c0-4398-9927-ede106e19ade" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21cef9f7-2e94-4292-953b-4dd04e5f4f92" type="checkbox" ><label for="21cef9f7-2e94-4292-953b-4dd04e5f4f92" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bfd9a7d-529f-4ff2-a5a6-b719b8860fdd" type="checkbox" ><label for="4bfd9a7d-529f-4ff2-a5a6-b719b8860fdd" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e42fd9c-aa3a-43d4-9081-636eb0cdba60" type="checkbox" ><label for="2e42fd9c-aa3a-43d4-9081-636eb0cdba60" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c5ed9ff-57ab-4087-8b78-04168c93ade5" type="checkbox" ><label for="3c5ed9ff-57ab-4087-8b78-04168c93ade5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="938f62ce-a3b6-4150-bb28-dbb46eb63587" type="checkbox" ><label for="938f62ce-a3b6-4150-bb28-dbb46eb63587" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="543bec4b-0ccc-4be3-98a0-ae887154268e" type="checkbox" ><label for="543bec4b-0ccc-4be3-98a0-ae887154268e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c {color: black;background-color: white;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c pre{padding: 0;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-toggleable {background-color: white;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-estimator:hover {background-color: #d4ebff;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-item {z-index: 1;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-parallel-item:only-child::after {width: 0;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c div.sk-text-repr-fallback {display: none;}</style><div id="sk-5bf6ab2b-0d3a-441d-9722-62c311bfed2c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc9d66f0-46af-47f8-b0eb-02787a2f7850" type="checkbox" ><label for="fc9d66f0-46af-47f8-b0eb-02787a2f7850" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea905b99-bb8e-4ccf-826a-5486572a717f" type="checkbox" ><label for="ea905b99-bb8e-4ccf-826a-5486572a717f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca022c77-f978-43e4-8847-d4d397e670a1" type="checkbox" ><label for="ca022c77-f978-43e4-8847-d4d397e670a1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91acb45a-a205-4b0e-b1da-ab9f7b650602" type="checkbox" ><label for="91acb45a-a205-4b0e-b1da-ab9f7b650602" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bab8f9aa-3b7a-46b9-94c2-3097eea42101" type="checkbox" ><label for="bab8f9aa-3b7a-46b9-94c2-3097eea42101" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d245fe4-1805-4abe-a4bb-75771757ce9d" type="checkbox" ><label for="5d245fe4-1805-4abe-a4bb-75771757ce9d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d83d414-3128-4557-a6c4-8db51cf684a5" type="checkbox" ><label for="3d83d414-3128-4557-a6c4-8db51cf684a5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5cc6294-0f31-4d40-8c5a-034b537750ea" type="checkbox" ><label for="a5cc6294-0f31-4d40-8c5a-034b537750ea" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5938ec96-9e6a-4d66-bade-dfbba21bfa24" type="checkbox" ><label for="5938ec96-9e6a-4d66-bade-dfbba21bfa24" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
