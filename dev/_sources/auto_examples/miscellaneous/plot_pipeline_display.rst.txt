
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a {color: black;background-color: white;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a pre{padding: 0;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-toggleable {background-color: white;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-estimator:hover {background-color: #d4ebff;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-item {z-index: 1;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-parallel-item:only-child::after {width: 0;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a div.sk-text-repr-fallback {display: none;}</style><div id="sk-7d975250-6d2b-42a6-b5fa-4a3c795aad7a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd6f3348-d624-42d3-b1f2-d50a29fd760e" type="checkbox" ><label for="cd6f3348-d624-42d3-b1f2-d50a29fd760e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44fad7ea-f3f2-47f5-b4e3-fdd1cd6e4ed1" type="checkbox" ><label for="44fad7ea-f3f2-47f5-b4e3-fdd1cd6e4ed1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55427f8a-4bce-43b4-8953-4ca35759bf75" type="checkbox" ><label for="55427f8a-4bce-43b4-8953-4ca35759bf75" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b {color: black;background-color: white;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b pre{padding: 0;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-toggleable {background-color: white;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-estimator:hover {background-color: #d4ebff;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-item {z-index: 1;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-parallel-item:only-child::after {width: 0;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b div.sk-text-repr-fallback {display: none;}</style><div id="sk-e7e3021b-99ff-4e27-8165-7208f6aa8e4b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7dd15b34-a4d1-4b53-a7b0-41a3de459f09" type="checkbox" ><label for="7dd15b34-a4d1-4b53-a7b0-41a3de459f09" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ac678a0-1e82-48ac-9f05-b80a41d4c91b" type="checkbox" ><label for="5ac678a0-1e82-48ac-9f05-b80a41d4c91b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52270225-bb5d-4e93-b043-cc333dcba678" type="checkbox" ><label for="52270225-bb5d-4e93-b043-cc333dcba678" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32b4297f-bd69-4bbe-9142-3c678c3d4e84" type="checkbox" ><label for="32b4297f-bd69-4bbe-9142-3c678c3d4e84" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c {color: black;background-color: white;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c pre{padding: 0;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-toggleable {background-color: white;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-estimator:hover {background-color: #d4ebff;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-item {z-index: 1;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-parallel-item:only-child::after {width: 0;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c div.sk-text-repr-fallback {display: none;}</style><div id="sk-dff0b4dc-31d7-422c-af5a-16a790d0bc0c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="656aa2f7-bf4b-4d11-bfdd-1feb11add9e6" type="checkbox" ><label for="656aa2f7-bf4b-4d11-bfdd-1feb11add9e6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52166925-dd0b-4fbb-83cf-8afb46f12b2f" type="checkbox" ><label for="52166925-dd0b-4fbb-83cf-8afb46f12b2f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a999cb62-7b24-4837-ae2d-312a98bbaca2" type="checkbox" ><label for="a999cb62-7b24-4837-ae2d-312a98bbaca2" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda {color: black;background-color: white;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda pre{padding: 0;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-toggleable {background-color: white;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-estimator:hover {background-color: #d4ebff;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-item {z-index: 1;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-parallel-item:only-child::after {width: 0;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda div.sk-text-repr-fallback {display: none;}</style><div id="sk-9ea80953-8e9a-4ac0-af2a-cecc06722bda" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82c14b0a-9c01-4f84-a990-0f3d0d6adb6f" type="checkbox" ><label for="82c14b0a-9c01-4f84-a990-0f3d0d6adb6f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fb3bf43-2d4d-4640-8a0a-428e62b87074" type="checkbox" ><label for="0fb3bf43-2d4d-4640-8a0a-428e62b87074" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c791eaa1-8365-4212-abed-56bec8c9b9be" type="checkbox" ><label for="c791eaa1-8365-4212-abed-56bec8c9b9be" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5aaf2671-2da5-40b5-8464-0edca8d5ee70" type="checkbox" ><label for="5aaf2671-2da5-40b5-8464-0edca8d5ee70" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="668c32ae-5b08-4b88-8b3f-d14d68a6d030" type="checkbox" ><label for="668c32ae-5b08-4b88-8b3f-d14d68a6d030" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d638212f-c289-4006-83ed-7361da3dbc55" type="checkbox" ><label for="d638212f-c289-4006-83ed-7361da3dbc55" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3786b646-3191-4b23-ad8f-ec777d83cbcb" type="checkbox" ><label for="3786b646-3191-4b23-ad8f-ec777d83cbcb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3714e72-ec1d-403c-b9f7-eafb22076bf1" type="checkbox" ><label for="a3714e72-ec1d-403c-b9f7-eafb22076bf1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="641155fd-fdb3-441f-9a3f-eef4034deff6" type="checkbox" ><label for="641155fd-fdb3-441f-9a3f-eef4034deff6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f {color: black;background-color: white;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f pre{padding: 0;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-toggleable {background-color: white;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-estimator:hover {background-color: #d4ebff;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-item {z-index: 1;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-parallel-item:only-child::after {width: 0;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f div.sk-text-repr-fallback {display: none;}</style><div id="sk-97c4faa2-9a4f-4c74-a8d6-ac00243c411f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a848e1db-52ca-4935-9bcb-5e979511a898" type="checkbox" ><label for="a848e1db-52ca-4935-9bcb-5e979511a898" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b2fb40a-4d12-4b22-8841-1026e6a21361" type="checkbox" ><label for="7b2fb40a-4d12-4b22-8841-1026e6a21361" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a91c6e7-979f-481f-bd83-4b8e03942c30" type="checkbox" ><label for="9a91c6e7-979f-481f-bd83-4b8e03942c30" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b3934e9-fb3e-404a-9ddc-0ba9f87b7824" type="checkbox" ><label for="8b3934e9-fb3e-404a-9ddc-0ba9f87b7824" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a59d7c7-7700-48c7-bbf1-b17d39cf6231" type="checkbox" ><label for="0a59d7c7-7700-48c7-bbf1-b17d39cf6231" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d135c72-b457-4db7-8174-1b070ecc93af" type="checkbox" ><label for="9d135c72-b457-4db7-8174-1b070ecc93af" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f43bed16-554b-4db9-aa48-5d8375b824f5" type="checkbox" ><label for="f43bed16-554b-4db9-aa48-5d8375b824f5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="748b54ac-33d0-44bc-bf81-6b1627968887" type="checkbox" ><label for="748b54ac-33d0-44bc-bf81-6b1627968887" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea0e14b8-6763-4afe-8371-6d67f2beb083" type="checkbox" ><label for="ea0e14b8-6763-4afe-8371-6d67f2beb083" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
