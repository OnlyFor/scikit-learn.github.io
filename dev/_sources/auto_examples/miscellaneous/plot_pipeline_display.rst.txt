
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 {color: black;background-color: white;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 pre{padding: 0;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-toggleable {background-color: white;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-item {z-index: 1;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-parallel-item:only-child::after {width: 0;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f54a8c93-c144-48a1-8d67-546e5b645bb3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f54a8c93-c144-48a1-8d67-546e5b645bb3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4311d4a2-4502-42ad-8580-6e7a242f83d0" type="checkbox" ><label for="4311d4a2-4502-42ad-8580-6e7a242f83d0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dba85c0b-b129-462f-adfb-874bd3d0b311" type="checkbox" ><label for="dba85c0b-b129-462f-adfb-874bd3d0b311" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="184a3cfa-6828-49f6-8c94-6bb72966d8a4" type="checkbox" ><label for="184a3cfa-6828-49f6-8c94-6bb72966d8a4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc {color: black;background-color: white;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc pre{padding: 0;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-toggleable {background-color: white;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-estimator:hover {background-color: #d4ebff;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-item {z-index: 1;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-parallel-item:only-child::after {width: 0;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-767d1307-3256-4ad5-9452-e7f1f3357dbc div.sk-text-repr-fallback {display: none;}</style><div id="sk-767d1307-3256-4ad5-9452-e7f1f3357dbc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d27aef3-3312-4f43-87c9-300846e27bb1" type="checkbox" ><label for="6d27aef3-3312-4f43-87c9-300846e27bb1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22b1a8a9-bc66-406c-a8d6-6ac5a3447725" type="checkbox" ><label for="22b1a8a9-bc66-406c-a8d6-6ac5a3447725" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c850f1bd-df38-4744-9dd7-ff20912e1dfe" type="checkbox" ><label for="c850f1bd-df38-4744-9dd7-ff20912e1dfe" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e4f5173-7a96-406e-8cc5-b1996f889da1" type="checkbox" ><label for="1e4f5173-7a96-406e-8cc5-b1996f889da1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 {color: black;background-color: white;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 pre{padding: 0;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-toggleable {background-color: white;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-estimator:hover {background-color: #d4ebff;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-item {z-index: 1;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-parallel-item:only-child::after {width: 0;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14 div.sk-text-repr-fallback {display: none;}</style><div id="sk-68d7fa85-5b96-4fed-a6c1-9fae5f40ce14" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4a88e2d-7cc7-49dd-8f81-e36f73de5ada" type="checkbox" ><label for="d4a88e2d-7cc7-49dd-8f81-e36f73de5ada" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f9d15d2-f86d-4b35-a4c3-059de91e9cc7" type="checkbox" ><label for="4f9d15d2-f86d-4b35-a4c3-059de91e9cc7" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77e8978a-b2ab-47af-a4dc-3c71315aa5b5" type="checkbox" ><label for="77e8978a-b2ab-47af-a4dc-3c71315aa5b5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f {color: black;background-color: white;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f pre{padding: 0;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-toggleable {background-color: white;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-estimator:hover {background-color: #d4ebff;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-item {z-index: 1;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-parallel-item:only-child::after {width: 0;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f div.sk-text-repr-fallback {display: none;}</style><div id="sk-1ee874d6-5c0b-450a-b66c-4222dbb78a7f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82b3179b-1a15-4c4a-8f92-32ac93c689c2" type="checkbox" ><label for="82b3179b-1a15-4c4a-8f92-32ac93c689c2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d0b1011-71b7-4f17-a421-b89827f2a75d" type="checkbox" ><label for="4d0b1011-71b7-4f17-a421-b89827f2a75d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="059a1dd7-6638-4c6c-b17a-e09e86851202" type="checkbox" ><label for="059a1dd7-6638-4c6c-b17a-e09e86851202" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a2eaa10-f82d-4263-a45e-2e55c9987c6e" type="checkbox" ><label for="6a2eaa10-f82d-4263-a45e-2e55c9987c6e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68de1115-607f-4e83-adbb-1ca5b6ab47ba" type="checkbox" ><label for="68de1115-607f-4e83-adbb-1ca5b6ab47ba" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20a2fb73-3339-4c4e-92bd-35f8ac862ddf" type="checkbox" ><label for="20a2fb73-3339-4c4e-92bd-35f8ac862ddf" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9024fa40-65db-4656-8efc-79f10aa8976a" type="checkbox" ><label for="9024fa40-65db-4656-8efc-79f10aa8976a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb7a2706-4429-434f-bc29-454edf5bc183" type="checkbox" ><label for="bb7a2706-4429-434f-bc29-454edf5bc183" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00bc5eba-3514-4746-a38c-69d6b1d056aa" type="checkbox" ><label for="00bc5eba-3514-4746-a38c-69d6b1d056aa" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 {color: black;background-color: white;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 pre{padding: 0;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-toggleable {background-color: white;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-item {z-index: 1;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-parallel-item:only-child::after {width: 0;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9627bfc6-e9f9-4044-9471-349abc32c4f4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9627bfc6-e9f9-4044-9471-349abc32c4f4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="246cff64-353b-4aa1-9a07-1084093133ae" type="checkbox" ><label for="246cff64-353b-4aa1-9a07-1084093133ae" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f69642c-c590-484a-ade0-2fedece354e2" type="checkbox" ><label for="6f69642c-c590-484a-ade0-2fedece354e2" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="746b6ba2-ade4-4bfc-9315-3b5feec569f2" type="checkbox" ><label for="746b6ba2-ade4-4bfc-9315-3b5feec569f2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e04c996-9ee6-4c7c-b882-93d11e55adfc" type="checkbox" ><label for="7e04c996-9ee6-4c7c-b882-93d11e55adfc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="463eb9b8-60e9-48d6-98a2-cb675bb143aa" type="checkbox" ><label for="463eb9b8-60e9-48d6-98a2-cb675bb143aa" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="080f89b1-bad6-4011-bc1d-d7ca31535d82" type="checkbox" ><label for="080f89b1-bad6-4011-bc1d-d7ca31535d82" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07357003-f474-4be9-aa28-dd9a8e5b6962" type="checkbox" ><label for="07357003-f474-4be9-aa28-dd9a8e5b6962" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a4ca10e-a27f-46dd-bcd8-fe2de1f65b7f" type="checkbox" ><label for="7a4ca10e-a27f-46dd-bcd8-fe2de1f65b7f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71cc8118-b175-4bc7-b455-f5435020ae60" type="checkbox" ><label for="71cc8118-b175-4bc7-b455-f5435020ae60" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
