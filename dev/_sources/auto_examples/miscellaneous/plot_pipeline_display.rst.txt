
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 {color: black;background-color: white;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 pre{padding: 0;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-toggleable {background-color: white;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-item {z-index: 1;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-parallel-item:only-child::after {width: 0;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6df26ca0-3699-48a0-a39c-365c2e4d1470 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6df26ca0-3699-48a0-a39c-365c2e4d1470" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b928c26-d335-48bd-8b87-b72e58b54058" type="checkbox" ><label for="7b928c26-d335-48bd-8b87-b72e58b54058" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82927aab-c17e-4aeb-ade1-aebb4ec1a37d" type="checkbox" ><label for="82927aab-c17e-4aeb-ade1-aebb4ec1a37d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dda7031f-5465-4756-afde-489c5038a437" type="checkbox" ><label for="dda7031f-5465-4756-afde-489c5038a437" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4fbe7e65-d791-420e-aabe-71223e868849 {color: black;background-color: white;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 pre{padding: 0;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-toggleable {background-color: white;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-item {z-index: 1;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-parallel-item:only-child::after {width: 0;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4fbe7e65-d791-420e-aabe-71223e868849 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4fbe7e65-d791-420e-aabe-71223e868849" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdcd1bfd-941e-48d2-80f3-28b0cc82f3c5" type="checkbox" ><label for="bdcd1bfd-941e-48d2-80f3-28b0cc82f3c5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b335766e-b936-4105-ba7e-ee9493960777" type="checkbox" ><label for="b335766e-b936-4105-ba7e-ee9493960777" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05d8e0e6-64eb-4cf8-9f52-6513f460ced6" type="checkbox" ><label for="05d8e0e6-64eb-4cf8-9f52-6513f460ced6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fa370ed-a372-4b95-8e64-d9e58ea471c6" type="checkbox" ><label for="7fa370ed-a372-4b95-8e64-d9e58ea471c6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f {color: black;background-color: white;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f pre{padding: 0;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-toggleable {background-color: white;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-estimator:hover {background-color: #d4ebff;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-item {z-index: 1;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-parallel-item:only-child::after {width: 0;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fd48cc7c-3131-4f44-b620-375f8c958b6f div.sk-text-repr-fallback {display: none;}</style><div id="sk-fd48cc7c-3131-4f44-b620-375f8c958b6f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8a776c8-4532-464e-a90a-4a574c829526" type="checkbox" ><label for="e8a776c8-4532-464e-a90a-4a574c829526" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="479ed19c-d8fa-431b-a296-615f01dd8933" type="checkbox" ><label for="479ed19c-d8fa-431b-a296-615f01dd8933" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee56d52e-a88a-4d4a-8c9f-64a090990b16" type="checkbox" ><label for="ee56d52e-a88a-4d4a-8c9f-64a090990b16" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 {color: black;background-color: white;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 pre{padding: 0;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-toggleable {background-color: white;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-item {z-index: 1;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-parallel-item:only-child::after {width: 0;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dcfef557-4ab2-4b8e-9be4-ecdbbd153b19" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b05aeee-3fbe-4f05-ae09-f5a8b134b429" type="checkbox" ><label for="4b05aeee-3fbe-4f05-ae09-f5a8b134b429" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad07082e-47b4-4a94-87a4-0bdbc730fab2" type="checkbox" ><label for="ad07082e-47b4-4a94-87a4-0bdbc730fab2" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77b5b155-d7bc-4b68-9cd5-554847c603d0" type="checkbox" ><label for="77b5b155-d7bc-4b68-9cd5-554847c603d0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80bca0ad-6f08-4973-bc8f-3bebc71691a3" type="checkbox" ><label for="80bca0ad-6f08-4973-bc8f-3bebc71691a3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="189db731-38fb-4872-a59b-55eccf39f639" type="checkbox" ><label for="189db731-38fb-4872-a59b-55eccf39f639" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37816685-a506-46e6-8374-ade307b636bd" type="checkbox" ><label for="37816685-a506-46e6-8374-ade307b636bd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc64061b-cf10-423b-94cf-f972753b92bc" type="checkbox" ><label for="cc64061b-cf10-423b-94cf-f972753b92bc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="585a906b-779b-4a09-ac57-d0e6755a6705" type="checkbox" ><label for="585a906b-779b-4a09-ac57-d0e6755a6705" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ceaf9c0c-d252-418d-bb01-f63fb75272c4" type="checkbox" ><label for="ceaf9c0c-d252-418d-bb01-f63fb75272c4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 {color: black;background-color: white;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 pre{padding: 0;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-toggleable {background-color: white;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-item {z-index: 1;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-parallel-item:only-child::after {width: 0;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eba0c2e0-2b7a-49de-b188-f574909e3f64 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eba0c2e0-2b7a-49de-b188-f574909e3f64" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd7cde2c-8de3-4839-b3e1-c2d9539f4ea8" type="checkbox" ><label for="dd7cde2c-8de3-4839-b3e1-c2d9539f4ea8" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6664d055-9d3f-435c-9b29-120138082e98" type="checkbox" ><label for="6664d055-9d3f-435c-9b29-120138082e98" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9971646-af84-4bc5-b2ef-9f2e1d01aef4" type="checkbox" ><label for="d9971646-af84-4bc5-b2ef-9f2e1d01aef4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fd5576b-e54e-4625-95cc-9c9d89ec179b" type="checkbox" ><label for="0fd5576b-e54e-4625-95cc-9c9d89ec179b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e942cce6-6dd6-44af-8eb8-db549c0525ef" type="checkbox" ><label for="e942cce6-6dd6-44af-8eb8-db549c0525ef" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d09c020-61c3-4e1b-9bf8-ccf76d6cafc2" type="checkbox" ><label for="6d09c020-61c3-4e1b-9bf8-ccf76d6cafc2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a15b1295-a66d-466b-9eb0-dd8334e7d10a" type="checkbox" ><label for="a15b1295-a66d-466b-9eb0-dd8334e7d10a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfdfaea4-ea06-41b3-99f1-44f546dcff6d" type="checkbox" ><label for="cfdfaea4-ea06-41b3-99f1-44f546dcff6d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5de84fe6-4778-4d5e-80c6-75a21f4d28bc" type="checkbox" ><label for="5de84fe6-4778-4d5e-80c6-75a21f4d28bc" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.127 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
