
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a {color: black;background-color: white;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a pre{padding: 0;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-toggleable {background-color: white;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-estimator:hover {background-color: #d4ebff;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-item {z-index: 1;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-parallel-item:only-child::after {width: 0;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8e256a68-3648-47ef-867a-1bea5a2acd0a div.sk-text-repr-fallback {display: none;}</style><div id="sk-8e256a68-3648-47ef-867a-1bea5a2acd0a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ac4a3d2-d3ba-4118-880e-04c2cca1d6ab" type="checkbox" ><label for="0ac4a3d2-d3ba-4118-880e-04c2cca1d6ab" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae0001f1-669c-4a93-a7d1-49efa1b06d8f" type="checkbox" ><label for="ae0001f1-669c-4a93-a7d1-49efa1b06d8f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbdc2267-a8a0-4e7f-ba16-1cb95b01c08e" type="checkbox" ><label for="fbdc2267-a8a0-4e7f-ba16-1cb95b01c08e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 {color: black;background-color: white;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 pre{padding: 0;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-toggleable {background-color: white;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-item {z-index: 1;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-parallel-item:only-child::after {width: 0;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b15e4bf1-00fb-4f7a-b207-29be9d873136 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b15e4bf1-00fb-4f7a-b207-29be9d873136" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5330b9c-a70a-4a1e-a2b4-b40be41254f2" type="checkbox" ><label for="a5330b9c-a70a-4a1e-a2b4-b40be41254f2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da06bb9c-288f-42db-b19b-beaf9db72c67" type="checkbox" ><label for="da06bb9c-288f-42db-b19b-beaf9db72c67" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec982d1d-5f87-42ac-a681-e899c06eb8c8" type="checkbox" ><label for="ec982d1d-5f87-42ac-a681-e899c06eb8c8" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22218890-3700-4c40-91e8-c6fa908a8036" type="checkbox" ><label for="22218890-3700-4c40-91e8-c6fa908a8036" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 {color: black;background-color: white;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 pre{padding: 0;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-toggleable {background-color: white;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-item {z-index: 1;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-parallel-item:only-child::after {width: 0;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-60be8e6f-0bbe-48b4-bd86-1f42bd05c9e3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43d58572-5ad3-43bb-a56a-f6c11bedd955" type="checkbox" ><label for="43d58572-5ad3-43bb-a56a-f6c11bedd955" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="111c6e2b-6fe7-480c-ac46-9455f564377f" type="checkbox" ><label for="111c6e2b-6fe7-480c-ac46-9455f564377f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4965ffe-f4f9-494c-b96c-636fbf727bbe" type="checkbox" ><label for="f4965ffe-f4f9-494c-b96c-636fbf727bbe" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 {color: black;background-color: white;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 pre{padding: 0;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-toggleable {background-color: white;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-item {z-index: 1;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-parallel-item:only-child::after {width: 0;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3a9f26a7-53b9-44ea-805e-66527c99e902 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3a9f26a7-53b9-44ea-805e-66527c99e902" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="caabda3b-2ef5-4858-9e98-158eadc3ed7e" type="checkbox" ><label for="caabda3b-2ef5-4858-9e98-158eadc3ed7e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88e01c90-addd-41b6-bf04-c12bd8a58064" type="checkbox" ><label for="88e01c90-addd-41b6-bf04-c12bd8a58064" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7186c71f-31ef-48e4-9c2d-df61c1237e55" type="checkbox" ><label for="7186c71f-31ef-48e4-9c2d-df61c1237e55" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6dfc4c6-b7ad-4f7a-86a1-bea20c4fbf35" type="checkbox" ><label for="d6dfc4c6-b7ad-4f7a-86a1-bea20c4fbf35" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0bfe0b9-8e37-4d2c-a279-444ab321e53e" type="checkbox" ><label for="c0bfe0b9-8e37-4d2c-a279-444ab321e53e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="594c2fb3-6690-4ed9-b740-2b3ab7106d54" type="checkbox" ><label for="594c2fb3-6690-4ed9-b740-2b3ab7106d54" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d1ec1b8-7d4e-4999-b03f-1f3fb2102d77" type="checkbox" ><label for="9d1ec1b8-7d4e-4999-b03f-1f3fb2102d77" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5822d5bd-fba0-41cb-8391-7cc2a3b2def5" type="checkbox" ><label for="5822d5bd-fba0-41cb-8391-7cc2a3b2def5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2f0bd40-9c3f-461c-ab72-902e9d99417f" type="checkbox" ><label for="f2f0bd40-9c3f-461c-ab72-902e9d99417f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 {color: black;background-color: white;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 pre{padding: 0;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-toggleable {background-color: white;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-item {z-index: 1;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-parallel-item:only-child::after {width: 0;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c8d86c02-d0bd-4a37-a46f-3e45794bbdf7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd2a8b8b-996f-438c-ab31-86e00edd758a" type="checkbox" ><label for="fd2a8b8b-996f-438c-ab31-86e00edd758a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eac332b0-d0ad-4f37-bca1-3dd72cb011a5" type="checkbox" ><label for="eac332b0-d0ad-4f37-bca1-3dd72cb011a5" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fce47333-144b-4507-90a7-c52df3fee7e1" type="checkbox" ><label for="fce47333-144b-4507-90a7-c52df3fee7e1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2398f0a0-9298-4739-9949-042c4e824f84" type="checkbox" ><label for="2398f0a0-9298-4739-9949-042c4e824f84" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42fe5d47-7350-48ab-9de3-3a275fb116b6" type="checkbox" ><label for="42fe5d47-7350-48ab-9de3-3a275fb116b6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60fb3f0c-21ad-498f-af52-49ac6bb64763" type="checkbox" ><label for="60fb3f0c-21ad-498f-af52-49ac6bb64763" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bc1ad1c-592b-480d-ac3b-8fef5b39ca20" type="checkbox" ><label for="0bc1ad1c-592b-480d-ac3b-8fef5b39ca20" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d35b32b6-a98d-416a-b9b9-c2229e14ec51" type="checkbox" ><label for="d35b32b6-a98d-416a-b9b9-c2229e14ec51" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0d0ce72-d050-4ed5-8df7-24e8a1694862" type="checkbox" ><label for="f0d0ce72-d050-4ed5-8df7-24e8a1694862" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
