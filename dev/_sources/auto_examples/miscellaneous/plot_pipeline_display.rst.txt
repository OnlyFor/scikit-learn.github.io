
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 {color: black;background-color: white;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 pre{padding: 0;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-toggleable {background-color: white;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-item {z-index: 1;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-parallel-item:only-child::after {width: 0;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fc2fd9ac-dcfe-47e8-903e-54e7a5303c78" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65a26175-f20c-4d71-9a3d-c60393ae6a97" type="checkbox" ><label for="65a26175-f20c-4d71-9a3d-c60393ae6a97" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfe9b42a-7603-4176-85d2-34a38cc10cf0" type="checkbox" ><label for="cfe9b42a-7603-4176-85d2-34a38cc10cf0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="658ae932-9de2-4551-8f66-a1cb51677273" type="checkbox" ><label for="658ae932-9de2-4551-8f66-a1cb51677273" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 {color: black;background-color: white;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 pre{padding: 0;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-toggleable {background-color: white;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-item {z-index: 1;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-parallel-item:only-child::after {width: 0;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a0e19cff-5d63-4278-accc-02d0578b2d48 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a0e19cff-5d63-4278-accc-02d0578b2d48" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69394c9a-e01a-477b-9597-742eb77bb529" type="checkbox" ><label for="69394c9a-e01a-477b-9597-742eb77bb529" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3938b2d1-d9a0-4c66-8989-9789b7e20c28" type="checkbox" ><label for="3938b2d1-d9a0-4c66-8989-9789b7e20c28" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8382c6ec-26ae-4f55-b090-9ad43ce8745a" type="checkbox" ><label for="8382c6ec-26ae-4f55-b090-9ad43ce8745a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e335a68f-f18b-41a7-af23-6c511de93c23" type="checkbox" ><label for="e335a68f-f18b-41a7-af23-6c511de93c23" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b86e8612-9dd7-4455-b461-642a1b103a61 {color: black;background-color: white;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 pre{padding: 0;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-toggleable {background-color: white;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-item {z-index: 1;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-parallel-item:only-child::after {width: 0;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b86e8612-9dd7-4455-b461-642a1b103a61 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b86e8612-9dd7-4455-b461-642a1b103a61" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="513be085-fb72-4612-a93d-7c9ddeb0dec0" type="checkbox" ><label for="513be085-fb72-4612-a93d-7c9ddeb0dec0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f160430-f734-49c2-a991-c6281737f70b" type="checkbox" ><label for="7f160430-f734-49c2-a991-c6281737f70b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d2344a1-e358-4fa1-a7d2-51e2c6d5074d" type="checkbox" ><label for="9d2344a1-e358-4fa1-a7d2-51e2c6d5074d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 {color: black;background-color: white;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 pre{padding: 0;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-toggleable {background-color: white;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-item {z-index: 1;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-parallel-item:only-child::after {width: 0;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8d9d1ed0-50b0-4c54-ad38-9b70e3ee9dd3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6bf2ee9-a181-4474-aef0-cd6b31700096" type="checkbox" ><label for="e6bf2ee9-a181-4474-aef0-cd6b31700096" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="582b35eb-9a87-40af-bff0-b9e6d74e7438" type="checkbox" ><label for="582b35eb-9a87-40af-bff0-b9e6d74e7438" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5691b7f-cd45-44df-8621-cb942acdd4df" type="checkbox" ><label for="d5691b7f-cd45-44df-8621-cb942acdd4df" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fa1dd0f-30d7-45b5-8ab6-0670fffe1f59" type="checkbox" ><label for="9fa1dd0f-30d7-45b5-8ab6-0670fffe1f59" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c3eed10-9c80-4552-9eec-7376a8d80ac5" type="checkbox" ><label for="7c3eed10-9c80-4552-9eec-7376a8d80ac5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70879ed7-e590-47dc-9b12-dc69a1d6f682" type="checkbox" ><label for="70879ed7-e590-47dc-9b12-dc69a1d6f682" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7562c2a8-a859-47f0-af8b-fe0712cccbb8" type="checkbox" ><label for="7562c2a8-a859-47f0-af8b-fe0712cccbb8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="607f1262-7ef2-43cb-8a1d-c6ef92341c2a" type="checkbox" ><label for="607f1262-7ef2-43cb-8a1d-c6ef92341c2a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bd7f257-327d-4942-b89e-e3033d445bc7" type="checkbox" ><label for="0bd7f257-327d-4942-b89e-e3033d445bc7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 {color: black;background-color: white;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 pre{padding: 0;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-toggleable {background-color: white;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-item {z-index: 1;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-parallel-item:only-child::after {width: 0;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eafa9f40-27b3-43e3-88e8-37c1a42937f0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92f27976-6c57-4288-a99c-ece91ea2428b" type="checkbox" ><label for="92f27976-6c57-4288-a99c-ece91ea2428b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13f1cb53-0e43-4bfd-976f-7727744a5472" type="checkbox" ><label for="13f1cb53-0e43-4bfd-976f-7727744a5472" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2953383-8e04-440f-83ec-d74d35c0c4b8" type="checkbox" ><label for="a2953383-8e04-440f-83ec-d74d35c0c4b8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fb46d6d-a48b-47f7-bdb5-296e34fc4625" type="checkbox" ><label for="1fb46d6d-a48b-47f7-bdb5-296e34fc4625" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90c829e5-5892-4b0e-a323-4eb9d3714c81" type="checkbox" ><label for="90c829e5-5892-4b0e-a323-4eb9d3714c81" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91489fe7-d87b-4af2-b545-b3ca64eee2c4" type="checkbox" ><label for="91489fe7-d87b-4af2-b545-b3ca64eee2c4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7076b15c-6ed7-4c23-9556-f36748b63723" type="checkbox" ><label for="7076b15c-6ed7-4c23-9556-f36748b63723" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d4441a1-5e2e-47a1-bdfd-1c5987c26c09" type="checkbox" ><label for="7d4441a1-5e2e-47a1-bdfd-1c5987c26c09" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a82f918-db8e-41f2-8102-667ac265037b" type="checkbox" ><label for="1a82f918-db8e-41f2-8102-667ac265037b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.131 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
