
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 {color: black;background-color: white;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 pre{padding: 0;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-toggleable {background-color: white;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-item {z-index: 1;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-parallel-item:only-child::after {width: 0;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b031934e-d2b0-425b-a8ac-581d609f2fe4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b031934e-d2b0-425b-a8ac-581d609f2fe4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="daa598aa-b446-4bcf-b931-8a97c67b1732" type="checkbox" ><label for="daa598aa-b446-4bcf-b931-8a97c67b1732" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be5fe36b-1dfa-43cb-bf9d-0cc42f1d821d" type="checkbox" ><label for="be5fe36b-1dfa-43cb-bf9d-0cc42f1d821d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b082d199-3fa0-49dc-90f8-1beb16b67165" type="checkbox" ><label for="b082d199-3fa0-49dc-90f8-1beb16b67165" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-59a95234-fa64-4278-a757-69e0e97b8f9c {color: black;background-color: white;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c pre{padding: 0;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-toggleable {background-color: white;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-estimator:hover {background-color: #d4ebff;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-item {z-index: 1;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-parallel-item:only-child::after {width: 0;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-59a95234-fa64-4278-a757-69e0e97b8f9c div.sk-text-repr-fallback {display: none;}</style><div id="sk-59a95234-fa64-4278-a757-69e0e97b8f9c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4476e338-7c78-4341-b7e3-d37205c3f631" type="checkbox" ><label for="4476e338-7c78-4341-b7e3-d37205c3f631" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1f927eb-90fb-4505-9652-b7ed80e527a6" type="checkbox" ><label for="e1f927eb-90fb-4505-9652-b7ed80e527a6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0a7d631-193c-4211-99fa-48f9ab552853" type="checkbox" ><label for="f0a7d631-193c-4211-99fa-48f9ab552853" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0699dab5-4d3d-4bb4-9239-7274a23d2552" type="checkbox" ><label for="0699dab5-4d3d-4bb4-9239-7274a23d2552" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c4006588-3228-4908-97bb-0e853b54b83d {color: black;background-color: white;}#sk-c4006588-3228-4908-97bb-0e853b54b83d pre{padding: 0;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-toggleable {background-color: white;}#sk-c4006588-3228-4908-97bb-0e853b54b83d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c4006588-3228-4908-97bb-0e853b54b83d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c4006588-3228-4908-97bb-0e853b54b83d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c4006588-3228-4908-97bb-0e853b54b83d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c4006588-3228-4908-97bb-0e853b54b83d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4006588-3228-4908-97bb-0e853b54b83d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-estimator:hover {background-color: #d4ebff;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-item {z-index: 1;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-parallel-item:only-child::after {width: 0;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c4006588-3228-4908-97bb-0e853b54b83d div.sk-text-repr-fallback {display: none;}</style><div id="sk-c4006588-3228-4908-97bb-0e853b54b83d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e543d6f-45b6-409b-b891-538b969cd514" type="checkbox" ><label for="7e543d6f-45b6-409b-b891-538b969cd514" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39cb44f6-46f2-49b7-9c87-15bca2c9f516" type="checkbox" ><label for="39cb44f6-46f2-49b7-9c87-15bca2c9f516" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0640a6da-dea2-4274-96e5-de6e3c8f2609" type="checkbox" ><label for="0640a6da-dea2-4274-96e5-de6e3c8f2609" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b364c6fb-4acf-40f2-a648-5af6078940aa {color: black;background-color: white;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa pre{padding: 0;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-toggleable {background-color: white;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-estimator:hover {background-color: #d4ebff;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-item {z-index: 1;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-parallel-item:only-child::after {width: 0;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b364c6fb-4acf-40f2-a648-5af6078940aa div.sk-text-repr-fallback {display: none;}</style><div id="sk-b364c6fb-4acf-40f2-a648-5af6078940aa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0fbcd5f-9a07-4ef8-9d03-c8bf420bbfaf" type="checkbox" ><label for="f0fbcd5f-9a07-4ef8-9d03-c8bf420bbfaf" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be4b189f-0929-407a-b8b7-8e3a32b6303b" type="checkbox" ><label for="be4b189f-0929-407a-b8b7-8e3a32b6303b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3671351-7879-4f0a-a312-e332484d0068" type="checkbox" ><label for="f3671351-7879-4f0a-a312-e332484d0068" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7188c8e5-0224-4845-aaa2-ded527d7a798" type="checkbox" ><label for="7188c8e5-0224-4845-aaa2-ded527d7a798" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f491a678-ac1a-4e2e-bf37-66c039e32bff" type="checkbox" ><label for="f491a678-ac1a-4e2e-bf37-66c039e32bff" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="138f9f0b-224f-417e-8404-eabb084da5d4" type="checkbox" ><label for="138f9f0b-224f-417e-8404-eabb084da5d4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff2abf34-8c10-4f8b-9c64-a1dd1f0c8c80" type="checkbox" ><label for="ff2abf34-8c10-4f8b-9c64-a1dd1f0c8c80" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba62ac21-e4e5-45cf-80f9-14a63a2ee49c" type="checkbox" ><label for="ba62ac21-e4e5-45cf-80f9-14a63a2ee49c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b2fea92-dfba-4824-9426-c3e87ff074a7" type="checkbox" ><label for="0b2fea92-dfba-4824-9426-c3e87ff074a7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe {color: black;background-color: white;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe pre{padding: 0;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-toggleable {background-color: white;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-estimator:hover {background-color: #d4ebff;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-item {z-index: 1;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-parallel-item:only-child::after {width: 0;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe div.sk-text-repr-fallback {display: none;}</style><div id="sk-d61844a1-0700-4bd5-a9bb-08d73a735cbe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb1973b1-fe2c-4dfe-ad30-6190c5f534b1" type="checkbox" ><label for="cb1973b1-fe2c-4dfe-ad30-6190c5f534b1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20a1ad5a-35e9-48b3-bb79-86558eb79d36" type="checkbox" ><label for="20a1ad5a-35e9-48b3-bb79-86558eb79d36" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3b68776-08a7-4fa7-b06c-70af16d48c3c" type="checkbox" ><label for="b3b68776-08a7-4fa7-b06c-70af16d48c3c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="feb56f66-e9ac-4c2a-8ec6-c6e5fb7c569f" type="checkbox" ><label for="feb56f66-e9ac-4c2a-8ec6-c6e5fb7c569f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ad7387e-60c5-4f47-a6ca-5757e04c426c" type="checkbox" ><label for="8ad7387e-60c5-4f47-a6ca-5757e04c426c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fe47633-cd1e-42a7-b70e-bddaacf9e602" type="checkbox" ><label for="7fe47633-cd1e-42a7-b70e-bddaacf9e602" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4d445a2-d02f-4844-b365-1ffc3b9e84f0" type="checkbox" ><label for="c4d445a2-d02f-4844-b365-1ffc3b9e84f0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acba33ec-9ab3-4e25-88ba-1c6952161e3e" type="checkbox" ><label for="acba33ec-9ab3-4e25-88ba-1c6952161e3e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37515a38-dd4e-4d5d-ae85-3291cf4e1086" type="checkbox" ><label for="37515a38-dd4e-4d5d-ae85-3291cf4e1086" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
