
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-07d0224f-0921-4292-87d8-1be9a9b06700 {color: black;background-color: white;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 pre{padding: 0;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-toggleable {background-color: white;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-estimator:hover {background-color: #d4ebff;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-item {z-index: 1;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-parallel-item:only-child::after {width: 0;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-07d0224f-0921-4292-87d8-1be9a9b06700 div.sk-text-repr-fallback {display: none;}</style><div id="sk-07d0224f-0921-4292-87d8-1be9a9b06700" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70ff1d26-8f32-4808-a923-e63f57e36d41" type="checkbox" ><label for="70ff1d26-8f32-4808-a923-e63f57e36d41" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7fd5383-424a-4c69-92e4-07e2e5985ee8" type="checkbox" ><label for="c7fd5383-424a-4c69-92e4-07e2e5985ee8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92a8bd39-1d90-415d-90e2-8f38b3d6fa85" type="checkbox" ><label for="92a8bd39-1d90-415d-90e2-8f38b3d6fa85" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b07046a-f166-4340-9c79-acac67590c84 {color: black;background-color: white;}#sk-6b07046a-f166-4340-9c79-acac67590c84 pre{padding: 0;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-toggleable {background-color: white;}#sk-6b07046a-f166-4340-9c79-acac67590c84 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b07046a-f166-4340-9c79-acac67590c84 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b07046a-f166-4340-9c79-acac67590c84 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b07046a-f166-4340-9c79-acac67590c84 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b07046a-f166-4340-9c79-acac67590c84 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b07046a-f166-4340-9c79-acac67590c84 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-item {z-index: 1;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-parallel-item:only-child::after {width: 0;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b07046a-f166-4340-9c79-acac67590c84 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b07046a-f166-4340-9c79-acac67590c84" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f47a0930-413f-43f7-a74f-dce7c0526710" type="checkbox" ><label for="f47a0930-413f-43f7-a74f-dce7c0526710" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23b996f8-a528-4b08-ad78-627e08c3f5fd" type="checkbox" ><label for="23b996f8-a528-4b08-ad78-627e08c3f5fd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47584bd9-eaed-45a7-bec5-b1f939aa9175" type="checkbox" ><label for="47584bd9-eaed-45a7-bec5-b1f939aa9175" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c014e931-37f5-4a2b-9060-df269bde655e" type="checkbox" ><label for="c014e931-37f5-4a2b-9060-df269bde655e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-838504a2-59e5-446f-8668-4afe4b665ffc {color: black;background-color: white;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc pre{padding: 0;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-toggleable {background-color: white;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-estimator:hover {background-color: #d4ebff;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-item {z-index: 1;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-parallel-item:only-child::after {width: 0;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-838504a2-59e5-446f-8668-4afe4b665ffc div.sk-text-repr-fallback {display: none;}</style><div id="sk-838504a2-59e5-446f-8668-4afe4b665ffc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4ada229-2c1d-42f8-bd49-e3a0d6e5ae42" type="checkbox" ><label for="f4ada229-2c1d-42f8-bd49-e3a0d6e5ae42" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ded003d4-6f9b-4f0a-b5f5-25dcd9a56da2" type="checkbox" ><label for="ded003d4-6f9b-4f0a-b5f5-25dcd9a56da2" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24718317-6f91-412c-91de-94c15784c1ec" type="checkbox" ><label for="24718317-6f91-412c-91de-94c15784c1ec" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e {color: black;background-color: white;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e pre{padding: 0;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-toggleable {background-color: white;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-estimator:hover {background-color: #d4ebff;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-item {z-index: 1;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-parallel-item:only-child::after {width: 0;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d1c8faf6-90f3-4267-b346-726d6f949b8e div.sk-text-repr-fallback {display: none;}</style><div id="sk-d1c8faf6-90f3-4267-b346-726d6f949b8e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="319f199d-4758-4af8-a101-c44d65d48023" type="checkbox" ><label for="319f199d-4758-4af8-a101-c44d65d48023" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e13462cd-470e-41b5-b05f-09ea81927eff" type="checkbox" ><label for="e13462cd-470e-41b5-b05f-09ea81927eff" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c475bd9-926d-4753-ae10-d8441d472072" type="checkbox" ><label for="6c475bd9-926d-4753-ae10-d8441d472072" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ca27045-9595-437e-830c-c495cacdf4b7" type="checkbox" ><label for="8ca27045-9595-437e-830c-c495cacdf4b7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="786584c7-b3f6-4fa5-971e-3a123e94c5ff" type="checkbox" ><label for="786584c7-b3f6-4fa5-971e-3a123e94c5ff" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4087dfa1-caaf-4469-9488-80bf8baeb5e9" type="checkbox" ><label for="4087dfa1-caaf-4469-9488-80bf8baeb5e9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="009c0a1c-68f4-4e86-80e9-ded7f9dd33ad" type="checkbox" ><label for="009c0a1c-68f4-4e86-80e9-ded7f9dd33ad" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1cc6b37-5c1c-4aee-a722-e03769dc4c60" type="checkbox" ><label for="f1cc6b37-5c1c-4aee-a722-e03769dc4c60" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c01e8c2-3614-4974-bb9e-3dec4670e77c" type="checkbox" ><label for="1c01e8c2-3614-4974-bb9e-3dec4670e77c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-64742d7a-2717-4541-8e7e-d15d883a87ef {color: black;background-color: white;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef pre{padding: 0;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-toggleable {background-color: white;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-estimator:hover {background-color: #d4ebff;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-item {z-index: 1;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-parallel-item:only-child::after {width: 0;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-64742d7a-2717-4541-8e7e-d15d883a87ef div.sk-text-repr-fallback {display: none;}</style><div id="sk-64742d7a-2717-4541-8e7e-d15d883a87ef" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48a41bfe-4c2a-455e-a1fd-55a35702d7e5" type="checkbox" ><label for="48a41bfe-4c2a-455e-a1fd-55a35702d7e5" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0094c770-4115-4a78-8993-355fbac83964" type="checkbox" ><label for="0094c770-4115-4a78-8993-355fbac83964" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31366a95-caa8-4cd1-acd8-f0f8a8281a2b" type="checkbox" ><label for="31366a95-caa8-4cd1-acd8-f0f8a8281a2b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5220896f-fe4a-4287-bffe-4544acb7330c" type="checkbox" ><label for="5220896f-fe4a-4287-bffe-4544acb7330c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e330bec1-4396-4aef-8fc0-c9c452c161d0" type="checkbox" ><label for="e330bec1-4396-4aef-8fc0-c9c452c161d0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4778120d-4a3b-40f8-978a-fff843d048fc" type="checkbox" ><label for="4778120d-4a3b-40f8-978a-fff843d048fc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca3114e8-3d11-4a82-9256-d451e4c0ab1f" type="checkbox" ><label for="ca3114e8-3d11-4a82-9256-d451e4c0ab1f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff28ab61-716e-4aa6-91d2-ac6052f725cb" type="checkbox" ><label for="ff28ab61-716e-4aa6-91d2-ac6052f725cb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de23a4fd-dcdb-4100-8b94-5910079ea22c" type="checkbox" ><label for="de23a4fd-dcdb-4100-8b94-5910079ea22c" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
