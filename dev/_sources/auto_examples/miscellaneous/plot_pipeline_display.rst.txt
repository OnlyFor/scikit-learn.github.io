
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 {color: black;background-color: white;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 pre{padding: 0;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-toggleable {background-color: white;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-item {z-index: 1;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-parallel-item:only-child::after {width: 0;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a3432da2-6fe8-4d31-b954-b0ea6fb3d1c1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c59413c9-38fa-42ba-8a0e-e29cb4e27641" type="checkbox" ><label for="c59413c9-38fa-42ba-8a0e-e29cb4e27641" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20be24b6-1662-4cc9-a294-3593b6266af8" type="checkbox" ><label for="20be24b6-1662-4cc9-a294-3593b6266af8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72199947-d6c1-4fc0-a020-e4075deae1fd" type="checkbox" ><label for="72199947-d6c1-4fc0-a020-e4075deae1fd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f {color: black;background-color: white;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f pre{padding: 0;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-toggleable {background-color: white;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-estimator:hover {background-color: #d4ebff;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-item {z-index: 1;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-parallel-item:only-child::after {width: 0;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f div.sk-text-repr-fallback {display: none;}</style><div id="sk-3538a1c3-d6ff-48a7-b42b-cf905bcfd00f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ee54f6e-b74c-49b4-a362-584b4e909527" type="checkbox" ><label for="3ee54f6e-b74c-49b4-a362-584b4e909527" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71e23221-87f5-491f-a0b6-d71b5745f751" type="checkbox" ><label for="71e23221-87f5-491f-a0b6-d71b5745f751" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56f14190-5027-4788-b7d3-4bd0b2cda959" type="checkbox" ><label for="56f14190-5027-4788-b7d3-4bd0b2cda959" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d1bca3b-6831-4b7b-9294-c60795e1e46c" type="checkbox" ><label for="6d1bca3b-6831-4b7b-9294-c60795e1e46c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 {color: black;background-color: white;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 pre{padding: 0;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-toggleable {background-color: white;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-item {z-index: 1;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-parallel-item:only-child::after {width: 0;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ce278d9d-3b9b-4a78-915b-5b49591f8b22" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aaf5de06-1189-4b0f-b9ee-e0b21ed4f1a6" type="checkbox" ><label for="aaf5de06-1189-4b0f-b9ee-e0b21ed4f1a6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c97f7b86-44a6-4367-a873-8e7d760ec1c8" type="checkbox" ><label for="c97f7b86-44a6-4367-a873-8e7d760ec1c8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1153681-99cf-48fc-a4a6-d9ef41fcad5b" type="checkbox" ><label for="c1153681-99cf-48fc-a4a6-d9ef41fcad5b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2246aba3-6e39-421c-97f6-3b49780ac661 {color: black;background-color: white;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 pre{padding: 0;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-toggleable {background-color: white;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-item {z-index: 1;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-parallel-item:only-child::after {width: 0;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2246aba3-6e39-421c-97f6-3b49780ac661 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2246aba3-6e39-421c-97f6-3b49780ac661" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa421405-1f90-44f0-accd-f4ddb95b1969" type="checkbox" ><label for="aa421405-1f90-44f0-accd-f4ddb95b1969" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ceab2826-7199-40d2-b21c-d369f195f70d" type="checkbox" ><label for="ceab2826-7199-40d2-b21c-d369f195f70d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="595811e7-042b-450e-85cb-ab961425534a" type="checkbox" ><label for="595811e7-042b-450e-85cb-ab961425534a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc3cf7ba-89ff-4959-a7e4-d836ff4a52d1" type="checkbox" ><label for="cc3cf7ba-89ff-4959-a7e4-d836ff4a52d1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8da5608c-bbda-46c7-b181-62b4faa1c8da" type="checkbox" ><label for="8da5608c-bbda-46c7-b181-62b4faa1c8da" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c124985-8875-4258-afde-f4e161209d99" type="checkbox" ><label for="3c124985-8875-4258-afde-f4e161209d99" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1eafc7c-9366-4f64-9562-f842ba5ea61a" type="checkbox" ><label for="b1eafc7c-9366-4f64-9562-f842ba5ea61a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad3a5e83-77fd-41b7-a807-4ce1dcdecd8a" type="checkbox" ><label for="ad3a5e83-77fd-41b7-a807-4ce1dcdecd8a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="771aa996-719d-4555-8602-4089b50836df" type="checkbox" ><label for="771aa996-719d-4555-8602-4089b50836df" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 {color: black;background-color: white;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 pre{padding: 0;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-toggleable {background-color: white;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-item {z-index: 1;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-parallel-item:only-child::after {width: 0;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fa922462-d22e-4471-b8d7-14934aaa0ef6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fa922462-d22e-4471-b8d7-14934aaa0ef6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dea409bb-5807-4692-b70e-dcd7fc393bfe" type="checkbox" ><label for="dea409bb-5807-4692-b70e-dcd7fc393bfe" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcd1252a-66a2-49c8-8c54-88e4d54c9abe" type="checkbox" ><label for="fcd1252a-66a2-49c8-8c54-88e4d54c9abe" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63628e42-6a62-4049-95e9-0b887f6bc1c9" type="checkbox" ><label for="63628e42-6a62-4049-95e9-0b887f6bc1c9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7611f036-12db-4bf4-ad1c-7e1c3bbc2e19" type="checkbox" ><label for="7611f036-12db-4bf4-ad1c-7e1c3bbc2e19" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32802e91-32b1-4656-ae62-3d7348514829" type="checkbox" ><label for="32802e91-32b1-4656-ae62-3d7348514829" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b34c51f2-73ed-480d-910a-f624e62a7fa0" type="checkbox" ><label for="b34c51f2-73ed-480d-910a-f624e62a7fa0" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7de67c3b-bed1-4384-a2c6-07e154eea278" type="checkbox" ><label for="7de67c3b-bed1-4384-a2c6-07e154eea278" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9578eee4-5ef3-4aa9-8117-70093b7d866b" type="checkbox" ><label for="9578eee4-5ef3-4aa9-8117-70093b7d866b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1c866d5-0675-4c5f-9ccf-45c0cfa6f24e" type="checkbox" ><label for="b1c866d5-0675-4c5f-9ccf-45c0cfa6f24e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
