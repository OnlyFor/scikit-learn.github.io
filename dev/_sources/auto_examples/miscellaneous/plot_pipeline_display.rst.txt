
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 {color: black;background-color: white;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 pre{padding: 0;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-toggleable {background-color: white;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-item {z-index: 1;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-parallel-item:only-child::after {width: 0;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c62b1aac-17f8-4b3a-b4a6-5ee5c8efdbb5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb72af91-b7d4-4e88-b72a-f00d44c0417e" type="checkbox" ><label for="bb72af91-b7d4-4e88-b72a-f00d44c0417e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="228a54db-3df3-4d4e-a8a5-983a4d5644bb" type="checkbox" ><label for="228a54db-3df3-4d4e-a8a5-983a4d5644bb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e375d16d-d0c9-4bee-ba73-5ba5df3b4792" type="checkbox" ><label for="e375d16d-d0c9-4bee-ba73-5ba5df3b4792" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 {color: black;background-color: white;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 pre{padding: 0;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-toggleable {background-color: white;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-item {z-index: 1;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-parallel-item:only-child::after {width: 0;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d89e4f11-fcee-47aa-94a7-1400c600b286 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d89e4f11-fcee-47aa-94a7-1400c600b286" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="395c6e09-ffaf-46e0-8e65-34b486752d2c" type="checkbox" ><label for="395c6e09-ffaf-46e0-8e65-34b486752d2c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fae94f44-6c44-4a09-907e-118278193fe6" type="checkbox" ><label for="fae94f44-6c44-4a09-907e-118278193fe6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80bad762-ff29-45d2-b408-bb40a6fc07f7" type="checkbox" ><label for="80bad762-ff29-45d2-b408-bb40a6fc07f7" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f4b7563-4aa2-42ee-8e91-7884d4afaa1e" type="checkbox" ><label for="9f4b7563-4aa2-42ee-8e91-7884d4afaa1e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae {color: black;background-color: white;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae pre{padding: 0;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-toggleable {background-color: white;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-estimator:hover {background-color: #d4ebff;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-item {z-index: 1;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-parallel-item:only-child::after {width: 0;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8e539c5c-9467-4a86-aedd-f230201cd2ae div.sk-text-repr-fallback {display: none;}</style><div id="sk-8e539c5c-9467-4a86-aedd-f230201cd2ae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f983e156-d65c-4b6c-9335-f9cd6e010264" type="checkbox" ><label for="f983e156-d65c-4b6c-9335-f9cd6e010264" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52a6b025-1ae6-4bad-88ad-28f905e036ed" type="checkbox" ><label for="52a6b025-1ae6-4bad-88ad-28f905e036ed" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bbd7e1c-746f-439a-a82f-f3c200fabd90" type="checkbox" ><label for="9bbd7e1c-746f-439a-a82f-f3c200fabd90" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 {color: black;background-color: white;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 pre{padding: 0;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-toggleable {background-color: white;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-estimator:hover {background-color: #d4ebff;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-item {z-index: 1;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-parallel-item:only-child::after {width: 0;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33 div.sk-text-repr-fallback {display: none;}</style><div id="sk-88e59e29-fc4d-4a81-bb0d-a8c2d18e6b33" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db87c776-a58e-44cd-b266-a831fe6b31e6" type="checkbox" ><label for="db87c776-a58e-44cd-b266-a831fe6b31e6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1bc827a-e44a-487d-839c-ec704c4e4f57" type="checkbox" ><label for="c1bc827a-e44a-487d-839c-ec704c4e4f57" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="508895ec-673a-4d7a-a15c-6d545d65466a" type="checkbox" ><label for="508895ec-673a-4d7a-a15c-6d545d65466a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0661d022-bdae-419a-ae70-a6a2ef76f528" type="checkbox" ><label for="0661d022-bdae-419a-ae70-a6a2ef76f528" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7865b827-43f4-4e4c-8cf4-417d925571b3" type="checkbox" ><label for="7865b827-43f4-4e4c-8cf4-417d925571b3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc9d1392-5d9b-475d-8197-de29b74e8583" type="checkbox" ><label for="bc9d1392-5d9b-475d-8197-de29b74e8583" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af08537c-3218-4728-8a96-58e1a065b075" type="checkbox" ><label for="af08537c-3218-4728-8a96-58e1a065b075" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31af4eae-b98d-49a3-b211-47cc4125f010" type="checkbox" ><label for="31af4eae-b98d-49a3-b211-47cc4125f010" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4292da1b-9890-4013-9b29-ecc8e0dcec49" type="checkbox" ><label for="4292da1b-9890-4013-9b29-ecc8e0dcec49" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda {color: black;background-color: white;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda pre{padding: 0;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-toggleable {background-color: white;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-estimator:hover {background-color: #d4ebff;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-item {z-index: 1;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-parallel-item:only-child::after {width: 0;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda div.sk-text-repr-fallback {display: none;}</style><div id="sk-2dcc5776-39c7-4c0b-8ea0-5aad96fa2dda" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a596a47b-9d36-4348-9176-91d20003670e" type="checkbox" ><label for="a596a47b-9d36-4348-9176-91d20003670e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ab42dd5-d333-4501-a77d-7f6a9540d1a4" type="checkbox" ><label for="0ab42dd5-d333-4501-a77d-7f6a9540d1a4" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fb5793e-3ae4-4a5b-b361-de47076ff417" type="checkbox" ><label for="1fb5793e-3ae4-4a5b-b361-de47076ff417" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5604ca19-149a-4efb-8d0c-875c97ab70ec" type="checkbox" ><label for="5604ca19-149a-4efb-8d0c-875c97ab70ec" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82a857ef-2542-4620-920b-47ab2f15aa9b" type="checkbox" ><label for="82a857ef-2542-4620-920b-47ab2f15aa9b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc127f3e-fa84-4ccd-85a8-4cc47b332485" type="checkbox" ><label for="dc127f3e-fa84-4ccd-85a8-4cc47b332485" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c85269e0-1b7f-435b-8ba8-a86d6ea8efbb" type="checkbox" ><label for="c85269e0-1b7f-435b-8ba8-a86d6ea8efbb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea9d4fc2-ab63-4308-a255-62391a81f270" type="checkbox" ><label for="ea9d4fc2-ab63-4308-a255-62391a81f270" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca62e75c-edb1-4ad1-b03a-8c560bd46a39" type="checkbox" ><label for="ca62e75c-edb1-4ad1-b03a-8c560bd46a39" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
