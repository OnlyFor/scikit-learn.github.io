
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f {color: black;background-color: white;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f pre{padding: 0;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-toggleable {background-color: white;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-estimator:hover {background-color: #d4ebff;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-item {z-index: 1;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-parallel-item:only-child::after {width: 0;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f div.sk-text-repr-fallback {display: none;}</style><div id="sk-0261adb5-1aab-45a6-b660-8a49c6f8fe3f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d207f714-df50-4bb8-8030-f18106e27d9e" type="checkbox" ><label for="d207f714-df50-4bb8-8030-f18106e27d9e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b2a7453-a9a0-4843-8582-e4518444953a" type="checkbox" ><label for="7b2a7453-a9a0-4843-8582-e4518444953a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1339e008-86a4-4607-8265-72639c479674" type="checkbox" ><label for="1339e008-86a4-4607-8265-72639c479674" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-af161315-6bbd-4417-aa84-41c2f0c56368 {color: black;background-color: white;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 pre{padding: 0;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-toggleable {background-color: white;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-estimator:hover {background-color: #d4ebff;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-item {z-index: 1;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-parallel-item:only-child::after {width: 0;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-af161315-6bbd-4417-aa84-41c2f0c56368 div.sk-text-repr-fallback {display: none;}</style><div id="sk-af161315-6bbd-4417-aa84-41c2f0c56368" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1cae251-f9cb-4125-b42a-ec8a20090b69" type="checkbox" ><label for="c1cae251-f9cb-4125-b42a-ec8a20090b69" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af79cddb-0de6-4010-8a03-efac512efea6" type="checkbox" ><label for="af79cddb-0de6-4010-8a03-efac512efea6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16a5fae0-cb5c-46c7-b4fc-ec62e498be43" type="checkbox" ><label for="16a5fae0-cb5c-46c7-b4fc-ec62e498be43" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22149f7b-2fc5-4cfa-9298-104dccffc2b2" type="checkbox" ><label for="22149f7b-2fc5-4cfa-9298-104dccffc2b2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 {color: black;background-color: white;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 pre{padding: 0;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-toggleable {background-color: white;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-item {z-index: 1;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-parallel-item:only-child::after {width: 0;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4c9eea27-351f-449d-9381-61f20fcf3fe5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4c9eea27-351f-449d-9381-61f20fcf3fe5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="515fb5bb-c990-412b-ab16-e50b0c331cca" type="checkbox" ><label for="515fb5bb-c990-412b-ab16-e50b0c331cca" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="922be03f-e6d9-4532-a1cf-ef12923cce0b" type="checkbox" ><label for="922be03f-e6d9-4532-a1cf-ef12923cce0b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eaa6fc6f-820b-4319-83e7-ac6ffde92b31" type="checkbox" ><label for="eaa6fc6f-820b-4319-83e7-ac6ffde92b31" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-99529640-4324-4f12-9092-f829b169c5c5 {color: black;background-color: white;}#sk-99529640-4324-4f12-9092-f829b169c5c5 pre{padding: 0;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-toggleable {background-color: white;}#sk-99529640-4324-4f12-9092-f829b169c5c5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-99529640-4324-4f12-9092-f829b169c5c5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-99529640-4324-4f12-9092-f829b169c5c5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-99529640-4324-4f12-9092-f829b169c5c5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-99529640-4324-4f12-9092-f829b169c5c5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99529640-4324-4f12-9092-f829b169c5c5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-item {z-index: 1;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-parallel-item:only-child::after {width: 0;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-99529640-4324-4f12-9092-f829b169c5c5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-99529640-4324-4f12-9092-f829b169c5c5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d26cb263-78ee-467a-ad99-9dca674a5355" type="checkbox" ><label for="d26cb263-78ee-467a-ad99-9dca674a5355" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36c90968-a98c-4326-8c53-be10d729dc89" type="checkbox" ><label for="36c90968-a98c-4326-8c53-be10d729dc89" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d067461d-3260-4213-84ca-ec038444cc46" type="checkbox" ><label for="d067461d-3260-4213-84ca-ec038444cc46" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70b045f8-3c64-4536-a8e6-d3255a0c0e79" type="checkbox" ><label for="70b045f8-3c64-4536-a8e6-d3255a0c0e79" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea52faec-43bf-4450-9f16-62a130fc331b" type="checkbox" ><label for="ea52faec-43bf-4450-9f16-62a130fc331b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e51baab4-7734-46c9-9525-f4f40b3fe431" type="checkbox" ><label for="e51baab4-7734-46c9-9525-f4f40b3fe431" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10347e44-7703-42d0-8175-5003744f7a6a" type="checkbox" ><label for="10347e44-7703-42d0-8175-5003744f7a6a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0b10daa-d5b9-42f3-8e16-88b0b8e3ff29" type="checkbox" ><label for="f0b10daa-d5b9-42f3-8e16-88b0b8e3ff29" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19485548-e862-404e-a5c8-8fa6c5b993b8" type="checkbox" ><label for="19485548-e862-404e-a5c8-8fa6c5b993b8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-db7d3c58-f09c-4289-9139-3455dbd001fd {color: black;background-color: white;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd pre{padding: 0;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-toggleable {background-color: white;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-estimator:hover {background-color: #d4ebff;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-item {z-index: 1;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-parallel-item:only-child::after {width: 0;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-db7d3c58-f09c-4289-9139-3455dbd001fd div.sk-text-repr-fallback {display: none;}</style><div id="sk-db7d3c58-f09c-4289-9139-3455dbd001fd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8510ed6-9d23-414b-bf5d-5b688fb4200c" type="checkbox" ><label for="d8510ed6-9d23-414b-bf5d-5b688fb4200c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d6f5ab5-7e1f-460e-a967-6eefd771574b" type="checkbox" ><label for="7d6f5ab5-7e1f-460e-a967-6eefd771574b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86c3919b-ec9a-4d5d-ac5e-851ca8d598af" type="checkbox" ><label for="86c3919b-ec9a-4d5d-ac5e-851ca8d598af" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d971d955-024c-4726-9b01-e03145d7c52b" type="checkbox" ><label for="d971d955-024c-4726-9b01-e03145d7c52b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8451c05-03a6-4e3a-9400-2a772a0a3088" type="checkbox" ><label for="a8451c05-03a6-4e3a-9400-2a772a0a3088" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b27135a5-f465-46b3-916c-51a22f1eb175" type="checkbox" ><label for="b27135a5-f465-46b3-916c-51a22f1eb175" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ada96b0f-33bb-4953-b0f0-2110d5f1c11c" type="checkbox" ><label for="ada96b0f-33bb-4953-b0f0-2110d5f1c11c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5971df18-4d9f-449d-8373-8fa47b486b4b" type="checkbox" ><label for="5971df18-4d9f-449d-8373-8fa47b486b4b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86bcbaef-f772-410f-a33c-5a66db7055aa" type="checkbox" ><label for="86bcbaef-f772-410f-a33c-5a66db7055aa" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
