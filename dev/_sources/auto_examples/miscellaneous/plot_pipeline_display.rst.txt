
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 {color: black;background-color: white;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 pre{padding: 0;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-toggleable {background-color: white;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-item {z-index: 1;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-parallel-item:only-child::after {width: 0;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f459a122-fa0f-4518-8ae5-82e1d6974033 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f459a122-fa0f-4518-8ae5-82e1d6974033" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcb98c7b-5456-42f0-a2a6-43093d182f72" type="checkbox" ><label for="bcb98c7b-5456-42f0-a2a6-43093d182f72" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17394d36-93fa-4d89-a657-9f6f46d05026" type="checkbox" ><label for="17394d36-93fa-4d89-a657-9f6f46d05026" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40042325-080a-4fd8-bcf1-f44f4244a0e8" type="checkbox" ><label for="40042325-080a-4fd8-bcf1-f44f4244a0e8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf {color: black;background-color: white;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf pre{padding: 0;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-toggleable {background-color: white;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-estimator:hover {background-color: #d4ebff;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-item {z-index: 1;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-parallel-item:only-child::after {width: 0;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf div.sk-text-repr-fallback {display: none;}</style><div id="sk-1ea3d935-9a12-4773-8a6c-ebc7d438eadf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01e4c2e1-88c9-4482-9c8b-3552bf399864" type="checkbox" ><label for="01e4c2e1-88c9-4482-9c8b-3552bf399864" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ba372c1-355e-4dc2-a7a9-728b7c88d4b8" type="checkbox" ><label for="5ba372c1-355e-4dc2-a7a9-728b7c88d4b8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59d64c9f-27f1-49f6-9945-7a4128e99aa0" type="checkbox" ><label for="59d64c9f-27f1-49f6-9945-7a4128e99aa0" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8738771-3d3e-44d3-8f86-564a845ec83c" type="checkbox" ><label for="e8738771-3d3e-44d3-8f86-564a845ec83c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-13e378eb-aa91-4924-ba38-6cad44fca345 {color: black;background-color: white;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 pre{padding: 0;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-toggleable {background-color: white;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-estimator:hover {background-color: #d4ebff;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-item {z-index: 1;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-parallel-item:only-child::after {width: 0;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-13e378eb-aa91-4924-ba38-6cad44fca345 div.sk-text-repr-fallback {display: none;}</style><div id="sk-13e378eb-aa91-4924-ba38-6cad44fca345" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fbfcc10-ec19-48df-8da6-e42876c889e0" type="checkbox" ><label for="0fbfcc10-ec19-48df-8da6-e42876c889e0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a55e090-36d1-4e01-8878-f8ada80824bd" type="checkbox" ><label for="2a55e090-36d1-4e01-8878-f8ada80824bd" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c15f0cf0-e76b-4407-93c9-525310e5e50f" type="checkbox" ><label for="c15f0cf0-e76b-4407-93c9-525310e5e50f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 {color: black;background-color: white;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 pre{padding: 0;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-toggleable {background-color: white;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-item {z-index: 1;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-parallel-item:only-child::after {width: 0;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e8b3704b-105e-4589-a9ee-97ad41cd50b2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="102e5692-88f5-4acc-b7eb-9c3532296e95" type="checkbox" ><label for="102e5692-88f5-4acc-b7eb-9c3532296e95" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3142ed48-ab8e-4a14-bd1f-e4c6bf78bd7f" type="checkbox" ><label for="3142ed48-ab8e-4a14-bd1f-e4c6bf78bd7f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ad76859-d06f-4662-aab9-3e806c33ad54" type="checkbox" ><label for="8ad76859-d06f-4662-aab9-3e806c33ad54" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccb2e31a-453b-4c0a-ab01-0bb1d08be6e2" type="checkbox" ><label for="ccb2e31a-453b-4c0a-ab01-0bb1d08be6e2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="888c886a-1e6a-408b-abfa-41e63fe906d3" type="checkbox" ><label for="888c886a-1e6a-408b-abfa-41e63fe906d3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa1783b8-8cb3-43cb-81d6-b649a2f5f8b1" type="checkbox" ><label for="aa1783b8-8cb3-43cb-81d6-b649a2f5f8b1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0fee9df-39da-4cac-92e2-8c3815e6194e" type="checkbox" ><label for="d0fee9df-39da-4cac-92e2-8c3815e6194e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="738caef7-2852-4648-8bef-962d57438672" type="checkbox" ><label for="738caef7-2852-4648-8bef-962d57438672" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5553dac3-9c1b-478c-8bf1-a46e99931e12" type="checkbox" ><label for="5553dac3-9c1b-478c-8bf1-a46e99931e12" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe {color: black;background-color: white;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe pre{padding: 0;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-toggleable {background-color: white;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-estimator:hover {background-color: #d4ebff;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-item {z-index: 1;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-parallel-item:only-child::after {width: 0;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b20f8b6b-396a-405f-b59a-6124f2718bbe div.sk-text-repr-fallback {display: none;}</style><div id="sk-b20f8b6b-396a-405f-b59a-6124f2718bbe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c810d8b2-4c57-4499-95e5-519ab556281f" type="checkbox" ><label for="c810d8b2-4c57-4499-95e5-519ab556281f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2088d603-9423-450c-9168-80b0d04c26aa" type="checkbox" ><label for="2088d603-9423-450c-9168-80b0d04c26aa" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff2c62ef-2943-44a1-8230-54fd8dd27d06" type="checkbox" ><label for="ff2c62ef-2943-44a1-8230-54fd8dd27d06" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0c36de9-558b-4363-87fc-8b350c9fb7ff" type="checkbox" ><label for="c0c36de9-558b-4363-87fc-8b350c9fb7ff" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1632fdf-7466-42c0-a842-204311739e87" type="checkbox" ><label for="d1632fdf-7466-42c0-a842-204311739e87" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4172cd2b-87e9-4f6b-91f6-111b0c1a01d8" type="checkbox" ><label for="4172cd2b-87e9-4f6b-91f6-111b0c1a01d8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8213f824-fbf3-4bf2-bf9a-ad8c25b9c76d" type="checkbox" ><label for="8213f824-fbf3-4bf2-bf9a-ad8c25b9c76d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84fb6bf0-e39a-4727-8610-c18f00471a10" type="checkbox" ><label for="84fb6bf0-e39a-4727-8610-c18f00471a10" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8a19b00-57cd-4a53-982d-1b740245b7d7" type="checkbox" ><label for="c8a19b00-57cd-4a53-982d-1b740245b7d7" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
