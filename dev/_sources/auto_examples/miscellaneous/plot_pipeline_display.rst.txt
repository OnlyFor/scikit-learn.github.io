
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb {color: black;background-color: white;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb pre{padding: 0;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-toggleable {background-color: white;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-estimator:hover {background-color: #d4ebff;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-item {z-index: 1;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-parallel-item:only-child::after {width: 0;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-container {display: inline-block;position: relative;}#sk-695c87f6-f648-45dc-83b8-741d3a30d0cb div.sk-text-repr-fallback {display: none;}</style><div id="sk-695c87f6-f648-45dc-83b8-741d3a30d0cb" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c95931ac-67a0-47f6-8df5-89d997695334" type="checkbox" ><label class="sk-toggleable__label" for="c95931ac-67a0-47f6-8df5-89d997695334">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23e97d67-ab59-486c-a260-c441f6d4d5ef" type="checkbox" ><label class="sk-toggleable__label" for="23e97d67-ab59-486c-a260-c441f6d4d5ef">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a5d0e42-f562-4ce1-bacc-250a13256876" type="checkbox" ><label class="sk-toggleable__label" for="1a5d0e42-f562-4ce1-bacc-250a13256876">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 {color: black;background-color: white;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 pre{padding: 0;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-toggleable {background-color: white;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-estimator:hover {background-color: #d4ebff;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-item {z-index: 1;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-parallel-item:only-child::after {width: 0;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-container {display: inline-block;position: relative;}#sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59 div.sk-text-repr-fallback {display: none;}</style><div id="sk-09ffb3b1-73f5-4f52-a0a6-779f4a621c59" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82881858-7458-4481-9946-e76eb9071062" type="checkbox" ><label class="sk-toggleable__label" for="82881858-7458-4481-9946-e76eb9071062">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f938d749-65c5-4c1d-b40b-b656b8a1a002" type="checkbox" ><label class="sk-toggleable__label" for="f938d749-65c5-4c1d-b40b-b656b8a1a002">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdb5c958-5af4-417c-b844-5347aa0ed2b5" type="checkbox" ><label class="sk-toggleable__label" for="fdb5c958-5af4-417c-b844-5347aa0ed2b5">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7bd22adc-836e-49e3-a639-e278e40f503d" type="checkbox" ><label class="sk-toggleable__label" for="7bd22adc-836e-49e3-a639-e278e40f503d">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 {color: black;background-color: white;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 pre{padding: 0;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-toggleable {background-color: white;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-item {z-index: 1;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-parallel-item:only-child::after {width: 0;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-container {display: inline-block;position: relative;}#sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e47bd037-2494-4dbe-9e20-e8f558c2bf77" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d45dfd5-ffe4-466e-a674-3ee45654d010" type="checkbox" ><label class="sk-toggleable__label" for="8d45dfd5-ffe4-466e-a674-3ee45654d010">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bae39c79-b55a-4a71-98b9-25adbefd04a3" type="checkbox" ><label class="sk-toggleable__label" for="bae39c79-b55a-4a71-98b9-25adbefd04a3">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25fecff0-d33a-4dd5-9719-a17a44e5294e" type="checkbox" ><label class="sk-toggleable__label" for="25fecff0-d33a-4dd5-9719-a17a44e5294e">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 {color: black;background-color: white;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 pre{padding: 0;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-toggleable {background-color: white;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-item {z-index: 1;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-parallel-item:only-child::after {width: 0;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-container {display: inline-block;position: relative;}#sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9561fb06-7316-49bd-85d2-46d1f4ed2e64" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24c2f000-2b09-42ee-9631-eec98e456b6a" type="checkbox" ><label class="sk-toggleable__label" for="24c2f000-2b09-42ee-9631-eec98e456b6a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b386f33-c77d-4e88-9e1f-33b9149983f0" type="checkbox" ><label class="sk-toggleable__label" for="8b386f33-c77d-4e88-9e1f-33b9149983f0">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0023e047-c8d8-4e05-8b0a-9312b4c16825" type="checkbox" ><label class="sk-toggleable__label" for="0023e047-c8d8-4e05-8b0a-9312b4c16825">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4f20233-82bf-419f-b71e-f9f49c245af1" type="checkbox" ><label class="sk-toggleable__label" for="f4f20233-82bf-419f-b71e-f9f49c245af1">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37b51ae5-3dba-4899-a7c5-69991f230b66" type="checkbox" ><label class="sk-toggleable__label" for="37b51ae5-3dba-4899-a7c5-69991f230b66">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2855ccdb-e5b2-41e3-88e0-10e829d4482f" type="checkbox" ><label class="sk-toggleable__label" for="2855ccdb-e5b2-41e3-88e0-10e829d4482f">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e9c7923-7087-4b2c-a636-141ed4f53fa3" type="checkbox" ><label class="sk-toggleable__label" for="0e9c7923-7087-4b2c-a636-141ed4f53fa3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d65f890-c0de-4534-84d8-677ff083021d" type="checkbox" ><label class="sk-toggleable__label" for="3d65f890-c0de-4534-84d8-677ff083021d">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01abe78b-a887-4142-bf40-89623d6ef7ab" type="checkbox" ><label class="sk-toggleable__label" for="01abe78b-a887-4142-bf40-89623d6ef7ab">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 {color: black;background-color: white;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 pre{padding: 0;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-toggleable {background-color: white;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-item {z-index: 1;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-parallel-item:only-child::after {width: 0;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-container {display: inline-block;position: relative;}#sk-7c679d52-424c-45dd-8fc0-8205347ef9a8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7c679d52-424c-45dd-8fc0-8205347ef9a8" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be902b5c-eabf-4e10-91f8-ec255ba83094" type="checkbox" ><label class="sk-toggleable__label" for="be902b5c-eabf-4e10-91f8-ec255ba83094">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e28a522-b293-4470-94f5-f2bb2f45e73b" type="checkbox" ><label class="sk-toggleable__label" for="5e28a522-b293-4470-94f5-f2bb2f45e73b">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9ba14cb-5b0b-4c40-9e13-0014dd712412" type="checkbox" ><label class="sk-toggleable__label" for="d9ba14cb-5b0b-4c40-9e13-0014dd712412">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae1f633f-7e59-4154-a993-fb0feb1f14e4" type="checkbox" ><label class="sk-toggleable__label" for="ae1f633f-7e59-4154-a993-fb0feb1f14e4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae10ee37-1807-4080-b377-df4c219186ad" type="checkbox" ><label class="sk-toggleable__label" for="ae10ee37-1807-4080-b377-df4c219186ad">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b848cf27-27f7-4fca-9e29-0272b026937c" type="checkbox" ><label class="sk-toggleable__label" for="b848cf27-27f7-4fca-9e29-0272b026937c">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbf16d5f-9d1d-4db2-9bc4-6df54b1a8ad1" type="checkbox" ><label class="sk-toggleable__label" for="fbf16d5f-9d1d-4db2-9bc4-6df54b1a8ad1">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8ba367e-811a-4508-a0d3-186d25757ebf" type="checkbox" ><label class="sk-toggleable__label" for="c8ba367e-811a-4508-a0d3-186d25757ebf">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87a6f7e5-dc10-4bf4-8383-c44587e565b4" type="checkbox" ><label class="sk-toggleable__label" for="87a6f7e5-dc10-4bf4-8383-c44587e565b4">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.121 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
