
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da {color: black;background-color: white;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da pre{padding: 0;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-toggleable {background-color: white;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-estimator:hover {background-color: #d4ebff;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-item {z-index: 1;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-parallel-item:only-child::after {width: 0;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da div.sk-text-repr-fallback {display: none;}</style><div id="sk-207987b8-b718-4d24-8e0b-4f1d8e8ae8da" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d801152-9e2d-473e-ab8e-4341d28b4bb3" type="checkbox" ><label for="8d801152-9e2d-473e-ab8e-4341d28b4bb3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37357841-08a5-45ea-9823-c7ff89170183" type="checkbox" ><label for="37357841-08a5-45ea-9823-c7ff89170183" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="905a2202-dae4-4048-a902-7a5dfc87a372" type="checkbox" ><label for="905a2202-dae4-4048-a902-7a5dfc87a372" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 {color: black;background-color: white;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 pre{padding: 0;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-toggleable {background-color: white;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-item {z-index: 1;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-parallel-item:only-child::after {width: 0;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dcbc0f91-ea71-422d-bdd1-d53e0fa76088" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bc87a5e-b62c-4ef7-b4b9-4a1e92322be0" type="checkbox" ><label for="6bc87a5e-b62c-4ef7-b4b9-4a1e92322be0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7f90802-b747-43a1-9fe2-8223c9e16ff5" type="checkbox" ><label for="c7f90802-b747-43a1-9fe2-8223c9e16ff5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c22c8dad-ef5d-468b-bc39-7ef4bea9aa45" type="checkbox" ><label for="c22c8dad-ef5d-468b-bc39-7ef4bea9aa45" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf0f9b87-bea9-41ef-92a5-fa53e292f32e" type="checkbox" ><label for="cf0f9b87-bea9-41ef-92a5-fa53e292f32e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 {color: black;background-color: white;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 pre{padding: 0;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-toggleable {background-color: white;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-item {z-index: 1;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-parallel-item:only-child::after {width: 0;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e48f2616-5e7b-4bd9-927b-3e38e2b9b441" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="791314f5-c620-4883-a8c4-3b91e512197e" type="checkbox" ><label for="791314f5-c620-4883-a8c4-3b91e512197e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="adca6d5a-8dad-4916-a062-d983d4bce006" type="checkbox" ><label for="adca6d5a-8dad-4916-a062-d983d4bce006" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22273483-4e76-4dd8-bd5f-67ae0b7a58e3" type="checkbox" ><label for="22273483-4e76-4dd8-bd5f-67ae0b7a58e3" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d {color: black;background-color: white;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d pre{padding: 0;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-toggleable {background-color: white;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-estimator:hover {background-color: #d4ebff;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-item {z-index: 1;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-parallel-item:only-child::after {width: 0;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6f2a03d5-da13-44fb-bb59-c54b6560417d div.sk-text-repr-fallback {display: none;}</style><div id="sk-6f2a03d5-da13-44fb-bb59-c54b6560417d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a72a9917-7e9d-4d9a-baf6-0417291ae52e" type="checkbox" ><label for="a72a9917-7e9d-4d9a-baf6-0417291ae52e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84dbd456-140f-49f2-b715-0b61bc9fd520" type="checkbox" ><label for="84dbd456-140f-49f2-b715-0b61bc9fd520" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1bfa7803-61c0-4ccb-b8a3-7160658e2c92" type="checkbox" ><label for="1bfa7803-61c0-4ccb-b8a3-7160658e2c92" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b086f28-204d-400d-a5fd-7bc6b6b7f7c6" type="checkbox" ><label for="2b086f28-204d-400d-a5fd-7bc6b6b7f7c6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0314b68-9b20-446d-b8a5-7a9c4822deb7" type="checkbox" ><label for="e0314b68-9b20-446d-b8a5-7a9c4822deb7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb03cc14-4769-476e-bbf3-c6936b6c928d" type="checkbox" ><label for="bb03cc14-4769-476e-bbf3-c6936b6c928d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6934e1a5-c829-4713-a7ca-edd235895ad7" type="checkbox" ><label for="6934e1a5-c829-4713-a7ca-edd235895ad7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1af885fe-4c9a-4b22-a952-4280d855064c" type="checkbox" ><label for="1af885fe-4c9a-4b22-a952-4280d855064c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f831b44-50d8-4f9a-b6a0-87950d638c54" type="checkbox" ><label for="5f831b44-50d8-4f9a-b6a0-87950d638c54" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 {color: black;background-color: white;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 pre{padding: 0;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-toggleable {background-color: white;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-item {z-index: 1;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-parallel-item:only-child::after {width: 0;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dd70ce4c-1aa5-4e5b-bcae-5c3719a1a927" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20e2196c-30e0-46a9-a598-c8452debeb6d" type="checkbox" ><label for="20e2196c-30e0-46a9-a598-c8452debeb6d" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4717caa9-7814-4be6-9ef5-df467789a757" type="checkbox" ><label for="4717caa9-7814-4be6-9ef5-df467789a757" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cdb72c9-793a-4a8a-800a-1fdb399d454c" type="checkbox" ><label for="7cdb72c9-793a-4a8a-800a-1fdb399d454c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c49ced97-aab4-44bc-9386-8c90b813a9e3" type="checkbox" ><label for="c49ced97-aab4-44bc-9386-8c90b813a9e3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="617cf0c6-0946-4e6d-ba1d-f6083535c339" type="checkbox" ><label for="617cf0c6-0946-4e6d-ba1d-f6083535c339" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ec524cb-b60e-4f67-818e-e1f53523c9d5" type="checkbox" ><label for="6ec524cb-b60e-4f67-818e-e1f53523c9d5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3140bdac-224f-479f-961f-a5ad1c39b4e3" type="checkbox" ><label for="3140bdac-224f-479f-961f-a5ad1c39b4e3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="426c3ee5-efd4-4c08-a7e1-f07035ac8e44" type="checkbox" ><label for="426c3ee5-efd4-4c08-a7e1-f07035ac8e44" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1d5be41-063e-4234-a777-f6effae10066" type="checkbox" ><label for="b1d5be41-063e-4234-a777-f6effae10066" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
