
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 {color: black;background-color: white;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 pre{padding: 0;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-toggleable {background-color: white;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-item {z-index: 1;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-parallel-item:only-child::after {width: 0;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-acfc1f1f-98b8-4e27-b52c-cc0965fcafe9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a956c1f6-53e2-4930-9458-e3ab7802d603" type="checkbox" ><label for="a956c1f6-53e2-4930-9458-e3ab7802d603" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27d303df-dd11-4e28-a219-9e45b2fcd8ed" type="checkbox" ><label for="27d303df-dd11-4e28-a219-9e45b2fcd8ed" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9b32476-b70c-41c8-bcbf-2a88bbbc2de6" type="checkbox" ><label for="a9b32476-b70c-41c8-bcbf-2a88bbbc2de6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 {color: black;background-color: white;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 pre{padding: 0;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-toggleable {background-color: white;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-estimator:hover {background-color: #d4ebff;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-item {z-index: 1;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-parallel-item:only-child::after {width: 0;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-30191dea-cb75-4aa9-bced-4a9e128d4d06 div.sk-text-repr-fallback {display: none;}</style><div id="sk-30191dea-cb75-4aa9-bced-4a9e128d4d06" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5255a14b-f5ea-427b-bb4a-ef8d26487acc" type="checkbox" ><label for="5255a14b-f5ea-427b-bb4a-ef8d26487acc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92daf8c5-5f5d-4748-bbdf-7e8b51bac32f" type="checkbox" ><label for="92daf8c5-5f5d-4748-bbdf-7e8b51bac32f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b260153-b3af-44e1-905e-1665707cd32b" type="checkbox" ><label for="1b260153-b3af-44e1-905e-1665707cd32b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8562aeb9-c639-4e16-b0e9-7e938040db3c" type="checkbox" ><label for="8562aeb9-c639-4e16-b0e9-7e938040db3c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f {color: black;background-color: white;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f pre{padding: 0;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-toggleable {background-color: white;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-estimator:hover {background-color: #d4ebff;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-item {z-index: 1;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-parallel-item:only-child::after {width: 0;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f div.sk-text-repr-fallback {display: none;}</style><div id="sk-f1660b2d-fbdf-472d-bcbd-85cbe9bc3b0f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c337c8db-2bc4-43fa-876a-e794abcaecd5" type="checkbox" ><label for="c337c8db-2bc4-43fa-876a-e794abcaecd5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89d75ca4-5c1a-470d-89e9-b20d8b1f6c17" type="checkbox" ><label for="89d75ca4-5c1a-470d-89e9-b20d8b1f6c17" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b22acc8e-e13d-4205-a240-f9cac59ce7a6" type="checkbox" ><label for="b22acc8e-e13d-4205-a240-f9cac59ce7a6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 {color: black;background-color: white;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 pre{padding: 0;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-toggleable {background-color: white;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-estimator:hover {background-color: #d4ebff;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-item {z-index: 1;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-parallel-item:only-child::after {width: 0;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676 div.sk-text-repr-fallback {display: none;}</style><div id="sk-93ab0d07-1a38-4a72-a6f7-5e5a35883676" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="941a0334-dee4-4e3a-8ac3-86a41ecb27a4" type="checkbox" ><label for="941a0334-dee4-4e3a-8ac3-86a41ecb27a4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="988a2b9b-9e82-4f0c-9f3f-39b8f879ecf3" type="checkbox" ><label for="988a2b9b-9e82-4f0c-9f3f-39b8f879ecf3" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7755c354-6a36-4f2d-9f85-0a9e31935aac" type="checkbox" ><label for="7755c354-6a36-4f2d-9f85-0a9e31935aac" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ddc38a1-38fa-4d91-b677-1c80dabadd08" type="checkbox" ><label for="6ddc38a1-38fa-4d91-b677-1c80dabadd08" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6fb474c-1180-4c85-a2d5-1618c036f716" type="checkbox" ><label for="b6fb474c-1180-4c85-a2d5-1618c036f716" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c536a15f-70f7-472c-823b-fe8239cb6640" type="checkbox" ><label for="c536a15f-70f7-472c-823b-fe8239cb6640" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fbe3cd8-7e97-4753-ae06-f15f5a06597c" type="checkbox" ><label for="9fbe3cd8-7e97-4753-ae06-f15f5a06597c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0535f40-ed0a-4e57-ba91-d7333ed12ec1" type="checkbox" ><label for="b0535f40-ed0a-4e57-ba91-d7333ed12ec1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e473e55-52f1-43f7-a692-0034ce5204ce" type="checkbox" ><label for="2e473e55-52f1-43f7-a692-0034ce5204ce" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2067f358-58a0-441a-a5bb-a698d64d54ac {color: black;background-color: white;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac pre{padding: 0;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-toggleable {background-color: white;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-estimator:hover {background-color: #d4ebff;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-item {z-index: 1;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-parallel-item:only-child::after {width: 0;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2067f358-58a0-441a-a5bb-a698d64d54ac div.sk-text-repr-fallback {display: none;}</style><div id="sk-2067f358-58a0-441a-a5bb-a698d64d54ac" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61202540-a175-487b-af2d-f769d7d3494c" type="checkbox" ><label for="61202540-a175-487b-af2d-f769d7d3494c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e655fa1-9ae6-4cd4-80e3-f80bc02b891e" type="checkbox" ><label for="7e655fa1-9ae6-4cd4-80e3-f80bc02b891e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6896ad5a-4962-4e73-9471-cce7dbaf16b3" type="checkbox" ><label for="6896ad5a-4962-4e73-9471-cce7dbaf16b3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50a362cb-a2dd-4d26-9d33-cbf7eb75287e" type="checkbox" ><label for="50a362cb-a2dd-4d26-9d33-cbf7eb75287e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae7e3166-a6b3-4172-9042-96f4e270d429" type="checkbox" ><label for="ae7e3166-a6b3-4172-9042-96f4e270d429" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="107e8419-bc4b-41a9-82c3-4bb40923e675" type="checkbox" ><label for="107e8419-bc4b-41a9-82c3-4bb40923e675" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20baa9c6-ad40-4c5a-95b4-220b10eb9b0f" type="checkbox" ><label for="20baa9c6-ad40-4c5a-95b4-220b10eb9b0f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d92a6621-f468-4b42-a1e9-c318a4735dbc" type="checkbox" ><label for="d92a6621-f468-4b42-a1e9-c318a4735dbc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5978a635-2a4f-4675-9a89-a06226b89dfb" type="checkbox" ><label for="5978a635-2a4f-4675-9a89-a06226b89dfb" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.082 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
