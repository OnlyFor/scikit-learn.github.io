
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 {color: black;background-color: white;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 pre{padding: 0;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-toggleable {background-color: white;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-item {z-index: 1;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-parallel-item:only-child::after {width: 0;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-container {display: inline-block;position: relative;}#sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2d431a29-a64b-4d22-bbc4-264cf5cdc213" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a27da46e-2e03-4d0c-b7f0-2c71f4f82af7" type="checkbox" ><label class="sk-toggleable__label" for="a27da46e-2e03-4d0c-b7f0-2c71f4f82af7">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eab33b24-9fef-495c-abbd-421a1e88d9aa" type="checkbox" ><label class="sk-toggleable__label" for="eab33b24-9fef-495c-abbd-421a1e88d9aa">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d528e720-22d5-486a-b008-e2d2370236c1" type="checkbox" ><label class="sk-toggleable__label" for="d528e720-22d5-486a-b008-e2d2370236c1">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 {color: black;background-color: white;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 pre{padding: 0;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-toggleable {background-color: white;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-item {z-index: 1;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-parallel-item:only-child::after {width: 0;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-container {display: inline-block;position: relative;}#sk-9b751286-1fe7-426d-8ebe-be9252a818d0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9b751286-1fe7-426d-8ebe-be9252a818d0" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67fbad7b-d27f-4347-bc2f-5daf25a4ca02" type="checkbox" ><label class="sk-toggleable__label" for="67fbad7b-d27f-4347-bc2f-5daf25a4ca02">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23fd47ad-2a53-4d39-bcc0-fd4089d85e21" type="checkbox" ><label class="sk-toggleable__label" for="23fd47ad-2a53-4d39-bcc0-fd4089d85e21">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="516fec32-62bc-459e-b483-08ea1913c62e" type="checkbox" ><label class="sk-toggleable__label" for="516fec32-62bc-459e-b483-08ea1913c62e">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ae87cd7-c261-4db8-a56c-447ed3aa1ed1" type="checkbox" ><label class="sk-toggleable__label" for="8ae87cd7-c261-4db8-a56c-447ed3aa1ed1">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 {color: black;background-color: white;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 pre{padding: 0;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-toggleable {background-color: white;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-item {z-index: 1;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-parallel-item:only-child::after {width: 0;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-container {display: inline-block;position: relative;}#sk-532b24b5-e1fd-448e-b9a7-874bb45bded8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-532b24b5-e1fd-448e-b9a7-874bb45bded8" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd3de950-7e43-47a5-ba5f-38579a703eb7" type="checkbox" ><label class="sk-toggleable__label" for="dd3de950-7e43-47a5-ba5f-38579a703eb7">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0af0c010-4ae4-4a9c-8b5b-e7e79ec32296" type="checkbox" ><label class="sk-toggleable__label" for="0af0c010-4ae4-4a9c-8b5b-e7e79ec32296">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62c39b83-0c04-4af7-8e99-0e3233ab2f5d" type="checkbox" ><label class="sk-toggleable__label" for="62c39b83-0c04-4af7-8e99-0e3233ab2f5d">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 {color: black;background-color: white;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 pre{padding: 0;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-toggleable {background-color: white;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-item {z-index: 1;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-parallel-item:only-child::after {width: 0;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-container {display: inline-block;position: relative;}#sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-aa373652-e5c6-4ab2-8610-a1df5186e6d1" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78066c30-8617-4c1c-b665-ee87519a11ae" type="checkbox" ><label class="sk-toggleable__label" for="78066c30-8617-4c1c-b665-ee87519a11ae">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="513b5c76-bc32-4681-8bab-22c03f5371f4" type="checkbox" ><label class="sk-toggleable__label" for="513b5c76-bc32-4681-8bab-22c03f5371f4">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="355c6b57-db07-44e7-a341-690a9b7fe1b2" type="checkbox" ><label class="sk-toggleable__label" for="355c6b57-db07-44e7-a341-690a9b7fe1b2">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="243bd85e-a02d-4cf6-a584-49b7602d65df" type="checkbox" ><label class="sk-toggleable__label" for="243bd85e-a02d-4cf6-a584-49b7602d65df">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4013e5e2-b517-4359-8f59-f11175170e80" type="checkbox" ><label class="sk-toggleable__label" for="4013e5e2-b517-4359-8f59-f11175170e80">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49f786a1-0390-4d6f-9a15-c45958b2b645" type="checkbox" ><label class="sk-toggleable__label" for="49f786a1-0390-4d6f-9a15-c45958b2b645">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58a26e20-6191-4145-8a57-9e30c691314c" type="checkbox" ><label class="sk-toggleable__label" for="58a26e20-6191-4145-8a57-9e30c691314c">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df39d9ad-0bc2-441d-b094-67c5c806bcea" type="checkbox" ><label class="sk-toggleable__label" for="df39d9ad-0bc2-441d-b094-67c5c806bcea">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="928a22c6-7f78-4db5-8678-f0f56ba22ff3" type="checkbox" ><label class="sk-toggleable__label" for="928a22c6-7f78-4db5-8678-f0f56ba22ff3">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f {color: black;background-color: white;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f pre{padding: 0;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-toggleable {background-color: white;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-estimator:hover {background-color: #d4ebff;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-item {z-index: 1;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-parallel-item:only-child::after {width: 0;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-container {display: inline-block;position: relative;}#sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f div.sk-text-repr-fallback {display: none;}</style><div id="sk-ac74dac9-6dbb-4cfc-a3e4-9d05ea5fa09f" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66900042-6cee-499f-bb42-89c0ec0fdb38" type="checkbox" ><label class="sk-toggleable__label" for="66900042-6cee-499f-bb42-89c0ec0fdb38">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0b9c3b5-a15a-44e7-9af4-dbc8a85c249f" type="checkbox" ><label class="sk-toggleable__label" for="c0b9c3b5-a15a-44e7-9af4-dbc8a85c249f">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3df75a03-068a-46e9-860c-6c6401c9e6b1" type="checkbox" ><label class="sk-toggleable__label" for="3df75a03-068a-46e9-860c-6c6401c9e6b1">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="597532e4-a72b-4c44-815d-5630edd3ac45" type="checkbox" ><label class="sk-toggleable__label" for="597532e4-a72b-4c44-815d-5630edd3ac45">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="347a473b-3d41-49ad-a506-32a9db551b65" type="checkbox" ><label class="sk-toggleable__label" for="347a473b-3d41-49ad-a506-32a9db551b65">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa7922eb-bf1f-4760-a4b2-a76558c4926c" type="checkbox" ><label class="sk-toggleable__label" for="aa7922eb-bf1f-4760-a4b2-a76558c4926c">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c818d495-7c0a-486f-9739-8c13b2f65040" type="checkbox" ><label class="sk-toggleable__label" for="c818d495-7c0a-486f-9739-8c13b2f65040">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2f7ddf9-490f-463e-b320-4e51648b9c10" type="checkbox" ><label class="sk-toggleable__label" for="a2f7ddf9-490f-463e-b320-4e51648b9c10">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6237172-44c1-465e-ad56-c6e03c24d2da" type="checkbox" ><label class="sk-toggleable__label" for="d6237172-44c1-465e-ad56-c6e03c24d2da">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
