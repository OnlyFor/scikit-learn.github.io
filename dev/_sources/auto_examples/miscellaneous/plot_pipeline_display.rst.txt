
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 {color: black;background-color: white;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 pre{padding: 0;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-toggleable {background-color: white;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-item {z-index: 1;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-parallel-item:only-child::after {width: 0;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f9ed8d8f-15c3-4ed9-aa7a-47c8674624a9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f313d9a2-d7a6-490f-b54e-fd6ba91e0306" type="checkbox" ><label for="f313d9a2-d7a6-490f-b54e-fd6ba91e0306" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d0f46a2-709e-4098-b0f5-b3f9f7218eac" type="checkbox" ><label for="8d0f46a2-709e-4098-b0f5-b3f9f7218eac" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="103fdf1b-2b45-48bb-82c3-3c8035456445" type="checkbox" ><label for="103fdf1b-2b45-48bb-82c3-3c8035456445" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d {color: black;background-color: white;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d pre{padding: 0;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-toggleable {background-color: white;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-estimator:hover {background-color: #d4ebff;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-item {z-index: 1;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-parallel-item:only-child::after {width: 0;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d div.sk-text-repr-fallback {display: none;}</style><div id="sk-6052bf3e-da0e-4726-b3d3-35ecf13a7e5d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a3b3a0d-395e-4bce-845e-4ff5b8a47275" type="checkbox" ><label for="2a3b3a0d-395e-4bce-845e-4ff5b8a47275" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="307f1645-5e90-4eb1-9c12-750912ac2165" type="checkbox" ><label for="307f1645-5e90-4eb1-9c12-750912ac2165" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a8b9b03-7e88-447a-91e5-47de4f9ba011" type="checkbox" ><label for="9a8b9b03-7e88-447a-91e5-47de4f9ba011" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="732617f4-8022-4e84-810d-068831c585be" type="checkbox" ><label for="732617f4-8022-4e84-810d-068831c585be" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 {color: black;background-color: white;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 pre{padding: 0;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-toggleable {background-color: white;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-estimator:hover {background-color: #d4ebff;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-item {z-index: 1;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-parallel-item:only-child::after {width: 0;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185 div.sk-text-repr-fallback {display: none;}</style><div id="sk-19f2ae33-7dd5-42dc-b417-30cb08d5c185" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad616ab9-947d-42e1-a57e-acfc97d5ae9d" type="checkbox" ><label for="ad616ab9-947d-42e1-a57e-acfc97d5ae9d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd9ac0b9-9669-4f04-8e50-7f60cdd1af15" type="checkbox" ><label for="bd9ac0b9-9669-4f04-8e50-7f60cdd1af15" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="082a9e80-a25a-4edb-817c-0003ebf39d7a" type="checkbox" ><label for="082a9e80-a25a-4edb-817c-0003ebf39d7a" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 {color: black;background-color: white;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 pre{padding: 0;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-toggleable {background-color: white;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-item {z-index: 1;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-parallel-item:only-child::after {width: 0;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e08f20cf-938a-446d-b48b-3290d8f618e3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e08f20cf-938a-446d-b48b-3290d8f618e3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43e45328-4bc4-469a-bf4a-00d530d216e2" type="checkbox" ><label for="43e45328-4bc4-469a-bf4a-00d530d216e2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e26211ad-4895-4f8f-953d-7e9b346675bd" type="checkbox" ><label for="e26211ad-4895-4f8f-953d-7e9b346675bd" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69d2b3b9-9e4a-4a46-ae1c-882f2637fc18" type="checkbox" ><label for="69d2b3b9-9e4a-4a46-ae1c-882f2637fc18" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d4b584a-6341-49ec-bbc3-5f8800c278db" type="checkbox" ><label for="2d4b584a-6341-49ec-bbc3-5f8800c278db" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4988b2a-74f3-4397-b790-0913711fb651" type="checkbox" ><label for="b4988b2a-74f3-4397-b790-0913711fb651" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2269498f-765d-4cee-a1e9-4ced341272ca" type="checkbox" ><label for="2269498f-765d-4cee-a1e9-4ced341272ca" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e038562-0c8f-4f2d-a1d7-8978f7caef53" type="checkbox" ><label for="8e038562-0c8f-4f2d-a1d7-8978f7caef53" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42cad7c7-7f45-4fc8-ae0f-11d9e1ac79fd" type="checkbox" ><label for="42cad7c7-7f45-4fc8-ae0f-11d9e1ac79fd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7da6e53c-86ba-41f8-b909-4f6746f899ae" type="checkbox" ><label for="7da6e53c-86ba-41f8-b909-4f6746f899ae" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 {color: black;background-color: white;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 pre{padding: 0;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-toggleable {background-color: white;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-item {z-index: 1;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-parallel-item:only-child::after {width: 0;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d6943cad-a4d1-4c6f-9c14-46d81e88ad23" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ffaa6b9-5623-4725-af3b-237a554b4577" type="checkbox" ><label for="3ffaa6b9-5623-4725-af3b-237a554b4577" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3582ad50-4fad-492e-854e-8de2df7d90f9" type="checkbox" ><label for="3582ad50-4fad-492e-854e-8de2df7d90f9" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a04f135-4eb0-4432-8b58-f18cf96a55f3" type="checkbox" ><label for="4a04f135-4eb0-4432-8b58-f18cf96a55f3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dad7d080-5a56-480d-a9ae-2d4e31e7fdba" type="checkbox" ><label for="dad7d080-5a56-480d-a9ae-2d4e31e7fdba" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ff21b44-b73d-44a3-9f36-aaa7ed723869" type="checkbox" ><label for="3ff21b44-b73d-44a3-9f36-aaa7ed723869" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe525fd7-9ce3-4bf3-9d8f-ceb19499261a" type="checkbox" ><label for="fe525fd7-9ce3-4bf3-9d8f-ceb19499261a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb760007-d907-4c96-aac7-e5dc652870ee" type="checkbox" ><label for="fb760007-d907-4c96-aac7-e5dc652870ee" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15674e65-4a06-4f09-9903-f2cd609edfad" type="checkbox" ><label for="15674e65-4a06-4f09-9903-f2cd609edfad" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c2b2c89-5a8f-4f03-b66c-acb7882a25e9" type="checkbox" ><label for="5c2b2c89-5a8f-4f03-b66c-acb7882a25e9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
