
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe {color: black;background-color: white;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe pre{padding: 0;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-toggleable {background-color: white;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-estimator:hover {background-color: #d4ebff;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-item {z-index: 1;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-parallel-item:only-child::after {width: 0;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe div.sk-text-repr-fallback {display: none;}</style><div id="sk-bae2c8d0-1fc1-410e-a90e-e8d58d0566fe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f32f65c-e9cc-42a0-ade8-714bcebb57e2" type="checkbox" ><label for="1f32f65c-e9cc-42a0-ade8-714bcebb57e2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70983e57-6ac1-40f6-a6e0-95453964c9b9" type="checkbox" ><label for="70983e57-6ac1-40f6-a6e0-95453964c9b9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d29b8fa-1c73-49b9-95f6-9384cd14ad6b" type="checkbox" ><label for="0d29b8fa-1c73-49b9-95f6-9384cd14ad6b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 {color: black;background-color: white;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 pre{padding: 0;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-toggleable {background-color: white;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-estimator:hover {background-color: #d4ebff;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-item {z-index: 1;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-parallel-item:only-child::after {width: 0;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-823eab1e-dcd3-4590-85f2-5d22729ad358 div.sk-text-repr-fallback {display: none;}</style><div id="sk-823eab1e-dcd3-4590-85f2-5d22729ad358" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2faf5e00-7fc8-4776-9520-2d2dd34fd422" type="checkbox" ><label for="2faf5e00-7fc8-4776-9520-2d2dd34fd422" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4b07039-fd27-482b-994b-19a454daf15e" type="checkbox" ><label for="d4b07039-fd27-482b-994b-19a454daf15e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5915adea-da32-4379-a597-ead2f7a30cc6" type="checkbox" ><label for="5915adea-da32-4379-a597-ead2f7a30cc6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7aca2beb-9ffd-47de-9471-3184f55aa530" type="checkbox" ><label for="7aca2beb-9ffd-47de-9471-3184f55aa530" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 {color: black;background-color: white;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 pre{padding: 0;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-toggleable {background-color: white;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-item {z-index: 1;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-parallel-item:only-child::after {width: 0;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8ae2ab05-4781-486a-ada4-6b396ffbd922 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8ae2ab05-4781-486a-ada4-6b396ffbd922" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef3e3e66-d577-4648-8d74-fe0111b37578" type="checkbox" ><label for="ef3e3e66-d577-4648-8d74-fe0111b37578" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="747942b2-13e6-4185-830f-8e581021f7bf" type="checkbox" ><label for="747942b2-13e6-4185-830f-8e581021f7bf" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afca81d9-6d34-4e70-98f6-6290d9adc430" type="checkbox" ><label for="afca81d9-6d34-4e70-98f6-6290d9adc430" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 {color: black;background-color: white;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 pre{padding: 0;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-toggleable {background-color: white;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-item {z-index: 1;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-parallel-item:only-child::after {width: 0;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ffbb2b49-fdab-4234-b84e-bfa6fecd41d7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb22b20d-4d5f-4eeb-9763-42f9c0feb316" type="checkbox" ><label for="cb22b20d-4d5f-4eeb-9763-42f9c0feb316" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91c8ee95-aca5-411f-a3b5-44429026dbb2" type="checkbox" ><label for="91c8ee95-aca5-411f-a3b5-44429026dbb2" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e67b9e26-80ef-4b27-a31e-b33e1be44fd6" type="checkbox" ><label for="e67b9e26-80ef-4b27-a31e-b33e1be44fd6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e6c40e5-9387-4689-b4a0-df9fc893e130" type="checkbox" ><label for="8e6c40e5-9387-4689-b4a0-df9fc893e130" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="251dcca8-f7e7-4196-a595-bef2e667b9d2" type="checkbox" ><label for="251dcca8-f7e7-4196-a595-bef2e667b9d2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48526160-f388-4e89-83bc-fde6be237453" type="checkbox" ><label for="48526160-f388-4e89-83bc-fde6be237453" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d893a642-049c-4f23-8ab4-f4d59cb46114" type="checkbox" ><label for="d893a642-049c-4f23-8ab4-f4d59cb46114" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16e62a21-ee3d-436b-908b-c8532969ad37" type="checkbox" ><label for="16e62a21-ee3d-436b-908b-c8532969ad37" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1665dfc4-936e-4cf7-8587-635fbb942d7e" type="checkbox" ><label for="1665dfc4-936e-4cf7-8587-635fbb942d7e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 {color: black;background-color: white;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 pre{padding: 0;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-toggleable {background-color: white;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-item {z-index: 1;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-parallel-item:only-child::after {width: 0;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-edf019aa-bf23-4c2d-bcb3-d33526e2bfc7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1faae7a-cd11-4eb7-beb2-5d3dc2d84b9c" type="checkbox" ><label for="e1faae7a-cd11-4eb7-beb2-5d3dc2d84b9c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2860ea1b-697e-4a8e-b3ce-ef3fdc2b5d86" type="checkbox" ><label for="2860ea1b-697e-4a8e-b3ce-ef3fdc2b5d86" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85e23e96-1219-4662-8f6d-1e9b6d40635b" type="checkbox" ><label for="85e23e96-1219-4662-8f6d-1e9b6d40635b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7435e47c-6ab3-4e7a-9927-8886b3de5282" type="checkbox" ><label for="7435e47c-6ab3-4e7a-9927-8886b3de5282" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a05780f7-f366-439f-8ee4-a960ff9ff5a7" type="checkbox" ><label for="a05780f7-f366-439f-8ee4-a960ff9ff5a7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1d4577d-44ac-4307-a3be-6278fffb0c91" type="checkbox" ><label for="d1d4577d-44ac-4307-a3be-6278fffb0c91" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a6934ba-24d6-417c-916c-b93f44757e4d" type="checkbox" ><label for="8a6934ba-24d6-417c-916c-b93f44757e4d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d23249e5-4592-4cab-bc6a-688c9b734a62" type="checkbox" ><label for="d23249e5-4592-4cab-bc6a-688c9b734a62" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="120ba35d-e00a-478f-ab95-08d99fffd1b4" type="checkbox" ><label for="120ba35d-e00a-478f-ab95-08d99fffd1b4" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
