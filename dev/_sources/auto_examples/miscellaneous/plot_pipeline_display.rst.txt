
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d156f700-e589-4758-8bee-7626ef36ac4b {color: black;background-color: white;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b pre{padding: 0;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-toggleable {background-color: white;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-estimator:hover {background-color: #d4ebff;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-item {z-index: 1;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-parallel-item:only-child::after {width: 0;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d156f700-e589-4758-8bee-7626ef36ac4b div.sk-text-repr-fallback {display: none;}</style><div id="sk-d156f700-e589-4758-8bee-7626ef36ac4b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1d36d5d-8a2f-490b-ac15-f6c461d90d10" type="checkbox" ><label for="a1d36d5d-8a2f-490b-ac15-f6c461d90d10" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8543d744-80dd-4481-bfee-213fe572b3b2" type="checkbox" ><label for="8543d744-80dd-4481-bfee-213fe572b3b2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be491686-994f-4b8c-b14d-5138844a03dd" type="checkbox" ><label for="be491686-994f-4b8c-b14d-5138844a03dd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 {color: black;background-color: white;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 pre{padding: 0;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-toggleable {background-color: white;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-item {z-index: 1;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-parallel-item:only-child::after {width: 0;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0813de64-a9fa-40ee-b0d2-2bcd609a89b7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbdc7915-31ad-4d50-b927-3bed95667ce4" type="checkbox" ><label for="fbdc7915-31ad-4d50-b927-3bed95667ce4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b14b1008-1744-49a5-a7dc-dd933e4e3a77" type="checkbox" ><label for="b14b1008-1744-49a5-a7dc-dd933e4e3a77" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbeed156-39ea-44bf-9b7c-97feed000279" type="checkbox" ><label for="dbeed156-39ea-44bf-9b7c-97feed000279" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="950100da-9929-404d-84d5-1de5936f6203" type="checkbox" ><label for="950100da-9929-404d-84d5-1de5936f6203" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd {color: black;background-color: white;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd pre{padding: 0;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-toggleable {background-color: white;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-estimator:hover {background-color: #d4ebff;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-item {z-index: 1;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-parallel-item:only-child::after {width: 0;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd div.sk-text-repr-fallback {display: none;}</style><div id="sk-dbf52c1f-6a2c-45dc-a50d-81101bc556dd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d198d801-58c4-4ad0-a6cf-bf69938ae9a6" type="checkbox" ><label for="d198d801-58c4-4ad0-a6cf-bf69938ae9a6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1307f8a1-5541-4506-bcd2-6ac5d90f362c" type="checkbox" ><label for="1307f8a1-5541-4506-bcd2-6ac5d90f362c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e861afac-df61-43bd-beee-6a7198692746" type="checkbox" ><label for="e861afac-df61-43bd-beee-6a7198692746" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 {color: black;background-color: white;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 pre{padding: 0;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-toggleable {background-color: white;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-item {z-index: 1;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-parallel-item:only-child::after {width: 0;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-456e44f5-88bd-4188-93fd-cf52ea5886f5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-456e44f5-88bd-4188-93fd-cf52ea5886f5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfb12799-2a62-4b3c-9549-5898a0bcc53f" type="checkbox" ><label for="bfb12799-2a62-4b3c-9549-5898a0bcc53f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68a7bbba-07de-4e10-9092-05b27868bd74" type="checkbox" ><label for="68a7bbba-07de-4e10-9092-05b27868bd74" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e2e0a55-dcf7-461e-896f-b8434ac6c2d2" type="checkbox" ><label for="7e2e0a55-dcf7-461e-896f-b8434ac6c2d2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f920e241-08e4-4864-8c16-e835150d5857" type="checkbox" ><label for="f920e241-08e4-4864-8c16-e835150d5857" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9efb2d9a-fd15-4ea5-bee3-7bdc1de3f2e7" type="checkbox" ><label for="9efb2d9a-fd15-4ea5-bee3-7bdc1de3f2e7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd6d3de7-29b3-4eb5-974a-84f683fdc268" type="checkbox" ><label for="cd6d3de7-29b3-4eb5-974a-84f683fdc268" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd93bbc1-eb96-4bd6-b3a3-aec79d9f675a" type="checkbox" ><label for="fd93bbc1-eb96-4bd6-b3a3-aec79d9f675a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9ebd1aa-ab9e-482d-ad19-3c6d1d5a26d0" type="checkbox" ><label for="c9ebd1aa-ab9e-482d-ad19-3c6d1d5a26d0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84a5675e-ee7b-463b-b7da-a320f18ae2a3" type="checkbox" ><label for="84a5675e-ee7b-463b-b7da-a320f18ae2a3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 {color: black;background-color: white;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 pre{padding: 0;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-toggleable {background-color: white;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-item {z-index: 1;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-parallel-item:only-child::after {width: 0;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b5c07503-2a2e-43b7-a132-0d01d57531e0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b5c07503-2a2e-43b7-a132-0d01d57531e0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ddb9b5b-6695-4ca8-aa8d-d59dd7dd2f5b" type="checkbox" ><label for="9ddb9b5b-6695-4ca8-aa8d-d59dd7dd2f5b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8719445-335c-4fc5-a058-1ef208311673" type="checkbox" ><label for="f8719445-335c-4fc5-a058-1ef208311673" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbb7b4f2-d55e-406f-8984-0e8bc3c189b4" type="checkbox" ><label for="dbb7b4f2-d55e-406f-8984-0e8bc3c189b4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40ed8f83-3e71-4360-b5ae-1c08c4dc2166" type="checkbox" ><label for="40ed8f83-3e71-4360-b5ae-1c08c4dc2166" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="100ce3f6-05c8-4483-8d7f-4b81a3dcb4e9" type="checkbox" ><label for="100ce3f6-05c8-4483-8d7f-4b81a3dcb4e9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba77b1cf-6bb1-4700-994b-a4dd5eb79bb1" type="checkbox" ><label for="ba77b1cf-6bb1-4700-994b-a4dd5eb79bb1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ab5ab42-bd39-4b8d-adf5-35ab4b4cb186" type="checkbox" ><label for="6ab5ab42-bd39-4b8d-adf5-35ab4b4cb186" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b72cf5dc-613a-4bd1-a869-74da1a453d6f" type="checkbox" ><label for="b72cf5dc-613a-4bd1-a869-74da1a453d6f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ef55a53-a6cd-444e-981e-d44b5aac8b8d" type="checkbox" ><label for="2ef55a53-a6cd-444e-981e-d44b5aac8b8d" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
