
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-aa2f9205-d634-4a79-818a-56829bd83377 {color: black;background-color: white;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 pre{padding: 0;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-toggleable {background-color: white;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-estimator:hover {background-color: #d4ebff;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-item {z-index: 1;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-parallel-item:only-child::after {width: 0;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-aa2f9205-d634-4a79-818a-56829bd83377 div.sk-text-repr-fallback {display: none;}</style><div id="sk-aa2f9205-d634-4a79-818a-56829bd83377" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39cfb099-0537-4ad9-8b38-e0deda1473f7" type="checkbox" ><label for="39cfb099-0537-4ad9-8b38-e0deda1473f7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb3a0af2-ee86-4af2-9dbc-f5e31f173dcd" type="checkbox" ><label for="eb3a0af2-ee86-4af2-9dbc-f5e31f173dcd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d0c6959-5e44-4473-aea3-5305e760727a" type="checkbox" ><label for="2d0c6959-5e44-4473-aea3-5305e760727a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d6498a90-74c5-49e8-9d47-752fc52683ee {color: black;background-color: white;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee pre{padding: 0;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-toggleable {background-color: white;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-estimator:hover {background-color: #d4ebff;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-item {z-index: 1;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-parallel-item:only-child::after {width: 0;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d6498a90-74c5-49e8-9d47-752fc52683ee div.sk-text-repr-fallback {display: none;}</style><div id="sk-d6498a90-74c5-49e8-9d47-752fc52683ee" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5248c3a0-b9d7-4b4d-b612-999b10f394b3" type="checkbox" ><label for="5248c3a0-b9d7-4b4d-b612-999b10f394b3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d76f486-ed86-42aa-a134-36d3ffa50246" type="checkbox" ><label for="1d76f486-ed86-42aa-a134-36d3ffa50246" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7084538-9d21-4514-8ab0-5a301af0174e" type="checkbox" ><label for="f7084538-9d21-4514-8ab0-5a301af0174e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9a9943f-749b-4551-89e8-30eea39c4a5b" type="checkbox" ><label for="b9a9943f-749b-4551-89e8-30eea39c4a5b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad {color: black;background-color: white;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad pre{padding: 0;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-toggleable {background-color: white;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-estimator:hover {background-color: #d4ebff;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-item {z-index: 1;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-parallel-item:only-child::after {width: 0;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c36a05f9-6d6a-482e-86fc-227edbc92dad div.sk-text-repr-fallback {display: none;}</style><div id="sk-c36a05f9-6d6a-482e-86fc-227edbc92dad" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc0dc569-011e-4dce-be19-5cbabbe6783b" type="checkbox" ><label for="dc0dc569-011e-4dce-be19-5cbabbe6783b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f17ddc8-bb4f-46ff-b576-8968a652b05c" type="checkbox" ><label for="3f17ddc8-bb4f-46ff-b576-8968a652b05c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="318b6733-7e89-4a57-af32-cd35e7000da7" type="checkbox" ><label for="318b6733-7e89-4a57-af32-cd35e7000da7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b {color: black;background-color: white;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b pre{padding: 0;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-toggleable {background-color: white;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-estimator:hover {background-color: #d4ebff;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-item {z-index: 1;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-parallel-item:only-child::after {width: 0;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b div.sk-text-repr-fallback {display: none;}</style><div id="sk-f28e814b-7a5f-4f0a-bea2-2997cdf8012b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ae400d2-bf7d-4177-876d-5262a066e51e" type="checkbox" ><label for="6ae400d2-bf7d-4177-876d-5262a066e51e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="adafc586-1108-4ccd-b135-0a050b6bcf6e" type="checkbox" ><label for="adafc586-1108-4ccd-b135-0a050b6bcf6e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3b5d0d2-6dc5-4cff-9fc1-80bc590be7a4" type="checkbox" ><label for="d3b5d0d2-6dc5-4cff-9fc1-80bc590be7a4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5debd933-515a-4f43-a452-bf7b01f6aeb1" type="checkbox" ><label for="5debd933-515a-4f43-a452-bf7b01f6aeb1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a206753-ce03-44b7-a198-72b9871a0380" type="checkbox" ><label for="0a206753-ce03-44b7-a198-72b9871a0380" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="daf115dd-d050-4847-8772-ba704517bec5" type="checkbox" ><label for="daf115dd-d050-4847-8772-ba704517bec5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3fa394b-fbd3-49d6-bed8-a6d7ccac5f70" type="checkbox" ><label for="d3fa394b-fbd3-49d6-bed8-a6d7ccac5f70" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85f3cf59-fd58-4efd-87c6-26546ed7593d" type="checkbox" ><label for="85f3cf59-fd58-4efd-87c6-26546ed7593d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5afa7210-b34c-45b1-a0a4-a3c4f23bee13" type="checkbox" ><label for="5afa7210-b34c-45b1-a0a4-a3c4f23bee13" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc {color: black;background-color: white;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc pre{padding: 0;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-toggleable {background-color: white;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-estimator:hover {background-color: #d4ebff;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-item {z-index: 1;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-parallel-item:only-child::after {width: 0;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc div.sk-text-repr-fallback {display: none;}</style><div id="sk-fcd32ebf-2619-4c39-b0d4-f4bc74a46bbc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="559a9e0c-fd94-4ae8-b99d-c969fd0cbb91" type="checkbox" ><label for="559a9e0c-fd94-4ae8-b99d-c969fd0cbb91" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="757dc660-7f38-42fc-ab58-1bb1597a965f" type="checkbox" ><label for="757dc660-7f38-42fc-ab58-1bb1597a965f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5968be13-652c-4722-a3ae-c4a3b4681017" type="checkbox" ><label for="5968be13-652c-4722-a3ae-c4a3b4681017" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e748a81-41bd-4770-b006-d7be10c95099" type="checkbox" ><label for="4e748a81-41bd-4770-b006-d7be10c95099" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30e36268-8ba4-4ac1-b793-01132eeaf4fa" type="checkbox" ><label for="30e36268-8ba4-4ac1-b793-01132eeaf4fa" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ea5b952-8111-44b2-a2bf-def1768800f3" type="checkbox" ><label for="8ea5b952-8111-44b2-a2bf-def1768800f3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae4442c3-1702-4892-8d2c-55e297181517" type="checkbox" ><label for="ae4442c3-1702-4892-8d2c-55e297181517" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3353501-4cea-4a7a-a4e7-3d87ba090f0c" type="checkbox" ><label for="c3353501-4cea-4a7a-a4e7-3d87ba090f0c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe39ff30-f487-4012-ba54-c42a586e6cf5" type="checkbox" ><label for="fe39ff30-f487-4012-ba54-c42a586e6cf5" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
