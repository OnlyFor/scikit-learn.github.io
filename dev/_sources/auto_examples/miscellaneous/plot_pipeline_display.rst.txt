
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb {color: black;background-color: white;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb pre{padding: 0;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-toggleable {background-color: white;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-estimator:hover {background-color: #d4ebff;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-item {z-index: 1;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-parallel-item:only-child::after {width: 0;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-container {display: inline-block;position: relative;}#sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb div.sk-text-repr-fallback {display: none;}</style><div id="sk-8e33d133-a519-4aa9-bad4-6e1a3a7712eb" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff8d43fd-3874-4709-bc10-ba470b2857af" type="checkbox" ><label class="sk-toggleable__label" for="ff8d43fd-3874-4709-bc10-ba470b2857af">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bffa7a2-9294-4bb8-9b23-824c58dfb227" type="checkbox" ><label class="sk-toggleable__label" for="6bffa7a2-9294-4bb8-9b23-824c58dfb227">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3831676f-e5f7-4442-9c94-4e032a80b65f" type="checkbox" ><label class="sk-toggleable__label" for="3831676f-e5f7-4442-9c94-4e032a80b65f">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 {color: black;background-color: white;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 pre{padding: 0;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-toggleable {background-color: white;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-item {z-index: 1;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-parallel-item:only-child::after {width: 0;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-container {display: inline-block;position: relative;}#sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-019ee0e2-7646-41d4-816a-8e47f57ad9a1" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9a4a451-a560-45b4-b684-f92608eccfa7" type="checkbox" ><label class="sk-toggleable__label" for="b9a4a451-a560-45b4-b684-f92608eccfa7">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96bab9ea-1a2b-4498-b5a3-c58ef0d1d026" type="checkbox" ><label class="sk-toggleable__label" for="96bab9ea-1a2b-4498-b5a3-c58ef0d1d026">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6ec71bc-dc1e-4d95-99c3-c36c7d5772cd" type="checkbox" ><label class="sk-toggleable__label" for="e6ec71bc-dc1e-4d95-99c3-c36c7d5772cd">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84161a2e-5895-429d-8698-1ca2efc622ee" type="checkbox" ><label class="sk-toggleable__label" for="84161a2e-5895-429d-8698-1ca2efc622ee">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa {color: black;background-color: white;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa pre{padding: 0;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-toggleable {background-color: white;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-estimator:hover {background-color: #d4ebff;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-item {z-index: 1;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-parallel-item:only-child::after {width: 0;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-container {display: inline-block;position: relative;}#sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa div.sk-text-repr-fallback {display: none;}</style><div id="sk-1b21bd69-037e-45b2-a75a-2d05a5ca42aa" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c812e03-b0be-436d-b57e-f45a9ff4e6a1" type="checkbox" ><label class="sk-toggleable__label" for="4c812e03-b0be-436d-b57e-f45a9ff4e6a1">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0f50bde-7bc6-46ad-80d5-505b52081d02" type="checkbox" ><label class="sk-toggleable__label" for="a0f50bde-7bc6-46ad-80d5-505b52081d02">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63791947-228a-43f0-87b3-0eefacec3b3b" type="checkbox" ><label class="sk-toggleable__label" for="63791947-228a-43f0-87b3-0eefacec3b3b">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 {color: black;background-color: white;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 pre{padding: 0;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-toggleable {background-color: white;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-estimator:hover {background-color: #d4ebff;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-item {z-index: 1;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-parallel-item:only-child::after {width: 0;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-container {display: inline-block;position: relative;}#sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77 div.sk-text-repr-fallback {display: none;}</style><div id="sk-324cb81c-7413-4b9b-8f17-ca0cdf9fac77" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c19435ab-252d-42ee-a509-57bbf846e764" type="checkbox" ><label class="sk-toggleable__label" for="c19435ab-252d-42ee-a509-57bbf846e764">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f71f6b57-66f7-4528-b06a-ae3428cc3364" type="checkbox" ><label class="sk-toggleable__label" for="f71f6b57-66f7-4528-b06a-ae3428cc3364">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f3cf4b2-ab43-4573-9d21-ecd339332cdb" type="checkbox" ><label class="sk-toggleable__label" for="1f3cf4b2-ab43-4573-9d21-ecd339332cdb">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="435536cc-f735-4a57-90af-5e5f3a48c7c8" type="checkbox" ><label class="sk-toggleable__label" for="435536cc-f735-4a57-90af-5e5f3a48c7c8">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2635b7ba-4f3e-498c-bd94-e7bcbdf8d241" type="checkbox" ><label class="sk-toggleable__label" for="2635b7ba-4f3e-498c-bd94-e7bcbdf8d241">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="689acea3-2677-4445-8250-87e57ef65f93" type="checkbox" ><label class="sk-toggleable__label" for="689acea3-2677-4445-8250-87e57ef65f93">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53baf834-2875-4dd7-8d68-6361e80c812d" type="checkbox" ><label class="sk-toggleable__label" for="53baf834-2875-4dd7-8d68-6361e80c812d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13680070-1cdf-4e54-a18d-8b8301c74650" type="checkbox" ><label class="sk-toggleable__label" for="13680070-1cdf-4e54-a18d-8b8301c74650">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d99f82c0-5894-4ca1-9099-4ca8070e9595" type="checkbox" ><label class="sk-toggleable__label" for="d99f82c0-5894-4ca1-9099-4ca8070e9595">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb {color: black;background-color: white;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb pre{padding: 0;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-toggleable {background-color: white;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-estimator:hover {background-color: #d4ebff;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-item {z-index: 1;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-parallel-item:only-child::after {width: 0;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-container {display: inline-block;position: relative;}#sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb div.sk-text-repr-fallback {display: none;}</style><div id="sk-3ec4171c-1ad5-4e24-93b6-772f03aa7beb" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56f89b01-9809-4075-8b44-804bdca028b3" type="checkbox" ><label class="sk-toggleable__label" for="56f89b01-9809-4075-8b44-804bdca028b3">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0924b3bd-3665-4197-befe-7d46c0928fd2" type="checkbox" ><label class="sk-toggleable__label" for="0924b3bd-3665-4197-befe-7d46c0928fd2">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61ecdf0e-5396-45a6-9c28-c8d5b963ae95" type="checkbox" ><label class="sk-toggleable__label" for="61ecdf0e-5396-45a6-9c28-c8d5b963ae95">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb181769-7199-4233-a826-32b0481e1601" type="checkbox" ><label class="sk-toggleable__label" for="bb181769-7199-4233-a826-32b0481e1601">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8338be6-9bba-4567-8b87-76b8af448950" type="checkbox" ><label class="sk-toggleable__label" for="c8338be6-9bba-4567-8b87-76b8af448950">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71440301-6e8c-4aab-b0f8-2cd9e26f01db" type="checkbox" ><label class="sk-toggleable__label" for="71440301-6e8c-4aab-b0f8-2cd9e26f01db">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e55a861e-f6ca-46f1-a780-da48b48c82e2" type="checkbox" ><label class="sk-toggleable__label" for="e55a861e-f6ca-46f1-a780-da48b48c82e2">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6386c8d-4a30-4020-b7ef-52978b0d35fd" type="checkbox" ><label class="sk-toggleable__label" for="c6386c8d-4a30-4020-b7ef-52978b0d35fd">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="105bbc82-535c-43e1-975e-56c47386478c" type="checkbox" ><label class="sk-toggleable__label" for="105bbc82-535c-43e1-975e-56c47386478c">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.110 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
