
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 {color: black;background-color: white;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 pre{padding: 0;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-toggleable {background-color: white;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-item {z-index: 1;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-parallel-item:only-child::after {width: 0;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1af128a0-9d04-44a4-b7c4-906646df8f87 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1af128a0-9d04-44a4-b7c4-906646df8f87" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2df22e52-5257-474f-bd44-0d7c360cd622" type="checkbox" ><label for="2df22e52-5257-474f-bd44-0d7c360cd622" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15a3bb29-73f5-4de4-a5dc-8828465c7fcc" type="checkbox" ><label for="15a3bb29-73f5-4de4-a5dc-8828465c7fcc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70625c48-567c-4a9c-a8c0-93fccefb0f75" type="checkbox" ><label for="70625c48-567c-4a9c-a8c0-93fccefb0f75" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-15c598ba-94db-478d-b290-25da575c9d56 {color: black;background-color: white;}#sk-15c598ba-94db-478d-b290-25da575c9d56 pre{padding: 0;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-toggleable {background-color: white;}#sk-15c598ba-94db-478d-b290-25da575c9d56 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-15c598ba-94db-478d-b290-25da575c9d56 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-15c598ba-94db-478d-b290-25da575c9d56 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-15c598ba-94db-478d-b290-25da575c9d56 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-15c598ba-94db-478d-b290-25da575c9d56 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-15c598ba-94db-478d-b290-25da575c9d56 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-estimator:hover {background-color: #d4ebff;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-item {z-index: 1;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-parallel-item:only-child::after {width: 0;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-15c598ba-94db-478d-b290-25da575c9d56 div.sk-text-repr-fallback {display: none;}</style><div id="sk-15c598ba-94db-478d-b290-25da575c9d56" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fddfa2b8-c2b7-4ce6-bf7a-e34bf508831a" type="checkbox" ><label for="fddfa2b8-c2b7-4ce6-bf7a-e34bf508831a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d2121a6-5138-42f0-8f2e-f7eb6630ac32" type="checkbox" ><label for="2d2121a6-5138-42f0-8f2e-f7eb6630ac32" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1857b62-3d30-4063-bea5-d8a0055cb681" type="checkbox" ><label for="c1857b62-3d30-4063-bea5-d8a0055cb681" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8aa40ff-66b4-479d-8d2c-87708f6e4c76" type="checkbox" ><label for="f8aa40ff-66b4-479d-8d2c-87708f6e4c76" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1bd501c9-8291-4849-92f7-94a99d7fadad {color: black;background-color: white;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad pre{padding: 0;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-toggleable {background-color: white;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-estimator:hover {background-color: #d4ebff;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-item {z-index: 1;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-parallel-item:only-child::after {width: 0;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1bd501c9-8291-4849-92f7-94a99d7fadad div.sk-text-repr-fallback {display: none;}</style><div id="sk-1bd501c9-8291-4849-92f7-94a99d7fadad" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fdc7ec1-f087-42c9-8f0e-8cf90f333152" type="checkbox" ><label for="6fdc7ec1-f087-42c9-8f0e-8cf90f333152" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5460dc65-6692-43eb-bf1e-bb5ae5a870ba" type="checkbox" ><label for="5460dc65-6692-43eb-bf1e-bb5ae5a870ba" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7eb56013-b752-47b1-9e10-d28fe346268d" type="checkbox" ><label for="7eb56013-b752-47b1-9e10-d28fe346268d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb {color: black;background-color: white;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb pre{padding: 0;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-toggleable {background-color: white;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-estimator:hover {background-color: #d4ebff;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-item {z-index: 1;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-parallel-item:only-child::after {width: 0;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb div.sk-text-repr-fallback {display: none;}</style><div id="sk-e94100e7-86fc-40ec-8c65-7a0bf27cbdcb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc266e65-3b57-4b68-a2f9-b5f421629cd3" type="checkbox" ><label for="bc266e65-3b57-4b68-a2f9-b5f421629cd3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66039972-d8e0-4ea9-a4e9-f535aefd137b" type="checkbox" ><label for="66039972-d8e0-4ea9-a4e9-f535aefd137b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1e93c55-e916-4f98-992e-3a4d3ba2e767" type="checkbox" ><label for="b1e93c55-e916-4f98-992e-3a4d3ba2e767" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2db4f3e9-712b-4ed0-b552-cbdc33b285b7" type="checkbox" ><label for="2db4f3e9-712b-4ed0-b552-cbdc33b285b7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="516a0023-e1dd-4c16-a067-954e74810943" type="checkbox" ><label for="516a0023-e1dd-4c16-a067-954e74810943" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb04c09b-c584-4def-84cf-a2bdb125cefe" type="checkbox" ><label for="fb04c09b-c584-4def-84cf-a2bdb125cefe" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="659ba43f-bb4d-4b36-9630-cebf3cea1f5d" type="checkbox" ><label for="659ba43f-bb4d-4b36-9630-cebf3cea1f5d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86a1a22c-6604-402d-b1a3-b2843bc5f7ec" type="checkbox" ><label for="86a1a22c-6604-402d-b1a3-b2843bc5f7ec" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b39cea5b-b23f-441b-8d8a-ffea0fa0586f" type="checkbox" ><label for="b39cea5b-b23f-441b-8d8a-ffea0fa0586f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 {color: black;background-color: white;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 pre{padding: 0;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-toggleable {background-color: white;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-item {z-index: 1;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-parallel-item:only-child::after {width: 0;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2918ef70-8ff5-42a4-9f68-424ce0dbfd90" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27d02b7c-2c08-4855-9651-8922782864ea" type="checkbox" ><label for="27d02b7c-2c08-4855-9651-8922782864ea" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a1f25b6-712a-4b7a-ac53-52bfb53eaabf" type="checkbox" ><label for="0a1f25b6-712a-4b7a-ac53-52bfb53eaabf" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e812dd18-4ee2-452d-8d62-4bdcf0224c92" type="checkbox" ><label for="e812dd18-4ee2-452d-8d62-4bdcf0224c92" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09cca162-1bf5-407a-8b85-c39c965a12a6" type="checkbox" ><label for="09cca162-1bf5-407a-8b85-c39c965a12a6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f239ade-98f1-4e8a-a49c-b341531328a8" type="checkbox" ><label for="3f239ade-98f1-4e8a-a49c-b341531328a8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e532d810-8781-4910-8121-b133658f712c" type="checkbox" ><label for="e532d810-8781-4910-8121-b133658f712c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72c05ab7-30a4-4c93-b414-4b8ec851c759" type="checkbox" ><label for="72c05ab7-30a4-4c93-b414-4b8ec851c759" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="813f4519-a14c-43bc-9b98-85231919a573" type="checkbox" ><label for="813f4519-a14c-43bc-9b98-85231919a573" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2a05a6c-a926-469b-901e-e3c6a410b64b" type="checkbox" ><label for="e2a05a6c-a926-469b-901e-e3c6a410b64b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
