
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 {color: black;background-color: white;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 pre{padding: 0;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-toggleable {background-color: white;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-item {z-index: 1;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-parallel-item:only-child::after {width: 0;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3c8fe4e9-b4dc-4725-b052-4070d28e62b4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa84194f-0dbc-4e2a-bbe0-6a48015bc99e" type="checkbox" ><label for="aa84194f-0dbc-4e2a-bbe0-6a48015bc99e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5374b2b-dd57-4677-903a-c728ed583114" type="checkbox" ><label for="c5374b2b-dd57-4677-903a-c728ed583114" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9773c166-192e-43d6-a3dc-c7566d21fa23" type="checkbox" ><label for="9773c166-192e-43d6-a3dc-c7566d21fa23" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 {color: black;background-color: white;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 pre{padding: 0;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-toggleable {background-color: white;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-item {z-index: 1;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-parallel-item:only-child::after {width: 0;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8d32352b-7ef0-48b2-b77f-9056ac724590 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8d32352b-7ef0-48b2-b77f-9056ac724590" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="458a8e79-4629-4259-a192-35c76a193f85" type="checkbox" ><label for="458a8e79-4629-4259-a192-35c76a193f85" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19876df3-9196-4727-95be-77141b05b63e" type="checkbox" ><label for="19876df3-9196-4727-95be-77141b05b63e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db749deb-27ec-4d6d-849b-f2e0515f08b0" type="checkbox" ><label for="db749deb-27ec-4d6d-849b-f2e0515f08b0" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6fd16be-14bf-4530-9c17-98193c4121b6" type="checkbox" ><label for="b6fd16be-14bf-4530-9c17-98193c4121b6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 {color: black;background-color: white;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 pre{padding: 0;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-toggleable {background-color: white;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-item {z-index: 1;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-parallel-item:only-child::after {width: 0;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f76fc03c-0a76-47d6-ba77-6f9aeeb3bf12" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90452a19-cb51-4de9-9bf7-887a84bd0288" type="checkbox" ><label for="90452a19-cb51-4de9-9bf7-887a84bd0288" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d57280e-ff25-4f2a-8ad5-8d41952279df" type="checkbox" ><label for="9d57280e-ff25-4f2a-8ad5-8d41952279df" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50e140dd-2469-47f4-9622-72396b004d65" type="checkbox" ><label for="50e140dd-2469-47f4-9622-72396b004d65" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde {color: black;background-color: white;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde pre{padding: 0;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-toggleable {background-color: white;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-estimator:hover {background-color: #d4ebff;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-item {z-index: 1;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-parallel-item:only-child::after {width: 0;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde div.sk-text-repr-fallback {display: none;}</style><div id="sk-3a4b89a0-9ad4-4778-8d14-47e63f5febde" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff8289d9-cf9a-4e7b-9320-3f90a5dc31d0" type="checkbox" ><label for="ff8289d9-cf9a-4e7b-9320-3f90a5dc31d0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57ab007c-33bb-4287-a899-6166d7d21f9e" type="checkbox" ><label for="57ab007c-33bb-4287-a899-6166d7d21f9e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a1fc4ff-fb4d-4ff0-bef0-1896b64d4f3a" type="checkbox" ><label for="1a1fc4ff-fb4d-4ff0-bef0-1896b64d4f3a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="672d173f-9193-44a7-9055-8ebc5b5dd5f8" type="checkbox" ><label for="672d173f-9193-44a7-9055-8ebc5b5dd5f8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51d4769e-926e-465e-98c0-5afab27da72d" type="checkbox" ><label for="51d4769e-926e-465e-98c0-5afab27da72d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2372bfe5-f26b-440a-856f-5f63950306e7" type="checkbox" ><label for="2372bfe5-f26b-440a-856f-5f63950306e7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0f96982-f50f-4e55-bb75-ecfb4e55bb0b" type="checkbox" ><label for="a0f96982-f50f-4e55-bb75-ecfb4e55bb0b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1751436d-f841-495f-ab89-387866058fd1" type="checkbox" ><label for="1751436d-f841-495f-ab89-387866058fd1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32ec824b-803f-4d83-86f3-633b54c73cd3" type="checkbox" ><label for="32ec824b-803f-4d83-86f3-633b54c73cd3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ca735403-7d82-42a6-8391-7c80669e653d {color: black;background-color: white;}#sk-ca735403-7d82-42a6-8391-7c80669e653d pre{padding: 0;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-toggleable {background-color: white;}#sk-ca735403-7d82-42a6-8391-7c80669e653d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ca735403-7d82-42a6-8391-7c80669e653d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ca735403-7d82-42a6-8391-7c80669e653d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ca735403-7d82-42a6-8391-7c80669e653d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ca735403-7d82-42a6-8391-7c80669e653d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca735403-7d82-42a6-8391-7c80669e653d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-estimator:hover {background-color: #d4ebff;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-item {z-index: 1;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-parallel-item:only-child::after {width: 0;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ca735403-7d82-42a6-8391-7c80669e653d div.sk-text-repr-fallback {display: none;}</style><div id="sk-ca735403-7d82-42a6-8391-7c80669e653d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf400430-230c-4845-8191-d3ed9c029ec8" type="checkbox" ><label for="bf400430-230c-4845-8191-d3ed9c029ec8" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b684913f-21da-46ab-8b8f-f568f55ca0a4" type="checkbox" ><label for="b684913f-21da-46ab-8b8f-f568f55ca0a4" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1ba09df-fb33-4c0b-91f7-a21f37acb33f" type="checkbox" ><label for="a1ba09df-fb33-4c0b-91f7-a21f37acb33f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0a8a634-4c83-40df-a515-7b764c125a86" type="checkbox" ><label for="f0a8a634-4c83-40df-a515-7b764c125a86" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd43ec06-4c4c-454d-90a2-302b82677cba" type="checkbox" ><label for="fd43ec06-4c4c-454d-90a2-302b82677cba" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="773ebef7-c185-4324-aa2c-dd291a22b91f" type="checkbox" ><label for="773ebef7-c185-4324-aa2c-dd291a22b91f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d529fa9f-7c41-4c45-abbb-09105a75b164" type="checkbox" ><label for="d529fa9f-7c41-4c45-abbb-09105a75b164" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2969e50d-32bd-4735-9873-3e128842b5ce" type="checkbox" ><label for="2969e50d-32bd-4735-9873-3e128842b5ce" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="011e03e9-8140-4892-bc1e-4df1d2ce3fef" type="checkbox" ><label for="011e03e9-8140-4892-bc1e-4df1d2ce3fef" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
