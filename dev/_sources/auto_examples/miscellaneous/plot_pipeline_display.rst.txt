
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 {color: black;background-color: white;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 pre{padding: 0;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-toggleable {background-color: white;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-estimator:hover {background-color: #d4ebff;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-item {z-index: 1;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-parallel-item:only-child::after {width: 0;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41 div.sk-text-repr-fallback {display: none;}</style><div id="sk-049d3384-85f1-4a83-9346-eb5bb6b9ed41" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="567bb817-54ee-4571-b5dc-b8ef35e3b51e" type="checkbox" ><label for="567bb817-54ee-4571-b5dc-b8ef35e3b51e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76b5f8a2-68ed-451b-ae6a-7e38aebefcdd" type="checkbox" ><label for="76b5f8a2-68ed-451b-ae6a-7e38aebefcdd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94de4289-7956-4383-a6b9-f6f151240116" type="checkbox" ><label for="94de4289-7956-4383-a6b9-f6f151240116" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-16172a48-eb69-4929-beef-394337234bcf {color: black;background-color: white;}#sk-16172a48-eb69-4929-beef-394337234bcf pre{padding: 0;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-toggleable {background-color: white;}#sk-16172a48-eb69-4929-beef-394337234bcf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-16172a48-eb69-4929-beef-394337234bcf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-16172a48-eb69-4929-beef-394337234bcf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-16172a48-eb69-4929-beef-394337234bcf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-16172a48-eb69-4929-beef-394337234bcf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16172a48-eb69-4929-beef-394337234bcf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-estimator:hover {background-color: #d4ebff;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-item {z-index: 1;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-parallel-item:only-child::after {width: 0;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-16172a48-eb69-4929-beef-394337234bcf div.sk-text-repr-fallback {display: none;}</style><div id="sk-16172a48-eb69-4929-beef-394337234bcf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="331a8ddd-d864-4f76-b355-cecae1d2defe" type="checkbox" ><label for="331a8ddd-d864-4f76-b355-cecae1d2defe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25c2fa89-28e9-4f95-93a9-7ef3b0d58188" type="checkbox" ><label for="25c2fa89-28e9-4f95-93a9-7ef3b0d58188" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="950341ca-8d48-4893-b494-e39cb129f4db" type="checkbox" ><label for="950341ca-8d48-4893-b494-e39cb129f4db" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9211f086-7124-4431-a63b-9c09d9bbad4c" type="checkbox" ><label for="9211f086-7124-4431-a63b-9c09d9bbad4c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 {color: black;background-color: white;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 pre{padding: 0;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-toggleable {background-color: white;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-estimator:hover {background-color: #d4ebff;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-item {z-index: 1;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-parallel-item:only-child::after {width: 0;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-abebc46b-eb14-498d-a06b-e79ce396ca62 div.sk-text-repr-fallback {display: none;}</style><div id="sk-abebc46b-eb14-498d-a06b-e79ce396ca62" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bb27653-d5a1-4ed0-9561-988ed02cbb6a" type="checkbox" ><label for="5bb27653-d5a1-4ed0-9561-988ed02cbb6a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e58951f1-3b08-40e6-8636-a407da9a0f42" type="checkbox" ><label for="e58951f1-3b08-40e6-8636-a407da9a0f42" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="753179a3-93ab-4821-8fb0-c3579b627b57" type="checkbox" ><label for="753179a3-93ab-4821-8fb0-c3579b627b57" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 {color: black;background-color: white;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 pre{padding: 0;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-toggleable {background-color: white;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-item {z-index: 1;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-parallel-item:only-child::after {width: 0;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5a0a5a4f-35ab-4312-ac54-11ae00c84db4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0dc8980-c923-4ef1-9da8-149f138c0082" type="checkbox" ><label for="b0dc8980-c923-4ef1-9da8-149f138c0082" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3891275c-89d1-4ae8-85e1-e5145369698f" type="checkbox" ><label for="3891275c-89d1-4ae8-85e1-e5145369698f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec4432fa-f105-4a29-8f28-6cdce712470b" type="checkbox" ><label for="ec4432fa-f105-4a29-8f28-6cdce712470b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef16c6ac-05c1-45b3-8f20-ec427622aa4e" type="checkbox" ><label for="ef16c6ac-05c1-45b3-8f20-ec427622aa4e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fde54d7-f3b6-41c5-a1a5-7dc515763724" type="checkbox" ><label for="0fde54d7-f3b6-41c5-a1a5-7dc515763724" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8fea81a5-35d1-491e-8103-ef64f65e0773" type="checkbox" ><label for="8fea81a5-35d1-491e-8103-ef64f65e0773" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fae66b29-a580-4b7d-9f56-f1615c75d393" type="checkbox" ><label for="fae66b29-a580-4b7d-9f56-f1615c75d393" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddd26a03-f8cb-456c-a43f-51c3794de6c7" type="checkbox" ><label for="ddd26a03-f8cb-456c-a43f-51c3794de6c7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6608c386-ad50-4781-a085-a0292786314f" type="checkbox" ><label for="6608c386-ad50-4781-a085-a0292786314f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-814f9c21-36f1-4a0d-a28f-687805652606 {color: black;background-color: white;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 pre{padding: 0;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-toggleable {background-color: white;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-estimator:hover {background-color: #d4ebff;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-item {z-index: 1;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-parallel-item:only-child::after {width: 0;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-814f9c21-36f1-4a0d-a28f-687805652606 div.sk-text-repr-fallback {display: none;}</style><div id="sk-814f9c21-36f1-4a0d-a28f-687805652606" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de527273-d3df-4065-99bc-7cb39796c61c" type="checkbox" ><label for="de527273-d3df-4065-99bc-7cb39796c61c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea324073-4066-4c3a-b2a9-dd9e9d5cf2ca" type="checkbox" ><label for="ea324073-4066-4c3a-b2a9-dd9e9d5cf2ca" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57fa41ce-8c15-480c-b0df-37ec74f0fe24" type="checkbox" ><label for="57fa41ce-8c15-480c-b0df-37ec74f0fe24" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1c9adc6-b1cc-4115-b881-e4c183d76d1d" type="checkbox" ><label for="f1c9adc6-b1cc-4115-b881-e4c183d76d1d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d8fc1c9-81e7-45b9-920b-a455439d7c4f" type="checkbox" ><label for="4d8fc1c9-81e7-45b9-920b-a455439d7c4f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbdb86ad-a188-434f-afa5-29d457e20050" type="checkbox" ><label for="fbdb86ad-a188-434f-afa5-29d457e20050" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99d7da2a-3a82-4b00-afde-e4509457517e" type="checkbox" ><label for="99d7da2a-3a82-4b00-afde-e4509457517e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28f3b569-ad60-4ee9-bff5-6ad1ba2fb00e" type="checkbox" ><label for="28f3b569-ad60-4ee9-bff5-6ad1ba2fb00e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3cffa2ec-e734-446b-a13a-1e38cd045390" type="checkbox" ><label for="3cffa2ec-e734-446b-a13a-1e38cd045390" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
