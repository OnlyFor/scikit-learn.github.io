
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 {color: black;background-color: white;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 pre{padding: 0;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-toggleable {background-color: white;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-item {z-index: 1;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-parallel-item:only-child::after {width: 0;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fbd95ed9-ea00-47aa-8abe-b64f3cdd3c70" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="768e2393-f8f5-4caf-9616-308f641dd2df" type="checkbox" ><label for="768e2393-f8f5-4caf-9616-308f641dd2df" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4147b514-de9f-42f9-ab5a-0e88b6284509" type="checkbox" ><label for="4147b514-de9f-42f9-ab5a-0e88b6284509" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dae56045-dfd4-41f3-bf98-6ecf2a7e05e3" type="checkbox" ><label for="dae56045-dfd4-41f3-bf98-6ecf2a7e05e3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f510c5b2-6765-40df-9930-c917dadaba85 {color: black;background-color: white;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 pre{padding: 0;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-toggleable {background-color: white;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-item {z-index: 1;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-parallel-item:only-child::after {width: 0;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f510c5b2-6765-40df-9930-c917dadaba85 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f510c5b2-6765-40df-9930-c917dadaba85" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6ed8b03-d8de-413f-8c0e-40ff66e28d50" type="checkbox" ><label for="a6ed8b03-d8de-413f-8c0e-40ff66e28d50" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a91fda75-57ee-435a-8a19-aacdd40ed8f3" type="checkbox" ><label for="a91fda75-57ee-435a-8a19-aacdd40ed8f3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9dd8a727-6a32-4f47-bf0d-3c88c86ea9e4" type="checkbox" ><label for="9dd8a727-6a32-4f47-bf0d-3c88c86ea9e4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce10374f-8c5d-442b-a2a7-0fbfb7e753fb" type="checkbox" ><label for="ce10374f-8c5d-442b-a2a7-0fbfb7e753fb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e {color: black;background-color: white;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e pre{padding: 0;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-toggleable {background-color: white;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-estimator:hover {background-color: #d4ebff;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-item {z-index: 1;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-parallel-item:only-child::after {width: 0;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1207d30a-95b8-4eb3-9c51-68770f89f21e div.sk-text-repr-fallback {display: none;}</style><div id="sk-1207d30a-95b8-4eb3-9c51-68770f89f21e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6e77fec-3933-4930-9abc-89a5330fac07" type="checkbox" ><label for="c6e77fec-3933-4930-9abc-89a5330fac07" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84d5383f-630f-4131-8096-60c51d7443ea" type="checkbox" ><label for="84d5383f-630f-4131-8096-60c51d7443ea" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b587fe7-c258-4e09-9c47-d24b850c429a" type="checkbox" ><label for="9b587fe7-c258-4e09-9c47-d24b850c429a" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d178d1f1-1ca1-4406-af2e-2a600641245e {color: black;background-color: white;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e pre{padding: 0;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-toggleable {background-color: white;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-estimator:hover {background-color: #d4ebff;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-item {z-index: 1;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-parallel-item:only-child::after {width: 0;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d178d1f1-1ca1-4406-af2e-2a600641245e div.sk-text-repr-fallback {display: none;}</style><div id="sk-d178d1f1-1ca1-4406-af2e-2a600641245e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fda22dde-e3df-404b-96cb-9fde5a615f0f" type="checkbox" ><label for="fda22dde-e3df-404b-96cb-9fde5a615f0f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="414a52ef-7e91-43d8-81a8-23eef71b3e4d" type="checkbox" ><label for="414a52ef-7e91-43d8-81a8-23eef71b3e4d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f959e75b-42bf-4846-a9e0-2639fc829bd2" type="checkbox" ><label for="f959e75b-42bf-4846-a9e0-2639fc829bd2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78e61899-75bf-4438-9428-94006b3f7ce0" type="checkbox" ><label for="78e61899-75bf-4438-9428-94006b3f7ce0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45caf5ae-bc84-4e45-ba4e-a05af27b31cf" type="checkbox" ><label for="45caf5ae-bc84-4e45-ba4e-a05af27b31cf" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f22befc-2f28-4a05-bc22-1555889b7444" type="checkbox" ><label for="1f22befc-2f28-4a05-bc22-1555889b7444" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="620d8ef8-179c-435e-8c2d-149bb424737f" type="checkbox" ><label for="620d8ef8-179c-435e-8c2d-149bb424737f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd285a3e-8b6f-4bce-a148-aeafc1ef332f" type="checkbox" ><label for="cd285a3e-8b6f-4bce-a148-aeafc1ef332f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64e327e9-9c72-4948-98eb-2afb6373b19a" type="checkbox" ><label for="64e327e9-9c72-4948-98eb-2afb6373b19a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-64ead120-9970-48e1-b2c7-5df396639041 {color: black;background-color: white;}#sk-64ead120-9970-48e1-b2c7-5df396639041 pre{padding: 0;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-toggleable {background-color: white;}#sk-64ead120-9970-48e1-b2c7-5df396639041 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-64ead120-9970-48e1-b2c7-5df396639041 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-64ead120-9970-48e1-b2c7-5df396639041 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-64ead120-9970-48e1-b2c7-5df396639041 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-64ead120-9970-48e1-b2c7-5df396639041 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64ead120-9970-48e1-b2c7-5df396639041 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-estimator:hover {background-color: #d4ebff;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-item {z-index: 1;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-parallel-item:only-child::after {width: 0;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-64ead120-9970-48e1-b2c7-5df396639041 div.sk-text-repr-fallback {display: none;}</style><div id="sk-64ead120-9970-48e1-b2c7-5df396639041" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82fbf4f1-01d4-4cde-85e2-4b13d71427af" type="checkbox" ><label for="82fbf4f1-01d4-4cde-85e2-4b13d71427af" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e3114bc-b949-4d8a-8881-95ade8640b7b" type="checkbox" ><label for="5e3114bc-b949-4d8a-8881-95ade8640b7b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c8b7810-ff7c-496d-9799-b9cb2c77a3f4" type="checkbox" ><label for="2c8b7810-ff7c-496d-9799-b9cb2c77a3f4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a28749f3-1091-4645-acad-8ca18c79e8b4" type="checkbox" ><label for="a28749f3-1091-4645-acad-8ca18c79e8b4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99e61868-f7f6-45a7-a065-9b6acc67eed1" type="checkbox" ><label for="99e61868-f7f6-45a7-a065-9b6acc67eed1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49e4488a-858b-4983-bc88-42c6a1237205" type="checkbox" ><label for="49e4488a-858b-4983-bc88-42c6a1237205" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd03edaf-0302-4d50-ad86-e713c9175087" type="checkbox" ><label for="dd03edaf-0302-4d50-ad86-e713c9175087" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="798abd82-4b8f-465c-8326-7008cbf0c4e7" type="checkbox" ><label for="798abd82-4b8f-465c-8326-7008cbf0c4e7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52be5a3a-b9c2-44d8-8934-8584c03440f6" type="checkbox" ><label for="52be5a3a-b9c2-44d8-8934-8584c03440f6" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
