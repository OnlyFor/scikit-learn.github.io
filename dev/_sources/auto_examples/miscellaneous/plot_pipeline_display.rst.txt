
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 {color: black;background-color: white;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 pre{padding: 0;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-toggleable {background-color: white;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-item {z-index: 1;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-parallel-item:only-child::after {width: 0;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f71761a3-3c9e-4929-ac56-32310a40b2f9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f71761a3-3c9e-4929-ac56-32310a40b2f9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e43bb01e-70f2-4cce-a191-61bc9d63a1af" type="checkbox" ><label for="e43bb01e-70f2-4cce-a191-61bc9d63a1af" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b151c728-3dd9-4a4e-9ba2-3ca4b93ecde6" type="checkbox" ><label for="b151c728-3dd9-4a4e-9ba2-3ca4b93ecde6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3823780-9bcc-4398-9cd5-3e1559bfbdbb" type="checkbox" ><label for="a3823780-9bcc-4398-9cd5-3e1559bfbdbb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d {color: black;background-color: white;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d pre{padding: 0;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-toggleable {background-color: white;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-estimator:hover {background-color: #d4ebff;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-item {z-index: 1;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-parallel-item:only-child::after {width: 0;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d div.sk-text-repr-fallback {display: none;}</style><div id="sk-360195b0-8e87-4f01-90ac-dbad6b8adc3d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bfeed12-c12e-4464-b389-40b233ab6d9b" type="checkbox" ><label for="4bfeed12-c12e-4464-b389-40b233ab6d9b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04be05af-39af-4f25-a46d-b31750d26059" type="checkbox" ><label for="04be05af-39af-4f25-a46d-b31750d26059" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80b0afe9-3281-4325-8c7e-b712321f2a09" type="checkbox" ><label for="80b0afe9-3281-4325-8c7e-b712321f2a09" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7306ca0b-5440-485b-89d5-2e716787c204" type="checkbox" ><label for="7306ca0b-5440-485b-89d5-2e716787c204" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c10dbd56-8577-4397-b67f-c2591ba30193 {color: black;background-color: white;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 pre{padding: 0;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-toggleable {background-color: white;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-item {z-index: 1;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-parallel-item:only-child::after {width: 0;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c10dbd56-8577-4397-b67f-c2591ba30193 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c10dbd56-8577-4397-b67f-c2591ba30193" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0287517-9826-4ed6-857f-96a819f542ee" type="checkbox" ><label for="c0287517-9826-4ed6-857f-96a819f542ee" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86291776-54b0-48e6-b215-8a38d5973bc5" type="checkbox" ><label for="86291776-54b0-48e6-b215-8a38d5973bc5" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5697a432-20ab-4a46-80a5-ec949eef3150" type="checkbox" ><label for="5697a432-20ab-4a46-80a5-ec949eef3150" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 {color: black;background-color: white;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 pre{padding: 0;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-toggleable {background-color: white;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-item {z-index: 1;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-parallel-item:only-child::after {width: 0;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b7e4872d-b43e-482e-a249-3f5006b5aba8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b7e4872d-b43e-482e-a249-3f5006b5aba8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b025b008-d751-4110-9b34-07d0c153ae9a" type="checkbox" ><label for="b025b008-d751-4110-9b34-07d0c153ae9a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b146e70b-b3c8-4ed2-8ffa-59079f3ac278" type="checkbox" ><label for="b146e70b-b3c8-4ed2-8ffa-59079f3ac278" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17d9ee4a-fcb1-4867-8f6e-10462ac116ee" type="checkbox" ><label for="17d9ee4a-fcb1-4867-8f6e-10462ac116ee" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fffec6c-695b-418c-97d7-96cc733e0708" type="checkbox" ><label for="4fffec6c-695b-418c-97d7-96cc733e0708" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f74eb25c-640e-4a37-9a54-26dac86a3bec" type="checkbox" ><label for="f74eb25c-640e-4a37-9a54-26dac86a3bec" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9bfa845-e77b-4a88-9f60-b5c9fe26eeb4" type="checkbox" ><label for="f9bfa845-e77b-4a88-9f60-b5c9fe26eeb4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d24a538-fbc3-473a-9e4c-ecf554d1ee87" type="checkbox" ><label for="9d24a538-fbc3-473a-9e4c-ecf554d1ee87" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ba586d4-adbd-47f7-aa9b-4c482adf57a9" type="checkbox" ><label for="1ba586d4-adbd-47f7-aa9b-4c482adf57a9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba3a1d8e-2836-42d0-ba42-cdf79d3a24c3" type="checkbox" ><label for="ba3a1d8e-2836-42d0-ba42-cdf79d3a24c3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d195f938-8373-4c70-8809-9aaf66250c39 {color: black;background-color: white;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 pre{padding: 0;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-toggleable {background-color: white;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-item {z-index: 1;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-parallel-item:only-child::after {width: 0;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d195f938-8373-4c70-8809-9aaf66250c39 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d195f938-8373-4c70-8809-9aaf66250c39" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="092529c8-c680-427c-b83a-1b4d3f83bca6" type="checkbox" ><label for="092529c8-c680-427c-b83a-1b4d3f83bca6" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92d983cc-4c85-4259-a159-36767dc0abda" type="checkbox" ><label for="92d983cc-4c85-4259-a159-36767dc0abda" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bc901ad-7e22-46bd-bd2b-3424bd1f8d6b" type="checkbox" ><label for="0bc901ad-7e22-46bd-bd2b-3424bd1f8d6b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9eddfc49-ff7c-4f1b-9b35-1360d34e8594" type="checkbox" ><label for="9eddfc49-ff7c-4f1b-9b35-1360d34e8594" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5ff7194-5834-4653-97fb-a93625582391" type="checkbox" ><label for="e5ff7194-5834-4653-97fb-a93625582391" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fc7fab3-e0c8-4d39-8f82-9cc84ef8ddde" type="checkbox" ><label for="3fc7fab3-e0c8-4d39-8f82-9cc84ef8ddde" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00da00c9-32e3-471a-8e00-229893a13379" type="checkbox" ><label for="00da00c9-32e3-471a-8e00-229893a13379" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36d35242-a1c9-45bd-905c-05e8b524e811" type="checkbox" ><label for="36d35242-a1c9-45bd-905c-05e8b524e811" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bba03ae-f19f-4fad-8634-6ed3d93c9e34" type="checkbox" ><label for="3bba03ae-f19f-4fad-8634-6ed3d93c9e34" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.102 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
