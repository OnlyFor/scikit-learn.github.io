
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 {color: black;background-color: white;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 pre{padding: 0;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-toggleable {background-color: white;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-item {z-index: 1;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-parallel-item:only-child::after {width: 0;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ee47bbbe-f811-4088-9b71-ca92dbf98c24" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3adfe700-3cec-4a56-8f4f-91595f957141" type="checkbox" ><label for="3adfe700-3cec-4a56-8f4f-91595f957141" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3db942f9-ed33-4b78-9cef-57d9fb6447a3" type="checkbox" ><label for="3db942f9-ed33-4b78-9cef-57d9fb6447a3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb9abb53-7516-4b4b-969f-81df25986ba7" type="checkbox" ><label for="eb9abb53-7516-4b4b-969f-81df25986ba7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb {color: black;background-color: white;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb pre{padding: 0;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-toggleable {background-color: white;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-estimator:hover {background-color: #d4ebff;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-item {z-index: 1;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-parallel-item:only-child::after {width: 0;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb div.sk-text-repr-fallback {display: none;}</style><div id="sk-16ecb688-ac6f-4b38-9014-c5e1beb063bb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f16659bc-361c-474b-89a7-1c21d486fc37" type="checkbox" ><label for="f16659bc-361c-474b-89a7-1c21d486fc37" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc9ab377-2e7f-4e27-b34e-a4fb856f36e8" type="checkbox" ><label for="bc9ab377-2e7f-4e27-b34e-a4fb856f36e8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d2346f4-f10c-4d2f-91b6-eb31fe360beb" type="checkbox" ><label for="3d2346f4-f10c-4d2f-91b6-eb31fe360beb" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7de4a7df-ce9d-4b6e-9c80-7a4e2b86577e" type="checkbox" ><label for="7de4a7df-ce9d-4b6e-9c80-7a4e2b86577e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-703340b0-820d-4069-943b-7062925e7ca6 {color: black;background-color: white;}#sk-703340b0-820d-4069-943b-7062925e7ca6 pre{padding: 0;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-toggleable {background-color: white;}#sk-703340b0-820d-4069-943b-7062925e7ca6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-703340b0-820d-4069-943b-7062925e7ca6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-703340b0-820d-4069-943b-7062925e7ca6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-703340b0-820d-4069-943b-7062925e7ca6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-703340b0-820d-4069-943b-7062925e7ca6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-703340b0-820d-4069-943b-7062925e7ca6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-item {z-index: 1;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-parallel-item:only-child::after {width: 0;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-703340b0-820d-4069-943b-7062925e7ca6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-703340b0-820d-4069-943b-7062925e7ca6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2fbd0cc-831c-4b07-895c-1606267a004d" type="checkbox" ><label for="e2fbd0cc-831c-4b07-895c-1606267a004d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3c3ce30-6ca4-4f69-91d2-069387e77bce" type="checkbox" ><label for="b3c3ce30-6ca4-4f69-91d2-069387e77bce" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e8a7610-0f4a-401f-aeb3-ab54b12f1add" type="checkbox" ><label for="8e8a7610-0f4a-401f-aeb3-ab54b12f1add" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 {color: black;background-color: white;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 pre{padding: 0;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-toggleable {background-color: white;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-item {z-index: 1;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-parallel-item:only-child::after {width: 0;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f2c6f6ed-c7fb-454e-b604-23985079f240 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f2c6f6ed-c7fb-454e-b604-23985079f240" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a38da993-519f-41a7-8c18-aef077a98fbe" type="checkbox" ><label for="a38da993-519f-41a7-8c18-aef077a98fbe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0d363d2-f1f3-4411-9966-4a5b732b02e0" type="checkbox" ><label for="a0d363d2-f1f3-4411-9966-4a5b732b02e0" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="655d33b8-2e60-4ac0-897c-0f47b5f647c9" type="checkbox" ><label for="655d33b8-2e60-4ac0-897c-0f47b5f647c9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94734e72-159e-421d-9966-d02aec4fdbd7" type="checkbox" ><label for="94734e72-159e-421d-9966-d02aec4fdbd7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee01b08f-6895-4cdd-93d5-47e67eb20e86" type="checkbox" ><label for="ee01b08f-6895-4cdd-93d5-47e67eb20e86" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7baec57b-ebc4-40f4-8e4d-8a2739734f13" type="checkbox" ><label for="7baec57b-ebc4-40f4-8e4d-8a2739734f13" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7ceddba-4ce4-4c29-ba38-f2b64978c313" type="checkbox" ><label for="a7ceddba-4ce4-4c29-ba38-f2b64978c313" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="941d1c25-eb6c-4625-b42d-c0d147984f6d" type="checkbox" ><label for="941d1c25-eb6c-4625-b42d-c0d147984f6d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="242afc81-47df-465c-8fed-fdece0df9ead" type="checkbox" ><label for="242afc81-47df-465c-8fed-fdece0df9ead" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 {color: black;background-color: white;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 pre{padding: 0;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-toggleable {background-color: white;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-item {z-index: 1;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-parallel-item:only-child::after {width: 0;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fa21ff30-a6c5-4381-89eb-0638fc670930 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fa21ff30-a6c5-4381-89eb-0638fc670930" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="424b9321-34cf-43f2-a256-87664c977840" type="checkbox" ><label for="424b9321-34cf-43f2-a256-87664c977840" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba7d4c5f-b32d-4e82-9bce-babe1652e274" type="checkbox" ><label for="ba7d4c5f-b32d-4e82-9bce-babe1652e274" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5708a413-69c9-4694-91d2-63b32b3479dc" type="checkbox" ><label for="5708a413-69c9-4694-91d2-63b32b3479dc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d233a83c-751a-4b6a-b1d0-950a2822cbe5" type="checkbox" ><label for="d233a83c-751a-4b6a-b1d0-950a2822cbe5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9351476c-7a63-4b0c-9050-733f08de325b" type="checkbox" ><label for="9351476c-7a63-4b0c-9050-733f08de325b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af7333f5-e84a-4dbf-b215-7f049fb2d87b" type="checkbox" ><label for="af7333f5-e84a-4dbf-b215-7f049fb2d87b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80b92941-9834-4e2f-94e3-762531ca6db3" type="checkbox" ><label for="80b92941-9834-4e2f-94e3-762531ca6db3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e2cfc30-3bfd-4c3b-b604-b4fa667b405f" type="checkbox" ><label for="9e2cfc30-3bfd-4c3b-b604-b4fa667b405f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24fcf663-ef8a-4382-b588-0ebea5fc5509" type="checkbox" ><label for="24fcf663-ef8a-4382-b588-0ebea5fc5509" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.095 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
