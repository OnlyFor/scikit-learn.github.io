
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca {color: black;background-color: white;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca pre{padding: 0;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-toggleable {background-color: white;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-estimator:hover {background-color: #d4ebff;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-item {z-index: 1;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-parallel-item:only-child::after {width: 0;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c299b98d-e7f6-4d8c-9503-8475d10664ca div.sk-text-repr-fallback {display: none;}</style><div id="sk-c299b98d-e7f6-4d8c-9503-8475d10664ca" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06bc47d0-85aa-4676-8ac3-104b572b62e5" type="checkbox" ><label for="06bc47d0-85aa-4676-8ac3-104b572b62e5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0a571a9-a4b6-4681-bbe0-46d077e43348" type="checkbox" ><label for="e0a571a9-a4b6-4681-bbe0-46d077e43348" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8a26e6b-786a-491c-824e-5147dd5ddd9e" type="checkbox" ><label for="d8a26e6b-786a-491c-824e-5147dd5ddd9e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f {color: black;background-color: white;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f pre{padding: 0;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-toggleable {background-color: white;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-estimator:hover {background-color: #d4ebff;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-item {z-index: 1;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-parallel-item:only-child::after {width: 0;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f div.sk-text-repr-fallback {display: none;}</style><div id="sk-c2a3f514-1d87-4cdf-85fb-b10a73174a6f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1c94c46-f161-4550-93b6-dfc4b1a950aa" type="checkbox" ><label for="e1c94c46-f161-4550-93b6-dfc4b1a950aa" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f556baa4-94dd-46d1-b014-394c1179fb31" type="checkbox" ><label for="f556baa4-94dd-46d1-b014-394c1179fb31" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22e0955c-fbbe-43a2-9fb4-fa87b4cfbcf4" type="checkbox" ><label for="22e0955c-fbbe-43a2-9fb4-fa87b4cfbcf4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="874bb2e3-4ab1-49d2-bdda-f862c269d3f3" type="checkbox" ><label for="874bb2e3-4ab1-49d2-bdda-f862c269d3f3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac {color: black;background-color: white;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac pre{padding: 0;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-toggleable {background-color: white;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-estimator:hover {background-color: #d4ebff;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-item {z-index: 1;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-parallel-item:only-child::after {width: 0;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8d87b334-fcef-44cc-97ae-f778e3c742ac div.sk-text-repr-fallback {display: none;}</style><div id="sk-8d87b334-fcef-44cc-97ae-f778e3c742ac" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d03cd1b2-3f0c-4fce-bbad-b7951080c130" type="checkbox" ><label for="d03cd1b2-3f0c-4fce-bbad-b7951080c130" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1ee66e0-1584-48cb-b5d3-9b718d1a931d" type="checkbox" ><label for="e1ee66e0-1584-48cb-b5d3-9b718d1a931d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b89de256-6acf-4f9c-ac39-ccb7e34f4900" type="checkbox" ><label for="b89de256-6acf-4f9c-ac39-ccb7e34f4900" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-88e1d893-66fc-4abb-b798-6ba613881edd {color: black;background-color: white;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd pre{padding: 0;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-toggleable {background-color: white;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-estimator:hover {background-color: #d4ebff;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-item {z-index: 1;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-parallel-item:only-child::after {width: 0;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-88e1d893-66fc-4abb-b798-6ba613881edd div.sk-text-repr-fallback {display: none;}</style><div id="sk-88e1d893-66fc-4abb-b798-6ba613881edd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99ac4288-3170-4e70-b9a2-cece159e4901" type="checkbox" ><label for="99ac4288-3170-4e70-b9a2-cece159e4901" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3f37d2c-3e0e-479c-a994-8dd6be21f411" type="checkbox" ><label for="e3f37d2c-3e0e-479c-a994-8dd6be21f411" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb8036b3-cfa3-4b06-a3b4-6889697a7e1d" type="checkbox" ><label for="cb8036b3-cfa3-4b06-a3b4-6889697a7e1d" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="035ffcf2-5d14-4ad4-b117-8cceb1e552b6" type="checkbox" ><label for="035ffcf2-5d14-4ad4-b117-8cceb1e552b6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c390f2ac-2c41-4bc4-9446-1781c91b0912" type="checkbox" ><label for="c390f2ac-2c41-4bc4-9446-1781c91b0912" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="192cf8f5-5389-4837-90d1-5e90797b2998" type="checkbox" ><label for="192cf8f5-5389-4837-90d1-5e90797b2998" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc1a53b7-1434-4064-8537-7ef52dc44d5e" type="checkbox" ><label for="fc1a53b7-1434-4064-8537-7ef52dc44d5e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45b8d90e-92b4-44bc-8b08-9df6591d4b65" type="checkbox" ><label for="45b8d90e-92b4-44bc-8b08-9df6591d4b65" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fbb0e2d-b5ab-4caf-be79-d613ef317d7c" type="checkbox" ><label for="7fbb0e2d-b5ab-4caf-be79-d613ef317d7c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 {color: black;background-color: white;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 pre{padding: 0;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-toggleable {background-color: white;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-item {z-index: 1;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-parallel-item:only-child::after {width: 0;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dc2627c7-dbbe-4bff-9111-107252c93ea2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dc2627c7-dbbe-4bff-9111-107252c93ea2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ee54591-b723-4877-8e00-1a0f9bd4bb49" type="checkbox" ><label for="9ee54591-b723-4877-8e00-1a0f9bd4bb49" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e912166-f55b-4263-b090-5c2ade6f11f7" type="checkbox" ><label for="8e912166-f55b-4263-b090-5c2ade6f11f7" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca1a5f01-953d-4d9c-8b87-1a864b9aacd9" type="checkbox" ><label for="ca1a5f01-953d-4d9c-8b87-1a864b9aacd9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5be91c42-e78b-40dd-95aa-6fe1abc2f042" type="checkbox" ><label for="5be91c42-e78b-40dd-95aa-6fe1abc2f042" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3862b832-6f88-42c8-adb8-81db14bf71ee" type="checkbox" ><label for="3862b832-6f88-42c8-adb8-81db14bf71ee" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2436d080-65c4-411f-87b1-1fec03225ed6" type="checkbox" ><label for="2436d080-65c4-411f-87b1-1fec03225ed6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3691550d-253a-423d-a59c-80cc6dfb4429" type="checkbox" ><label for="3691550d-253a-423d-a59c-80cc6dfb4429" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7408c1b4-85ed-4572-a8f7-ecba69645cbc" type="checkbox" ><label for="7408c1b4-85ed-4572-a8f7-ecba69645cbc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3a72296-423c-4667-b46a-173e850e8bee" type="checkbox" ><label for="e3a72296-423c-4667-b46a-173e850e8bee" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.090 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
