
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 {color: black;background-color: white;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 pre{padding: 0;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-toggleable {background-color: white;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-item {z-index: 1;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-parallel-item:only-child::after {width: 0;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-917883ba-77eb-42cd-8bc2-1264f30a3ef7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efab823b-ab9a-46a4-b676-9e62281c148b" type="checkbox" ><label for="efab823b-ab9a-46a4-b676-9e62281c148b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e1a1598-d3f0-4a23-9e05-f4b5388e7438" type="checkbox" ><label for="5e1a1598-d3f0-4a23-9e05-f4b5388e7438" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d30e96ce-243c-4e80-ba21-e892365a015e" type="checkbox" ><label for="d30e96ce-243c-4e80-ba21-e892365a015e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 {color: black;background-color: white;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 pre{padding: 0;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-toggleable {background-color: white;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-item {z-index: 1;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-parallel-item:only-child::after {width: 0;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f9d94888-4dbc-48c0-b8b2-462f717afe07 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f9d94888-4dbc-48c0-b8b2-462f717afe07" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4066739-8c65-41df-9b08-527f1d94bb45" type="checkbox" ><label for="a4066739-8c65-41df-9b08-527f1d94bb45" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="517213e3-40e4-4e25-8df6-7e8b48aefe31" type="checkbox" ><label for="517213e3-40e4-4e25-8df6-7e8b48aefe31" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7b8637e-7dc4-492d-b3e2-9ea9ccd273a5" type="checkbox" ><label for="d7b8637e-7dc4-492d-b3e2-9ea9ccd273a5" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a43aa2aa-cbbf-4ded-9f54-b99ecb8b2d3f" type="checkbox" ><label for="a43aa2aa-cbbf-4ded-9f54-b99ecb8b2d3f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2007f287-8626-4488-91ac-69d5ddda2e59 {color: black;background-color: white;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 pre{padding: 0;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-toggleable {background-color: white;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-item {z-index: 1;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-parallel-item:only-child::after {width: 0;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2007f287-8626-4488-91ac-69d5ddda2e59 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2007f287-8626-4488-91ac-69d5ddda2e59" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c968791-61d3-456c-b3cc-a5d3ab363cdb" type="checkbox" ><label for="5c968791-61d3-456c-b3cc-a5d3ab363cdb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a827422b-3fe3-4928-998b-e948af98dcbf" type="checkbox" ><label for="a827422b-3fe3-4928-998b-e948af98dcbf" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38af1f26-1328-4139-b557-4681f3acd92c" type="checkbox" ><label for="38af1f26-1328-4139-b557-4681f3acd92c" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-607672d2-be38-4941-b764-087c8fa274ce {color: black;background-color: white;}#sk-607672d2-be38-4941-b764-087c8fa274ce pre{padding: 0;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-toggleable {background-color: white;}#sk-607672d2-be38-4941-b764-087c8fa274ce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-607672d2-be38-4941-b764-087c8fa274ce label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-607672d2-be38-4941-b764-087c8fa274ce label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-607672d2-be38-4941-b764-087c8fa274ce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-607672d2-be38-4941-b764-087c8fa274ce input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-607672d2-be38-4941-b764-087c8fa274ce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-estimator:hover {background-color: #d4ebff;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-item {z-index: 1;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-parallel-item:only-child::after {width: 0;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-607672d2-be38-4941-b764-087c8fa274ce div.sk-text-repr-fallback {display: none;}</style><div id="sk-607672d2-be38-4941-b764-087c8fa274ce" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbd2677f-e9c2-419c-b191-de2ff9e5a364" type="checkbox" ><label for="bbd2677f-e9c2-419c-b191-de2ff9e5a364" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27bba503-3829-40fa-a048-ebc1e22c7375" type="checkbox" ><label for="27bba503-3829-40fa-a048-ebc1e22c7375" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="902dadda-06df-4b96-99d3-304797001c8b" type="checkbox" ><label for="902dadda-06df-4b96-99d3-304797001c8b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e063aadd-b0a5-4322-973c-03e57bd6210b" type="checkbox" ><label for="e063aadd-b0a5-4322-973c-03e57bd6210b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34306e8e-9e63-4eff-9f69-169125d41e1d" type="checkbox" ><label for="34306e8e-9e63-4eff-9f69-169125d41e1d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b676d4d0-65e0-4f16-9008-278db4e5c8c8" type="checkbox" ><label for="b676d4d0-65e0-4f16-9008-278db4e5c8c8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76a5be34-1365-4102-bf74-3117be37415f" type="checkbox" ><label for="76a5be34-1365-4102-bf74-3117be37415f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a846abb5-632d-448b-8546-89fe936ceeff" type="checkbox" ><label for="a846abb5-632d-448b-8546-89fe936ceeff" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc3ef6c0-5a88-4eff-8de2-e76b8e34f020" type="checkbox" ><label for="dc3ef6c0-5a88-4eff-8de2-e76b8e34f020" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa947514-83ff-4687-947d-9a83c2c7e800 {color: black;background-color: white;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 pre{padding: 0;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-toggleable {background-color: white;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-item {z-index: 1;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-parallel-item:only-child::after {width: 0;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fa947514-83ff-4687-947d-9a83c2c7e800 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fa947514-83ff-4687-947d-9a83c2c7e800" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17b6cb60-879f-4850-81ab-aaa46f732e70" type="checkbox" ><label for="17b6cb60-879f-4850-81ab-aaa46f732e70" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="331baffb-3ff3-48c3-a2c8-0f8de0aca0c9" type="checkbox" ><label for="331baffb-3ff3-48c3-a2c8-0f8de0aca0c9" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0f18ac4-0609-4d5a-bc9e-d0c825c4c3bb" type="checkbox" ><label for="f0f18ac4-0609-4d5a-bc9e-d0c825c4c3bb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d4bd615-9c96-4820-b4b8-ff8f01f67430" type="checkbox" ><label for="6d4bd615-9c96-4820-b4b8-ff8f01f67430" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86312551-dfb7-46f0-9842-1f13ff84f961" type="checkbox" ><label for="86312551-dfb7-46f0-9842-1f13ff84f961" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00fb09c7-56e2-486e-9da1-1bc65ef965b5" type="checkbox" ><label for="00fb09c7-56e2-486e-9da1-1bc65ef965b5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d128488b-5fd7-45c1-9b33-67e07b44ced8" type="checkbox" ><label for="d128488b-5fd7-45c1-9b33-67e07b44ced8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2eb10276-e6fa-4b92-ac8f-18f35c23d2d4" type="checkbox" ><label for="2eb10276-e6fa-4b92-ac8f-18f35c23d2d4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efc12d6e-bbf0-4442-b8c8-376803462616" type="checkbox" ><label for="efc12d6e-bbf0-4442-b8c8-376803462616" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
