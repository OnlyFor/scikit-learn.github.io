
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 {color: black;background-color: white;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 pre{padding: 0;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-toggleable {background-color: white;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-item {z-index: 1;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-parallel-item:only-child::after {width: 0;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3387763d-b359-4502-a4c5-c3df49ef2f96 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3387763d-b359-4502-a4c5-c3df49ef2f96" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a624533-30d9-44d7-be6f-aea30f8e419f" type="checkbox" ><label for="0a624533-30d9-44d7-be6f-aea30f8e419f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b8f5d6e-ceff-4743-92e9-7c5822007d3b" type="checkbox" ><label for="4b8f5d6e-ceff-4743-92e9-7c5822007d3b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca2bf411-25f2-423f-b655-7584de80e57b" type="checkbox" ><label for="ca2bf411-25f2-423f-b655-7584de80e57b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 {color: black;background-color: white;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 pre{padding: 0;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-toggleable {background-color: white;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-item {z-index: 1;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-parallel-item:only-child::after {width: 0;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d898e45f-437d-4c8d-8bb6-6b573e8bd104" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91bf0ad4-c559-4fbd-aaa0-dfd8967442d5" type="checkbox" ><label for="91bf0ad4-c559-4fbd-aaa0-dfd8967442d5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46c9bd87-09fb-48cb-a742-f60cb38557f4" type="checkbox" ><label for="46c9bd87-09fb-48cb-a742-f60cb38557f4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09009014-9175-4b13-a426-a2d88e2aac78" type="checkbox" ><label for="09009014-9175-4b13-a426-a2d88e2aac78" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8fcf22f-84eb-4752-af7b-8e143712f591" type="checkbox" ><label for="d8fcf22f-84eb-4752-af7b-8e143712f591" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 {color: black;background-color: white;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 pre{padding: 0;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-toggleable {background-color: white;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-item {z-index: 1;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-parallel-item:only-child::after {width: 0;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c7abf942-5e1b-4797-b3f4-7ab2d1480034" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82acdd8f-5854-4d02-ab77-31837be62399" type="checkbox" ><label for="82acdd8f-5854-4d02-ab77-31837be62399" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="822d067d-98d8-47d1-b64b-b29f2a247bf6" type="checkbox" ><label for="822d067d-98d8-47d1-b64b-b29f2a247bf6" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="accfe0b4-0078-4fb6-bba0-874f34fdb571" type="checkbox" ><label for="accfe0b4-0078-4fb6-bba0-874f34fdb571" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d {color: black;background-color: white;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d pre{padding: 0;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-toggleable {background-color: white;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-estimator:hover {background-color: #d4ebff;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-item {z-index: 1;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-parallel-item:only-child::after {width: 0;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d div.sk-text-repr-fallback {display: none;}</style><div id="sk-5d0e4f20-c970-4170-a1d1-2ee8b5eeb59d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e4d5776-5a77-4881-88dc-50e5a83bf532" type="checkbox" ><label for="4e4d5776-5a77-4881-88dc-50e5a83bf532" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="206772cd-7096-43e7-b8e4-fbd355f6083b" type="checkbox" ><label for="206772cd-7096-43e7-b8e4-fbd355f6083b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d5ebc44-b208-4a61-887c-8a247b8b33fb" type="checkbox" ><label for="1d5ebc44-b208-4a61-887c-8a247b8b33fb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="779dc3eb-dd26-4833-9acd-12a2b2d5020d" type="checkbox" ><label for="779dc3eb-dd26-4833-9acd-12a2b2d5020d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c594965f-6013-41e7-8b61-a487de7f880f" type="checkbox" ><label for="c594965f-6013-41e7-8b61-a487de7f880f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6962e39-6071-4740-aa88-e1a45647c3f1" type="checkbox" ><label for="b6962e39-6071-4740-aa88-e1a45647c3f1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38c65e96-288b-4100-b61f-a2e1b8ae5d66" type="checkbox" ><label for="38c65e96-288b-4100-b61f-a2e1b8ae5d66" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ccd2987-cd7b-4109-99f0-54a7a46e53c4" type="checkbox" ><label for="7ccd2987-cd7b-4109-99f0-54a7a46e53c4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa7c5a5e-373f-474f-a924-30b1f0d4fcab" type="checkbox" ><label for="fa7c5a5e-373f-474f-a924-30b1f0d4fcab" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-87378403-99c6-40bf-916f-a2d2bea62fdf {color: black;background-color: white;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf pre{padding: 0;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-toggleable {background-color: white;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-estimator:hover {background-color: #d4ebff;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-item {z-index: 1;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-parallel-item:only-child::after {width: 0;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-87378403-99c6-40bf-916f-a2d2bea62fdf div.sk-text-repr-fallback {display: none;}</style><div id="sk-87378403-99c6-40bf-916f-a2d2bea62fdf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ebdbc18-b98b-49a2-bc22-e3f0de84af74" type="checkbox" ><label for="2ebdbc18-b98b-49a2-bc22-e3f0de84af74" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13281f6b-5293-4c20-8296-198ee3b683ae" type="checkbox" ><label for="13281f6b-5293-4c20-8296-198ee3b683ae" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9e7aa9e-a98f-458b-8b69-a79128abb300" type="checkbox" ><label for="a9e7aa9e-a98f-458b-8b69-a79128abb300" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e37f18db-f4e0-4f9e-bbab-f45adad9dc0d" type="checkbox" ><label for="e37f18db-f4e0-4f9e-bbab-f45adad9dc0d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1e05c9a-632b-473a-a359-68bb41bb69bf" type="checkbox" ><label for="b1e05c9a-632b-473a-a359-68bb41bb69bf" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5defd72d-0e71-4da6-a518-499f29877c75" type="checkbox" ><label for="5defd72d-0e71-4da6-a518-499f29877c75" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b363320-930d-4bb3-acdc-420f492bd021" type="checkbox" ><label for="7b363320-930d-4bb3-acdc-420f492bd021" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf945642-b9ed-406c-9ae6-340ceb95c1a0" type="checkbox" ><label for="bf945642-b9ed-406c-9ae6-340ceb95c1a0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d783a40a-b502-4fbe-9084-1bf6fe07d3c9" type="checkbox" ><label for="d783a40a-b502-4fbe-9084-1bf6fe07d3c9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
