
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 {color: black;background-color: white;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 pre{padding: 0;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-toggleable {background-color: white;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-item {z-index: 1;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-parallel-item:only-child::after {width: 0;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0bb87e8a-f1a7-4830-bf26-c160cb044245 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0bb87e8a-f1a7-4830-bf26-c160cb044245" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afdbbae9-1356-4228-aeca-b7ef270315ff" type="checkbox" ><label for="afdbbae9-1356-4228-aeca-b7ef270315ff" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea597577-9bf2-48ec-b3f0-3c41228eda76" type="checkbox" ><label for="ea597577-9bf2-48ec-b3f0-3c41228eda76" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af4ca8a1-a434-49c9-a291-bd81942429cf" type="checkbox" ><label for="af4ca8a1-a434-49c9-a291-bd81942429cf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a {color: black;background-color: white;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a pre{padding: 0;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-toggleable {background-color: white;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-estimator:hover {background-color: #d4ebff;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-item {z-index: 1;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-parallel-item:only-child::after {width: 0;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a div.sk-text-repr-fallback {display: none;}</style><div id="sk-5b9c8c5a-9a11-4f9d-8724-b02989e6a03a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="119aedc3-7317-46ae-adee-2ea74f02e664" type="checkbox" ><label for="119aedc3-7317-46ae-adee-2ea74f02e664" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b98f1ff-6434-4482-961a-f4342f7533f4" type="checkbox" ><label for="4b98f1ff-6434-4482-961a-f4342f7533f4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cd5b5c5-a919-4d2d-9744-1a7f582de299" type="checkbox" ><label for="8cd5b5c5-a919-4d2d-9744-1a7f582de299" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da6bad72-7219-4786-8ee7-f1100376a883" type="checkbox" ><label for="da6bad72-7219-4786-8ee7-f1100376a883" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 {color: black;background-color: white;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 pre{padding: 0;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-toggleable {background-color: white;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-item {z-index: 1;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-parallel-item:only-child::after {width: 0;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f45608ad-0dc4-47b1-91d3-4009bc313a54 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f45608ad-0dc4-47b1-91d3-4009bc313a54" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5a85420-d3cf-4437-954e-8d5f86d313da" type="checkbox" ><label for="c5a85420-d3cf-4437-954e-8d5f86d313da" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b7b2154-8e29-42a4-9f0f-981c5620ed95" type="checkbox" ><label for="9b7b2154-8e29-42a4-9f0f-981c5620ed95" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8254dff-4290-4e08-8ff5-26e34bfe3203" type="checkbox" ><label for="e8254dff-4290-4e08-8ff5-26e34bfe3203" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d {color: black;background-color: white;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d pre{padding: 0;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-toggleable {background-color: white;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-estimator:hover {background-color: #d4ebff;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-item {z-index: 1;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-parallel-item:only-child::after {width: 0;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d div.sk-text-repr-fallback {display: none;}</style><div id="sk-e1601eaf-5697-4a14-a944-3bea23b9cc2d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="becd417f-9a50-4318-8dd6-6e38fc6d2c20" type="checkbox" ><label for="becd417f-9a50-4318-8dd6-6e38fc6d2c20" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="756712ba-e9a2-4a22-a3fe-ece9bccda274" type="checkbox" ><label for="756712ba-e9a2-4a22-a3fe-ece9bccda274" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05957bdd-5910-4240-8617-e30c5f4b105f" type="checkbox" ><label for="05957bdd-5910-4240-8617-e30c5f4b105f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d9b78bc-4d84-418e-a0d4-af797fdd18dc" type="checkbox" ><label for="9d9b78bc-4d84-418e-a0d4-af797fdd18dc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c46dfc2-0a12-4963-9f2f-6aba930ee4f3" type="checkbox" ><label for="8c46dfc2-0a12-4963-9f2f-6aba930ee4f3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1acead29-6557-442c-9ff9-537c75c64fc9" type="checkbox" ><label for="1acead29-6557-442c-9ff9-537c75c64fc9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bc6b87b-eda3-4f50-a3cd-b6ec3e7a0e9c" type="checkbox" ><label for="5bc6b87b-eda3-4f50-a3cd-b6ec3e7a0e9c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71258ea3-782e-4473-9b43-fac73c541d41" type="checkbox" ><label for="71258ea3-782e-4473-9b43-fac73c541d41" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80683e76-c88b-4eb9-a110-74c294988ef4" type="checkbox" ><label for="80683e76-c88b-4eb9-a110-74c294988ef4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 {color: black;background-color: white;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 pre{padding: 0;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-toggleable {background-color: white;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-item {z-index: 1;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-parallel-item:only-child::after {width: 0;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a2f126f1-91f1-45ed-8d31-2d6ac56259f3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b78bd63-3a4a-4634-a9b9-10d11098bb95" type="checkbox" ><label for="5b78bd63-3a4a-4634-a9b9-10d11098bb95" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f3b5f0e-9b91-4323-8693-0b28051af9b2" type="checkbox" ><label for="8f3b5f0e-9b91-4323-8693-0b28051af9b2" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61891708-2c11-433d-8e46-cf9ee7d92259" type="checkbox" ><label for="61891708-2c11-433d-8e46-cf9ee7d92259" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="151e23a6-9564-46cf-8003-9cbf25b75262" type="checkbox" ><label for="151e23a6-9564-46cf-8003-9cbf25b75262" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37e5b418-4cb1-4832-a155-3b23b02dc20e" type="checkbox" ><label for="37e5b418-4cb1-4832-a155-3b23b02dc20e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bfa8f4a-e55c-4d1b-8513-a0067be8164e" type="checkbox" ><label for="4bfa8f4a-e55c-4d1b-8513-a0067be8164e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5902910-65f1-481f-9e94-0e917d583247" type="checkbox" ><label for="d5902910-65f1-481f-9e94-0e917d583247" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9c1defb-539b-4200-9324-5f179cc29fe3" type="checkbox" ><label for="f9c1defb-539b-4200-9324-5f179cc29fe3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e7ad25b-fdcd-4010-8427-7bccbae20360" type="checkbox" ><label for="4e7ad25b-fdcd-4010-8427-7bccbae20360" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
