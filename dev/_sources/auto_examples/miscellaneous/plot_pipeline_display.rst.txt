
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-691722d8-452b-4def-aebb-92ca6d462256 {color: black;background-color: white;}#sk-691722d8-452b-4def-aebb-92ca6d462256 pre{padding: 0;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-toggleable {background-color: white;}#sk-691722d8-452b-4def-aebb-92ca6d462256 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-691722d8-452b-4def-aebb-92ca6d462256 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-691722d8-452b-4def-aebb-92ca6d462256 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-691722d8-452b-4def-aebb-92ca6d462256 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-691722d8-452b-4def-aebb-92ca6d462256 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-691722d8-452b-4def-aebb-92ca6d462256 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-estimator:hover {background-color: #d4ebff;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-item {z-index: 1;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-parallel-item:only-child::after {width: 0;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-691722d8-452b-4def-aebb-92ca6d462256 div.sk-text-repr-fallback {display: none;}</style><div id="sk-691722d8-452b-4def-aebb-92ca6d462256" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcf63f6b-dc5b-4ada-98a4-2d58df6053d4" type="checkbox" ><label for="bcf63f6b-dc5b-4ada-98a4-2d58df6053d4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b37d008-8cf4-493b-815d-a5da6c293fc5" type="checkbox" ><label for="8b37d008-8cf4-493b-815d-a5da6c293fc5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94e427db-0608-41b9-83cc-bc8763ab1e90" type="checkbox" ><label for="94e427db-0608-41b9-83cc-bc8763ab1e90" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 {color: black;background-color: white;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 pre{padding: 0;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-toggleable {background-color: white;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-item {z-index: 1;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-parallel-item:only-child::after {width: 0;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3ad57abd-fe0c-4c81-8e05-ef720f6814d4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a70d5fc-e3d0-47ff-8df9-811ccf162d09" type="checkbox" ><label for="6a70d5fc-e3d0-47ff-8df9-811ccf162d09" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cbb12ea-3c2d-4605-b20a-14e2750dbbb1" type="checkbox" ><label for="8cbb12ea-3c2d-4605-b20a-14e2750dbbb1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5b3fbdf-3bd8-4e7e-b317-f5940a0cf929" type="checkbox" ><label for="d5b3fbdf-3bd8-4e7e-b317-f5940a0cf929" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc3ec818-f9cf-4a07-9f06-74d695f32dae" type="checkbox" ><label for="dc3ec818-f9cf-4a07-9f06-74d695f32dae" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 {color: black;background-color: white;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 pre{padding: 0;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-toggleable {background-color: white;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-item {z-index: 1;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-parallel-item:only-child::after {width: 0;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fdb1cb38-9756-4b2c-a95a-cbd8f0797b19" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f27ee121-2403-4c41-b01d-9824ecb8d8a5" type="checkbox" ><label for="f27ee121-2403-4c41-b01d-9824ecb8d8a5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0d1e18d-17b3-4ce2-a3e3-8a9bb3b9294f" type="checkbox" ><label for="b0d1e18d-17b3-4ce2-a3e3-8a9bb3b9294f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e437856-6968-48a3-a2ba-6056a6acff29" type="checkbox" ><label for="4e437856-6968-48a3-a2ba-6056a6acff29" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 {color: black;background-color: white;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 pre{padding: 0;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-toggleable {background-color: white;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-item {z-index: 1;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-parallel-item:only-child::after {width: 0;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f5c86021-a092-4935-aff8-9f579f4d73d7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f5c86021-a092-4935-aff8-9f579f4d73d7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5375437-6365-4090-b4c1-3448554b0a28" type="checkbox" ><label for="c5375437-6365-4090-b4c1-3448554b0a28" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="113118e6-7cda-4e2b-be6a-800c005c654e" type="checkbox" ><label for="113118e6-7cda-4e2b-be6a-800c005c654e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01d860cd-a052-4b36-a43a-1ee9429435ae" type="checkbox" ><label for="01d860cd-a052-4b36-a43a-1ee9429435ae" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c54f6aed-a21c-47bf-919b-5cbb6b211f86" type="checkbox" ><label for="c54f6aed-a21c-47bf-919b-5cbb6b211f86" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81a06db1-fa7a-4e30-9b62-75dfa4c10f58" type="checkbox" ><label for="81a06db1-fa7a-4e30-9b62-75dfa4c10f58" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60f3e65b-8c94-479d-a8e7-304c73323e55" type="checkbox" ><label for="60f3e65b-8c94-479d-a8e7-304c73323e55" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b5a6f27-fd92-4117-b737-e5d6a0d9e4c1" type="checkbox" ><label for="5b5a6f27-fd92-4117-b737-e5d6a0d9e4c1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bbfe1bd-3bac-4ef4-bd1f-90bc7387bba5" type="checkbox" ><label for="9bbfe1bd-3bac-4ef4-bd1f-90bc7387bba5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd880a5b-38e0-4bb7-8c2a-bf46b8509b8d" type="checkbox" ><label for="fd880a5b-38e0-4bb7-8c2a-bf46b8509b8d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f {color: black;background-color: white;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f pre{padding: 0;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-toggleable {background-color: white;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-estimator:hover {background-color: #d4ebff;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-item {z-index: 1;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-parallel-item:only-child::after {width: 0;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-709450ca-b7b4-45c2-a39d-1d81b71b116f div.sk-text-repr-fallback {display: none;}</style><div id="sk-709450ca-b7b4-45c2-a39d-1d81b71b116f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73946310-36ec-4598-aa1b-765954ca5028" type="checkbox" ><label for="73946310-36ec-4598-aa1b-765954ca5028" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa04618b-112e-439e-b7e6-d2ddef769ef7" type="checkbox" ><label for="aa04618b-112e-439e-b7e6-d2ddef769ef7" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3bd737b-c504-412c-91f9-96cc2836d02e" type="checkbox" ><label for="b3bd737b-c504-412c-91f9-96cc2836d02e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd51530a-1e55-4ec7-826c-4d27989d0ffc" type="checkbox" ><label for="fd51530a-1e55-4ec7-826c-4d27989d0ffc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6984e9e-ace9-458a-b7ff-f8692cf6602f" type="checkbox" ><label for="b6984e9e-ace9-458a-b7ff-f8692cf6602f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="996fafcf-a664-496b-8f3c-9721db1a3500" type="checkbox" ><label for="996fafcf-a664-496b-8f3c-9721db1a3500" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e29a1ea6-9f49-4731-980c-334694169bd4" type="checkbox" ><label for="e29a1ea6-9f49-4731-980c-334694169bd4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c600ece-af88-4391-b908-620d7daf8095" type="checkbox" ><label for="4c600ece-af88-4391-b908-620d7daf8095" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab5ce69c-f3ca-4669-af25-15ae785f5a7a" type="checkbox" ><label for="ab5ce69c-f3ca-4669-af25-15ae785f5a7a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
