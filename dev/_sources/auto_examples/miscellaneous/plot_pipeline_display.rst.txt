
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 {color: black;background-color: white;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 pre{padding: 0;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-toggleable {background-color: white;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-item {z-index: 1;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-parallel-item:only-child::after {width: 0;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d24db9b4-0813-45eb-a23f-da6ca4b08197 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d24db9b4-0813-45eb-a23f-da6ca4b08197" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f6108ff-aeca-4bbe-a740-10ad9bed745e" type="checkbox" ><label for="0f6108ff-aeca-4bbe-a740-10ad9bed745e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4d6af86-0b3b-4807-aeef-75b4064cfe73" type="checkbox" ><label for="b4d6af86-0b3b-4807-aeef-75b4064cfe73" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ec3d153-388c-4dbf-817b-ff9c81febb39" type="checkbox" ><label for="0ec3d153-388c-4dbf-817b-ff9c81febb39" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a {color: black;background-color: white;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a pre{padding: 0;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-toggleable {background-color: white;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-estimator:hover {background-color: #d4ebff;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-item {z-index: 1;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-parallel-item:only-child::after {width: 0;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a div.sk-text-repr-fallback {display: none;}</style><div id="sk-036c04c7-f76e-4a3e-9c20-fcfd8a2c893a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37000047-b143-482c-9808-002a2849724a" type="checkbox" ><label for="37000047-b143-482c-9808-002a2849724a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c0092ba-a863-409c-9101-472eea8c96bd" type="checkbox" ><label for="6c0092ba-a863-409c-9101-472eea8c96bd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66b3ee4c-3069-449c-aa6d-516950c031c3" type="checkbox" ><label for="66b3ee4c-3069-449c-aa6d-516950c031c3" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="deb00ada-429d-4ebe-bc66-8e5b6f87a731" type="checkbox" ><label for="deb00ada-429d-4ebe-bc66-8e5b6f87a731" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4d304015-547b-42e3-b846-5841943c375c {color: black;background-color: white;}#sk-4d304015-547b-42e3-b846-5841943c375c pre{padding: 0;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-toggleable {background-color: white;}#sk-4d304015-547b-42e3-b846-5841943c375c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4d304015-547b-42e3-b846-5841943c375c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4d304015-547b-42e3-b846-5841943c375c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4d304015-547b-42e3-b846-5841943c375c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4d304015-547b-42e3-b846-5841943c375c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4d304015-547b-42e3-b846-5841943c375c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-estimator:hover {background-color: #d4ebff;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-item {z-index: 1;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-parallel-item:only-child::after {width: 0;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4d304015-547b-42e3-b846-5841943c375c div.sk-text-repr-fallback {display: none;}</style><div id="sk-4d304015-547b-42e3-b846-5841943c375c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93f9cb1f-b20b-4d52-9042-c3d3da03ae14" type="checkbox" ><label for="93f9cb1f-b20b-4d52-9042-c3d3da03ae14" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3651a84-67ff-4dc7-b2cd-2ec107d5ed74" type="checkbox" ><label for="d3651a84-67ff-4dc7-b2cd-2ec107d5ed74" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a02af98-fdbd-4cca-b3a8-a5ccc49220f8" type="checkbox" ><label for="7a02af98-fdbd-4cca-b3a8-a5ccc49220f8" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-90f6b998-190a-40de-9387-2a41d4eba8bb {color: black;background-color: white;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb pre{padding: 0;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-toggleable {background-color: white;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-estimator:hover {background-color: #d4ebff;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-item {z-index: 1;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-parallel-item:only-child::after {width: 0;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-90f6b998-190a-40de-9387-2a41d4eba8bb div.sk-text-repr-fallback {display: none;}</style><div id="sk-90f6b998-190a-40de-9387-2a41d4eba8bb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09a9c55d-0bc5-4ff5-b6b4-4d7da6fbeb11" type="checkbox" ><label for="09a9c55d-0bc5-4ff5-b6b4-4d7da6fbeb11" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ebf2a26-2b72-4845-87f7-d6ced7163d33" type="checkbox" ><label for="5ebf2a26-2b72-4845-87f7-d6ced7163d33" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8321a695-dc5a-4c41-abda-8471b473f79c" type="checkbox" ><label for="8321a695-dc5a-4c41-abda-8471b473f79c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83a98522-d0fb-4aba-9e8f-df9fcd7230a4" type="checkbox" ><label for="83a98522-d0fb-4aba-9e8f-df9fcd7230a4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e896ff01-a571-4371-bf74-d8a601b85a8c" type="checkbox" ><label for="e896ff01-a571-4371-bf74-d8a601b85a8c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3cba438-fe19-4a38-bffb-08b1ebb854af" type="checkbox" ><label for="a3cba438-fe19-4a38-bffb-08b1ebb854af" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc4b2e46-d4f3-480c-a02c-45e831a8044d" type="checkbox" ><label for="bc4b2e46-d4f3-480c-a02c-45e831a8044d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="edb5940f-7ebf-4912-af7a-ee236816fac8" type="checkbox" ><label for="edb5940f-7ebf-4912-af7a-ee236816fac8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2f775e8-4618-4156-955f-ed53807f76e8" type="checkbox" ><label for="f2f775e8-4618-4156-955f-ed53807f76e8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 {color: black;background-color: white;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 pre{padding: 0;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-toggleable {background-color: white;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-item {z-index: 1;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-parallel-item:only-child::after {width: 0;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-db82ef6f-5a25-4360-b008-957e0fb38ba8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-db82ef6f-5a25-4360-b008-957e0fb38ba8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b693446-b3ad-4def-9b7e-7dc552d34b71" type="checkbox" ><label for="9b693446-b3ad-4def-9b7e-7dc552d34b71" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71b88ee2-adbb-48f9-97cb-3b61acb45768" type="checkbox" ><label for="71b88ee2-adbb-48f9-97cb-3b61acb45768" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11278981-278d-48cd-a263-2d0c82a27c34" type="checkbox" ><label for="11278981-278d-48cd-a263-2d0c82a27c34" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ec88602-803c-45ca-a176-918b1700951f" type="checkbox" ><label for="9ec88602-803c-45ca-a176-918b1700951f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89058b13-99ff-417c-a9b4-4f286b591e28" type="checkbox" ><label for="89058b13-99ff-417c-a9b4-4f286b591e28" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b839b4e-44be-42c6-9211-68ba81765e38" type="checkbox" ><label for="0b839b4e-44be-42c6-9211-68ba81765e38" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c86c6a2-9398-40d8-b613-ccdae9882374" type="checkbox" ><label for="2c86c6a2-9398-40d8-b613-ccdae9882374" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2e51e67-027a-4046-80ef-60f99f8e74a3" type="checkbox" ><label for="d2e51e67-027a-4046-80ef-60f99f8e74a3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72120ab8-0484-4138-9c90-e834f6f85e6c" type="checkbox" ><label for="72120ab8-0484-4138-9c90-e834f6f85e6c" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.079 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
