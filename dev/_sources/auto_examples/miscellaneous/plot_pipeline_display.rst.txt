
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 {color: black;background-color: white;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 pre{padding: 0;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-toggleable {background-color: white;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-item {z-index: 1;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-parallel-item:only-child::after {width: 0;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b4e04cac-7968-41b5-9a5a-3250e4779486 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b4e04cac-7968-41b5-9a5a-3250e4779486" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33e440f8-c5bf-401a-9269-e179ad25a23c" type="checkbox" ><label for="33e440f8-c5bf-401a-9269-e179ad25a23c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b6915f8-d4b5-4c04-b433-19c4862f9d3a" type="checkbox" ><label for="5b6915f8-d4b5-4c04-b433-19c4862f9d3a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9f5a50f-5154-4b60-8f61-953fdd0331f3" type="checkbox" ><label for="e9f5a50f-5154-4b60-8f61-953fdd0331f3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e {color: black;background-color: white;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e pre{padding: 0;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-toggleable {background-color: white;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-estimator:hover {background-color: #d4ebff;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-item {z-index: 1;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-parallel-item:only-child::after {width: 0;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e div.sk-text-repr-fallback {display: none;}</style><div id="sk-2c0cd7b3-7f60-42d8-bc61-4c36d1dd998e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbc193e3-f6d2-4da6-beb6-d5f6a13077d9" type="checkbox" ><label for="dbc193e3-f6d2-4da6-beb6-d5f6a13077d9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6360b06-6da1-4321-a3a3-e300b7261daa" type="checkbox" ><label for="d6360b06-6da1-4321-a3a3-e300b7261daa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37b57953-78df-4c26-81e0-b33567c87fc8" type="checkbox" ><label for="37b57953-78df-4c26-81e0-b33567c87fc8" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d725d29-8475-4182-bf69-8ee39c136ee8" type="checkbox" ><label for="9d725d29-8475-4182-bf69-8ee39c136ee8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 {color: black;background-color: white;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 pre{padding: 0;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-toggleable {background-color: white;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-item {z-index: 1;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-parallel-item:only-child::after {width: 0;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0e5ad959-8149-47cc-9b93-818dca8d0615 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0e5ad959-8149-47cc-9b93-818dca8d0615" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11894966-4a00-43ab-8133-f4d4a08b70d2" type="checkbox" ><label for="11894966-4a00-43ab-8133-f4d4a08b70d2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a562bb20-152a-46be-98bd-0f5c03cae54d" type="checkbox" ><label for="a562bb20-152a-46be-98bd-0f5c03cae54d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d13d03e2-2287-4b37-81bb-c1a78d558ba9" type="checkbox" ><label for="d13d03e2-2287-4b37-81bb-c1a78d558ba9" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 {color: black;background-color: white;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 pre{padding: 0;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-toggleable {background-color: white;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-item {z-index: 1;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-parallel-item:only-child::after {width: 0;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5061f87d-f77f-418c-b941-c4ecaab21aa1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5061f87d-f77f-418c-b941-c4ecaab21aa1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5ab74db-95f6-4fba-8498-dc1a652cfb97" type="checkbox" ><label for="c5ab74db-95f6-4fba-8498-dc1a652cfb97" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1f6462b-143b-42b8-b8d6-1d301c93e259" type="checkbox" ><label for="d1f6462b-143b-42b8-b8d6-1d301c93e259" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fedebf2-c9e5-40e9-b268-2f69dc7c1078" type="checkbox" ><label for="6fedebf2-c9e5-40e9-b268-2f69dc7c1078" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfc5f167-534f-4c59-b23e-6891d5035ece" type="checkbox" ><label for="bfc5f167-534f-4c59-b23e-6891d5035ece" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2e4ba38-07d6-4383-821a-458c8e65c43f" type="checkbox" ><label for="a2e4ba38-07d6-4383-821a-458c8e65c43f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07f8a0b9-c859-43d2-b526-b3c2a2633bf5" type="checkbox" ><label for="07f8a0b9-c859-43d2-b526-b3c2a2633bf5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1759a21-41bb-4746-a578-21e234abcdc0" type="checkbox" ><label for="f1759a21-41bb-4746-a578-21e234abcdc0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d994f8fd-8718-4024-a89f-07a7de054b0a" type="checkbox" ><label for="d994f8fd-8718-4024-a89f-07a7de054b0a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aae7e033-ba5e-4fea-a4db-3ea95616caed" type="checkbox" ><label for="aae7e033-ba5e-4fea-a4db-3ea95616caed" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa {color: black;background-color: white;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa pre{padding: 0;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-toggleable {background-color: white;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-estimator:hover {background-color: #d4ebff;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-item {z-index: 1;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-parallel-item:only-child::after {width: 0;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa div.sk-text-repr-fallback {display: none;}</style><div id="sk-88fe4ffc-534e-4190-ba5b-ec6e3dfb1ffa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e5344b5-b06f-47d6-878c-89476e4e59f8" type="checkbox" ><label for="5e5344b5-b06f-47d6-878c-89476e4e59f8" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3eb2f63f-01aa-4067-aa97-4f75ac1d38aa" type="checkbox" ><label for="3eb2f63f-01aa-4067-aa97-4f75ac1d38aa" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="603d40af-99a3-4b11-a1ba-002a0b0f7a2e" type="checkbox" ><label for="603d40af-99a3-4b11-a1ba-002a0b0f7a2e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eab4fedb-9c65-44cf-ae5f-0e7c69a3dd1b" type="checkbox" ><label for="eab4fedb-9c65-44cf-ae5f-0e7c69a3dd1b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="052860e3-83dd-4356-9da8-ead61dfbe174" type="checkbox" ><label for="052860e3-83dd-4356-9da8-ead61dfbe174" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f24a351-636d-4ccf-a0ad-450056635573" type="checkbox" ><label for="3f24a351-636d-4ccf-a0ad-450056635573" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fba8d69c-dc5a-4890-8467-8205f9a73e73" type="checkbox" ><label for="fba8d69c-dc5a-4890-8467-8205f9a73e73" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a62f075-e414-4d82-ba37-59b9d7c005a4" type="checkbox" ><label for="3a62f075-e414-4d82-ba37-59b9d7c005a4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8f0d167-7e66-4e1b-a594-6534d3863f41" type="checkbox" ><label for="f8f0d167-7e66-4e1b-a594-6534d3863f41" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59c1482c-81f1-4640-bfbf-35ef2fa90b57" type="checkbox" ><label for="59c1482c-81f1-4640-bfbf-35ef2fa90b57" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
