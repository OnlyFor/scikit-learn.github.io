
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff {color: black;background-color: white;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff pre{padding: 0;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-toggleable {background-color: white;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-item {z-index: 1;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-parallel-item:only-child::after {width: 0;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff div.sk-text-repr-fallback {display: none;}</style><div id="sk-e3ebb20e-ef72-4bee-895a-5a46bbe903ff" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3dd0d170-91ac-46f9-bfa4-d4b4937c11cb" type="checkbox" ><label for="3dd0d170-91ac-46f9-bfa4-d4b4937c11cb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="698a9afa-bd58-4024-8d7a-3c62b7ff1c98" type="checkbox" ><label for="698a9afa-bd58-4024-8d7a-3c62b7ff1c98" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de6b8515-f34f-4fa5-93f7-e5835f6dd469" type="checkbox" ><label for="de6b8515-f34f-4fa5-93f7-e5835f6dd469" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2859465a-2579-4d4a-a156-d33f387756c3 {color: black;background-color: white;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 pre{padding: 0;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-toggleable {background-color: white;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-item {z-index: 1;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-parallel-item:only-child::after {width: 0;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2859465a-2579-4d4a-a156-d33f387756c3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2859465a-2579-4d4a-a156-d33f387756c3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e6f6167-023b-42c5-9de2-6c751fc73115" type="checkbox" ><label for="3e6f6167-023b-42c5-9de2-6c751fc73115" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9acdeefd-b282-4e51-94ae-74f3f6925ab9" type="checkbox" ><label for="9acdeefd-b282-4e51-94ae-74f3f6925ab9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="424d76d7-86f2-4baf-87c6-492c3a9e0ead" type="checkbox" ><label for="424d76d7-86f2-4baf-87c6-492c3a9e0ead" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26d9edfd-8d05-4c10-a7fb-55d4464cd29f" type="checkbox" ><label for="26d9edfd-8d05-4c10-a7fb-55d4464cd29f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac {color: black;background-color: white;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac pre{padding: 0;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-toggleable {background-color: white;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-estimator:hover {background-color: #d4ebff;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-item {z-index: 1;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-parallel-item:only-child::after {width: 0;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac div.sk-text-repr-fallback {display: none;}</style><div id="sk-f8b01b4c-9c4a-48db-9317-ca42c211f2ac" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0970944-00e2-4e76-a30a-544d40b29890" type="checkbox" ><label for="b0970944-00e2-4e76-a30a-544d40b29890" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64251977-4245-4905-a309-31d8753ac0aa" type="checkbox" ><label for="64251977-4245-4905-a309-31d8753ac0aa" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="579c6802-cb5a-484e-95ac-0e72c76603ac" type="checkbox" ><label for="579c6802-cb5a-484e-95ac-0e72c76603ac" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1caaceec-563a-416e-a102-8059f224d30b {color: black;background-color: white;}#sk-1caaceec-563a-416e-a102-8059f224d30b pre{padding: 0;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-toggleable {background-color: white;}#sk-1caaceec-563a-416e-a102-8059f224d30b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1caaceec-563a-416e-a102-8059f224d30b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1caaceec-563a-416e-a102-8059f224d30b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1caaceec-563a-416e-a102-8059f224d30b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1caaceec-563a-416e-a102-8059f224d30b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1caaceec-563a-416e-a102-8059f224d30b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-estimator:hover {background-color: #d4ebff;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-item {z-index: 1;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-parallel-item:only-child::after {width: 0;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1caaceec-563a-416e-a102-8059f224d30b div.sk-text-repr-fallback {display: none;}</style><div id="sk-1caaceec-563a-416e-a102-8059f224d30b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a86a69a7-a67a-46b0-8dc3-602916471305" type="checkbox" ><label for="a86a69a7-a67a-46b0-8dc3-602916471305" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a96b27a7-c52f-4fcc-8e4a-d7f4652765c8" type="checkbox" ><label for="a96b27a7-c52f-4fcc-8e4a-d7f4652765c8" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b13887dc-dc46-4f69-b9f0-82a750171542" type="checkbox" ><label for="b13887dc-dc46-4f69-b9f0-82a750171542" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="243928c8-e4ff-43b3-8fc0-8cbfa26a3dee" type="checkbox" ><label for="243928c8-e4ff-43b3-8fc0-8cbfa26a3dee" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e8eb8e8-2e4e-4bc7-bcc8-f890511a5cf5" type="checkbox" ><label for="3e8eb8e8-2e4e-4bc7-bcc8-f890511a5cf5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05112b7d-b85a-4577-ad60-49bc9553769d" type="checkbox" ><label for="05112b7d-b85a-4577-ad60-49bc9553769d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb9187c2-a52e-4b09-8fed-7211525ef421" type="checkbox" ><label for="cb9187c2-a52e-4b09-8fed-7211525ef421" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e14d8466-b265-4d61-aac3-889d888c084a" type="checkbox" ><label for="e14d8466-b265-4d61-aac3-889d888c084a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e2a970d-6957-43fd-93f0-f3b6e86abd90" type="checkbox" ><label for="7e2a970d-6957-43fd-93f0-f3b6e86abd90" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 {color: black;background-color: white;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 pre{padding: 0;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-toggleable {background-color: white;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-item {z-index: 1;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-parallel-item:only-child::after {width: 0;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-622cfc06-8bab-46f8-b4cc-dd1efeeddba3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb3fae09-8be1-4785-ac4d-94b46d4aaa33" type="checkbox" ><label for="cb3fae09-8be1-4785-ac4d-94b46d4aaa33" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42bfa891-5b46-4183-9739-47bdc5b7661e" type="checkbox" ><label for="42bfa891-5b46-4183-9739-47bdc5b7661e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25f4bea8-b8b8-47ce-b06a-3649bce0728a" type="checkbox" ><label for="25f4bea8-b8b8-47ce-b06a-3649bce0728a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58b949da-d64b-458d-96da-a54e7bb91abd" type="checkbox" ><label for="58b949da-d64b-458d-96da-a54e7bb91abd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18ab6039-8382-42d5-9c5d-8c9d8242bb2f" type="checkbox" ><label for="18ab6039-8382-42d5-9c5d-8c9d8242bb2f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d02d0d56-f30c-4e5c-b4ff-3a0e75b29043" type="checkbox" ><label for="d02d0d56-f30c-4e5c-b4ff-3a0e75b29043" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6330d0c-1046-4243-ae16-a2f13a22e839" type="checkbox" ><label for="e6330d0c-1046-4243-ae16-a2f13a22e839" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af0367ad-4ba7-4abe-b2ff-fdae402ed034" type="checkbox" ><label for="af0367ad-4ba7-4abe-b2ff-fdae402ed034" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ea0f624-1e36-45e6-896c-ff3d3c399d13" type="checkbox" ><label for="4ea0f624-1e36-45e6-896c-ff3d3c399d13" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.131 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
