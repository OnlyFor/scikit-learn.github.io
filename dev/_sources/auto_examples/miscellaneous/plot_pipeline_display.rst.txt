
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-17ec24d4-3af6-42ee-8187-017c04d7760b {color: black;background-color: white;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b pre{padding: 0;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-toggleable {background-color: white;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-estimator:hover {background-color: #d4ebff;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-item {z-index: 1;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-parallel-item:only-child::after {width: 0;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-17ec24d4-3af6-42ee-8187-017c04d7760b div.sk-text-repr-fallback {display: none;}</style><div id="sk-17ec24d4-3af6-42ee-8187-017c04d7760b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e8152dd-fec5-4bfb-b3f5-976c8b579c86" type="checkbox" ><label for="8e8152dd-fec5-4bfb-b3f5-976c8b579c86" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4173b5ec-3be2-4bfc-bb5f-517d6eb4edd1" type="checkbox" ><label for="4173b5ec-3be2-4bfc-bb5f-517d6eb4edd1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdab4288-09e4-42d7-8f4b-86f3576ece50" type="checkbox" ><label for="fdab4288-09e4-42d7-8f4b-86f3576ece50" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d {color: black;background-color: white;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d pre{padding: 0;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-toggleable {background-color: white;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-estimator:hover {background-color: #d4ebff;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-item {z-index: 1;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-parallel-item:only-child::after {width: 0;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d div.sk-text-repr-fallback {display: none;}</style><div id="sk-21f30ef6-4c33-4d19-b843-8cad5b3b1a0d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7de82a53-c54b-4907-ac5a-ea33bbebd538" type="checkbox" ><label for="7de82a53-c54b-4907-ac5a-ea33bbebd538" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27387b30-e574-4519-9d75-dc7919c9a61d" type="checkbox" ><label for="27387b30-e574-4519-9d75-dc7919c9a61d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d30ec849-c43b-4cb0-85c8-8d6391821dc8" type="checkbox" ><label for="d30ec849-c43b-4cb0-85c8-8d6391821dc8" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f2b28f5-fdeb-4cde-9765-2ce1e99e9bf9" type="checkbox" ><label for="2f2b28f5-fdeb-4cde-9765-2ce1e99e9bf9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed {color: black;background-color: white;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed pre{padding: 0;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-toggleable {background-color: white;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-estimator:hover {background-color: #d4ebff;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-item {z-index: 1;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-parallel-item:only-child::after {width: 0;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c6c0db85-7263-481a-9324-d9fccaecd2ed div.sk-text-repr-fallback {display: none;}</style><div id="sk-c6c0db85-7263-481a-9324-d9fccaecd2ed" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e6504c8-8894-4356-9acd-d1ed381feb5e" type="checkbox" ><label for="3e6504c8-8894-4356-9acd-d1ed381feb5e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f59309a7-7eea-4cf1-952a-1fbfb7c501e7" type="checkbox" ><label for="f59309a7-7eea-4cf1-952a-1fbfb7c501e7" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6104ce7-eb61-4be6-b025-9d29063a68a9" type="checkbox" ><label for="f6104ce7-eb61-4be6-b025-9d29063a68a9" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8bb0db73-bb34-485b-b497-30e223929dc5 {color: black;background-color: white;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 pre{padding: 0;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-toggleable {background-color: white;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-item {z-index: 1;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-parallel-item:only-child::after {width: 0;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8bb0db73-bb34-485b-b497-30e223929dc5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8bb0db73-bb34-485b-b497-30e223929dc5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49194b8c-e59d-457b-b420-80108a3bdb72" type="checkbox" ><label for="49194b8c-e59d-457b-b420-80108a3bdb72" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04217770-037e-42ca-8316-e7c4891fd9d1" type="checkbox" ><label for="04217770-037e-42ca-8316-e7c4891fd9d1" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8c5d51e-44fe-41cd-b421-38ffeadbbfa3" type="checkbox" ><label for="f8c5d51e-44fe-41cd-b421-38ffeadbbfa3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7b3e9de-0e75-4931-814b-a8ef2b0d4f57" type="checkbox" ><label for="e7b3e9de-0e75-4931-814b-a8ef2b0d4f57" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c69d8f48-80ed-43f8-9354-4c8a79b612af" type="checkbox" ><label for="c69d8f48-80ed-43f8-9354-4c8a79b612af" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfa7df5f-9b08-4989-912d-8910cb6824fc" type="checkbox" ><label for="dfa7df5f-9b08-4989-912d-8910cb6824fc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34acfc71-27ce-4f3a-a994-a3608986a93f" type="checkbox" ><label for="34acfc71-27ce-4f3a-a994-a3608986a93f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="924a15cd-b961-4ccc-8944-99c34eaf3a67" type="checkbox" ><label for="924a15cd-b961-4ccc-8944-99c34eaf3a67" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5353f80-4878-4b6b-b126-ebb54fb13ba2" type="checkbox" ><label for="d5353f80-4878-4b6b-b126-ebb54fb13ba2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 {color: black;background-color: white;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 pre{padding: 0;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-toggleable {background-color: white;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-estimator:hover {background-color: #d4ebff;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-item {z-index: 1;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-parallel-item:only-child::after {width: 0;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-655653d5-ec2f-48fd-b18c-4a2e41587999 div.sk-text-repr-fallback {display: none;}</style><div id="sk-655653d5-ec2f-48fd-b18c-4a2e41587999" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc6ec198-9174-4bb4-a7ee-ebeacf58796a" type="checkbox" ><label for="fc6ec198-9174-4bb4-a7ee-ebeacf58796a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17a07fbf-98ff-4c72-af38-226063312a88" type="checkbox" ><label for="17a07fbf-98ff-4c72-af38-226063312a88" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5348dca7-63fc-4715-b5a1-fdf2c4ee1c2e" type="checkbox" ><label for="5348dca7-63fc-4715-b5a1-fdf2c4ee1c2e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6dd32462-10f8-4ada-af18-f865ab0b5e5c" type="checkbox" ><label for="6dd32462-10f8-4ada-af18-f865ab0b5e5c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c53dc4db-8747-4e69-9af2-ce39270b23a1" type="checkbox" ><label for="c53dc4db-8747-4e69-9af2-ce39270b23a1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d28fae15-085f-4ba1-9b1e-e32416124c6b" type="checkbox" ><label for="d28fae15-085f-4ba1-9b1e-e32416124c6b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df32bbca-6c93-42b0-ae70-129eaad7975a" type="checkbox" ><label for="df32bbca-6c93-42b0-ae70-129eaad7975a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="895cce36-86b9-43d5-b61d-94e571862199" type="checkbox" ><label for="895cce36-86b9-43d5-b61d-94e571862199" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb9c08cd-5f33-4207-8d74-0a25c4f91b41" type="checkbox" ><label for="bb9c08cd-5f33-4207-8d74-0a25c4f91b41" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.077 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
