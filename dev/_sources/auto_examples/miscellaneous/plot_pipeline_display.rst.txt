
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 {color: black;background-color: white;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 pre{padding: 0;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-toggleable {background-color: white;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-item {z-index: 1;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-parallel-item:only-child::after {width: 0;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fb512eea-36c8-40bf-b341-04bcbd5ac6d5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15ea4d7a-9d56-487b-b46c-0081e8c9decd" type="checkbox" ><label for="15ea4d7a-9d56-487b-b46c-0081e8c9decd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cde723d2-235d-4fa8-841d-49f71944d9db" type="checkbox" ><label for="cde723d2-235d-4fa8-841d-49f71944d9db" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed99b99d-11e8-40c3-823f-345200e01595" type="checkbox" ><label for="ed99b99d-11e8-40c3-823f-345200e01595" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 {color: black;background-color: white;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 pre{padding: 0;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-toggleable {background-color: white;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-item {z-index: 1;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-parallel-item:only-child::after {width: 0;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d96f5bf8-de98-4774-b59e-cf24af398be9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d96f5bf8-de98-4774-b59e-cf24af398be9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1042fa81-f193-4886-ad97-20e2c62c680b" type="checkbox" ><label for="1042fa81-f193-4886-ad97-20e2c62c680b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7717f28d-94e4-4604-8785-65d0034ceba3" type="checkbox" ><label for="7717f28d-94e4-4604-8785-65d0034ceba3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccc01bb6-b1fb-48e7-a2d7-2981019f4170" type="checkbox" ><label for="ccc01bb6-b1fb-48e7-a2d7-2981019f4170" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4dfc692d-1e0f-474c-ad4d-2d27be689907" type="checkbox" ><label for="4dfc692d-1e0f-474c-ad4d-2d27be689907" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 {color: black;background-color: white;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 pre{padding: 0;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-toggleable {background-color: white;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-estimator:hover {background-color: #d4ebff;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-item {z-index: 1;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-parallel-item:only-child::after {width: 0;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-97f7f5a4-65ba-4d48-90c0-b568719e0015 div.sk-text-repr-fallback {display: none;}</style><div id="sk-97f7f5a4-65ba-4d48-90c0-b568719e0015" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5b004be-00f3-40d8-aed4-0169eb886b1b" type="checkbox" ><label for="c5b004be-00f3-40d8-aed4-0169eb886b1b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2d5937a-59d0-4bb5-b802-c1c743dd4d17" type="checkbox" ><label for="f2d5937a-59d0-4bb5-b802-c1c743dd4d17" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3184ae14-d85c-4792-ba58-7b4b4fd30268" type="checkbox" ><label for="3184ae14-d85c-4792-ba58-7b4b4fd30268" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 {color: black;background-color: white;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 pre{padding: 0;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-toggleable {background-color: white;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-item {z-index: 1;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-parallel-item:only-child::after {width: 0;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b6cae070-a399-4cd6-96b7-86fe9a387022 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b6cae070-a399-4cd6-96b7-86fe9a387022" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c9d2259-95f3-4e5f-9c35-9fd0175d18ac" type="checkbox" ><label for="4c9d2259-95f3-4e5f-9c35-9fd0175d18ac" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3a0f0eb-ff5d-4bb0-97d8-49da26892cec" type="checkbox" ><label for="d3a0f0eb-ff5d-4bb0-97d8-49da26892cec" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad67e76c-b46f-47d7-9958-73ea75e07590" type="checkbox" ><label for="ad67e76c-b46f-47d7-9958-73ea75e07590" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e80cb21-05fa-4a3e-bfb5-5ef07ea4fdb1" type="checkbox" ><label for="1e80cb21-05fa-4a3e-bfb5-5ef07ea4fdb1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b71bb58-f7fa-4720-9283-6506b3e14ec6" type="checkbox" ><label for="1b71bb58-f7fa-4720-9283-6506b3e14ec6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b2751e6-718c-4c25-84e8-48027272c681" type="checkbox" ><label for="7b2751e6-718c-4c25-84e8-48027272c681" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b039160d-ea70-49b9-8241-2cf458ffbb8f" type="checkbox" ><label for="b039160d-ea70-49b9-8241-2cf458ffbb8f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0da2df2f-8f0c-4315-a84a-d73b86538738" type="checkbox" ><label for="0da2df2f-8f0c-4315-a84a-d73b86538738" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="640e28d3-346c-4ba9-bb00-12a1327d705f" type="checkbox" ><label for="640e28d3-346c-4ba9-bb00-12a1327d705f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-21370c8f-a916-42c4-ab5f-c39938733063 {color: black;background-color: white;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 pre{padding: 0;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-toggleable {background-color: white;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-estimator:hover {background-color: #d4ebff;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-item {z-index: 1;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-parallel-item:only-child::after {width: 0;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-21370c8f-a916-42c4-ab5f-c39938733063 div.sk-text-repr-fallback {display: none;}</style><div id="sk-21370c8f-a916-42c4-ab5f-c39938733063" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9819e40f-409f-4a7a-a962-f85aece52c90" type="checkbox" ><label for="9819e40f-409f-4a7a-a962-f85aece52c90" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e800546-b940-4e80-acd6-62ffa0860184" type="checkbox" ><label for="6e800546-b940-4e80-acd6-62ffa0860184" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f3307db-5b96-47fd-82a6-4934fd22ea6f" type="checkbox" ><label for="9f3307db-5b96-47fd-82a6-4934fd22ea6f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd98f6c9-448d-4838-8ba6-89b775a9c378" type="checkbox" ><label for="dd98f6c9-448d-4838-8ba6-89b775a9c378" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41871ee8-218e-4afe-b621-d78cc0b5943f" type="checkbox" ><label for="41871ee8-218e-4afe-b621-d78cc0b5943f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57bd5af8-543c-41e8-9391-3257c8e2e6e3" type="checkbox" ><label for="57bd5af8-543c-41e8-9391-3257c8e2e6e3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfc23203-22b1-4604-9947-b6f58555f4b2" type="checkbox" ><label for="dfc23203-22b1-4604-9947-b6f58555f4b2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6bb83c4-06fe-4660-8644-62305a26f9cf" type="checkbox" ><label for="d6bb83c4-06fe-4660-8644-62305a26f9cf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2aea4ea3-4472-48da-8dbb-c9a7e06e2dee" type="checkbox" ><label for="2aea4ea3-4472-48da-8dbb-c9a7e06e2dee" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
