
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 {color: black;background-color: white;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 pre{padding: 0;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-toggleable {background-color: white;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-item {z-index: 1;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-parallel-item:only-child::after {width: 0;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0cd2dfa5-dedb-4a34-b63c-a2f7a7aa8106" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1433faa-4473-442f-96fe-951cdf5a6b8c" type="checkbox" ><label for="e1433faa-4473-442f-96fe-951cdf5a6b8c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9d854ca-f6e7-4859-bba9-4283b091706a" type="checkbox" ><label for="c9d854ca-f6e7-4859-bba9-4283b091706a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c748ed88-087f-4682-b563-c0344f39abb5" type="checkbox" ><label for="c748ed88-087f-4682-b563-c0344f39abb5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-64fe8288-a087-47f5-899d-9977330eb7b5 {color: black;background-color: white;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 pre{padding: 0;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-toggleable {background-color: white;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-item {z-index: 1;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-parallel-item:only-child::after {width: 0;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-64fe8288-a087-47f5-899d-9977330eb7b5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-64fe8288-a087-47f5-899d-9977330eb7b5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d98ac3d-1317-43ea-8345-a73954d15eae" type="checkbox" ><label for="3d98ac3d-1317-43ea-8345-a73954d15eae" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="213d30b7-381c-461c-8763-ff7f090cbcff" type="checkbox" ><label for="213d30b7-381c-461c-8763-ff7f090cbcff" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b97374ae-fb1d-4b22-9e98-b59c2cea4385" type="checkbox" ><label for="b97374ae-fb1d-4b22-9e98-b59c2cea4385" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="957b1687-d68b-4a59-8b83-331e5595c086" type="checkbox" ><label for="957b1687-d68b-4a59-8b83-331e5595c086" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 {color: black;background-color: white;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 pre{padding: 0;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-toggleable {background-color: white;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-item {z-index: 1;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-parallel-item:only-child::after {width: 0;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-99a4fd9d-cfa6-49b1-8f71-072e1ed2a1d5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d6628cf-1c62-4726-b203-3c93c5349c6f" type="checkbox" ><label for="9d6628cf-1c62-4726-b203-3c93c5349c6f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05e69dbc-4516-4931-8652-7373a6f18ada" type="checkbox" ><label for="05e69dbc-4516-4931-8652-7373a6f18ada" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f617661-e6b2-45f0-b3c5-2fc42a342ac7" type="checkbox" ><label for="7f617661-e6b2-45f0-b3c5-2fc42a342ac7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d {color: black;background-color: white;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d pre{padding: 0;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-toggleable {background-color: white;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-estimator:hover {background-color: #d4ebff;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-item {z-index: 1;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-parallel-item:only-child::after {width: 0;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d div.sk-text-repr-fallback {display: none;}</style><div id="sk-2a294623-9d7c-4d6d-a593-3e2574e8fe9d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0c86e9e-76bb-40bb-b669-deb2f38f021c" type="checkbox" ><label for="c0c86e9e-76bb-40bb-b669-deb2f38f021c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de976007-1a92-4971-ab7f-6bdfd92ef93a" type="checkbox" ><label for="de976007-1a92-4971-ab7f-6bdfd92ef93a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98778af6-5379-4319-a6a1-e60f3e049778" type="checkbox" ><label for="98778af6-5379-4319-a6a1-e60f3e049778" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f7b1f50-4066-438c-86ac-a93a6521765b" type="checkbox" ><label for="1f7b1f50-4066-438c-86ac-a93a6521765b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b4577d0-46f0-4984-b833-6279c592d7de" type="checkbox" ><label for="6b4577d0-46f0-4984-b833-6279c592d7de" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78578ea0-3fc1-448a-ba1b-9215a660462c" type="checkbox" ><label for="78578ea0-3fc1-448a-ba1b-9215a660462c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73f56329-9c5b-42e2-bd08-680d0d8f7f48" type="checkbox" ><label for="73f56329-9c5b-42e2-bd08-680d0d8f7f48" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ab75ac7-e4bb-4332-878a-5c47ffad3f5f" type="checkbox" ><label for="8ab75ac7-e4bb-4332-878a-5c47ffad3f5f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c205b33f-646e-4098-a807-0bdc25c445d7" type="checkbox" ><label for="c205b33f-646e-4098-a807-0bdc25c445d7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c {color: black;background-color: white;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c pre{padding: 0;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-toggleable {background-color: white;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-estimator:hover {background-color: #d4ebff;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-item {z-index: 1;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-parallel-item:only-child::after {width: 0;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-354d711b-b31a-40a1-9c4e-671bd8436d9c div.sk-text-repr-fallback {display: none;}</style><div id="sk-354d711b-b31a-40a1-9c4e-671bd8436d9c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43133994-a3b2-498c-a350-9c7414b6ea00" type="checkbox" ><label for="43133994-a3b2-498c-a350-9c7414b6ea00" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="941f3367-bef4-4dbd-a982-2170648c0de5" type="checkbox" ><label for="941f3367-bef4-4dbd-a982-2170648c0de5" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41283796-974f-47c4-b852-c869359f55ff" type="checkbox" ><label for="41283796-974f-47c4-b852-c869359f55ff" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e31662d-7def-4d87-9a77-3abe5b1d5c50" type="checkbox" ><label for="0e31662d-7def-4d87-9a77-3abe5b1d5c50" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="436647a4-fbf4-4a17-b1d7-14fe93e08f61" type="checkbox" ><label for="436647a4-fbf4-4a17-b1d7-14fe93e08f61" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54628172-4bb0-491a-8a86-ebaab5e5d74f" type="checkbox" ><label for="54628172-4bb0-491a-8a86-ebaab5e5d74f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="995e7c22-d797-4bc5-ae3e-16d32b4b86f8" type="checkbox" ><label for="995e7c22-d797-4bc5-ae3e-16d32b4b86f8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74435e3c-9630-4676-8b86-f1a09bd25e25" type="checkbox" ><label for="74435e3c-9630-4676-8b86-f1a09bd25e25" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="286382dc-2e8c-4664-a5be-5e6b0de768c1" type="checkbox" ><label for="286382dc-2e8c-4664-a5be-5e6b0de768c1" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
